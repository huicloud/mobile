// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzhyun.stkdata.proto

package com.dzhyun.proto;

public final class DzhyunStkdata {
  private DzhyunStkdata() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface StkDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dzhyun.StkData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string Obj = 1;</code>
     *
     * <pre>
     * 股票代码，如 SH600000 不推送
     * </pre>
     */
    boolean hasObj();
    /**
     * <code>required string Obj = 1;</code>
     *
     * <pre>
     * 股票代码，如 SH600000 不推送
     * </pre>
     */
    java.lang.String getObj();
    /**
     * <code>required string Obj = 1;</code>
     *
     * <pre>
     * 股票代码，如 SH600000 不推送
     * </pre>
     */
    com.google.protobuf.ByteString
        getObjBytes();

    /**
     * <code>optional string JiaoYiDaiMa = 2;</code>
     *
     * <pre>
     * 股票标签，如 600000 不推送
     * </pre>
     */
    boolean hasJiaoYiDaiMa();
    /**
     * <code>optional string JiaoYiDaiMa = 2;</code>
     *
     * <pre>
     * 股票标签，如 600000 不推送
     * </pre>
     */
    java.lang.String getJiaoYiDaiMa();
    /**
     * <code>optional string JiaoYiDaiMa = 2;</code>
     *
     * <pre>
     * 股票标签，如 600000 不推送
     * </pre>
     */
    com.google.protobuf.ByteString
        getJiaoYiDaiMaBytes();

    /**
     * <code>optional string ZhongWenJianCheng = 3;</code>
     *
     * <pre>
     * 名称 不推送
     * </pre>
     */
    boolean hasZhongWenJianCheng();
    /**
     * <code>optional string ZhongWenJianCheng = 3;</code>
     *
     * <pre>
     * 名称 不推送
     * </pre>
     */
    java.lang.String getZhongWenJianCheng();
    /**
     * <code>optional string ZhongWenJianCheng = 3;</code>
     *
     * <pre>
     * 名称 不推送
     * </pre>
     */
    com.google.protobuf.ByteString
        getZhongWenJianChengBytes();

    /**
     * <code>optional int64 ZuiXinJia = 4;</code>
     *
     * <pre>
     * 以下动态行情
     * </pre>
     */
    boolean hasZuiXinJia();
    /**
     * <code>optional int64 ZuiXinJia = 4;</code>
     *
     * <pre>
     * 以下动态行情
     * </pre>
     */
    long getZuiXinJia();

    /**
     * <code>optional int64 KaiPanJia = 5;</code>
     *
     * <pre>
     * 开盘 元 推送
     * </pre>
     */
    boolean hasKaiPanJia();
    /**
     * <code>optional int64 KaiPanJia = 5;</code>
     *
     * <pre>
     * 开盘 元 推送
     * </pre>
     */
    long getKaiPanJia();

    /**
     * <code>optional int64 ZuiGaoJia = 6;</code>
     *
     * <pre>
     * 最高 元 推送
     * </pre>
     */
    boolean hasZuiGaoJia();
    /**
     * <code>optional int64 ZuiGaoJia = 6;</code>
     *
     * <pre>
     * 最高 元 推送
     * </pre>
     */
    long getZuiGaoJia();

    /**
     * <code>optional int64 ZuiDiJia = 7;</code>
     *
     * <pre>
     * 最低 元 推送
     * </pre>
     */
    boolean hasZuiDiJia();
    /**
     * <code>optional int64 ZuiDiJia = 7;</code>
     *
     * <pre>
     * 最低 元 推送
     * </pre>
     */
    long getZuiDiJia();

    /**
     * <code>optional int64 ZuoShou = 8;</code>
     *
     * <pre>
     * NUM 昨收 元 推送
     * </pre>
     */
    boolean hasZuoShou();
    /**
     * <code>optional int64 ZuoShou = 8;</code>
     *
     * <pre>
     * NUM 昨收 元 推送
     * </pre>
     */
    long getZuoShou();

    /**
     * <code>optional int64 JunJia = 9;</code>
     *
     * <pre>
     * NUM 均价 元 推送
     * </pre>
     */
    boolean hasJunJia();
    /**
     * <code>optional int64 JunJia = 9;</code>
     *
     * <pre>
     * NUM 均价 元 推送
     * </pre>
     */
    long getJunJia();

    /**
     * <code>optional int64 ZhangDie = 10;</code>
     *
     * <pre>
     * NUM 涨跌 元 推送
     * </pre>
     */
    boolean hasZhangDie();
    /**
     * <code>optional int64 ZhangDie = 10;</code>
     *
     * <pre>
     * NUM 涨跌 元 推送
     * </pre>
     */
    long getZhangDie();

    /**
     * <code>optional int64 ZhangFu = 11;</code>
     *
     * <pre>
     * NUM 涨幅 % 推送
     * </pre>
     */
    boolean hasZhangFu();
    /**
     * <code>optional int64 ZhangFu = 11;</code>
     *
     * <pre>
     * NUM 涨幅 % 推送
     * </pre>
     */
    long getZhangFu();

    /**
     * <code>optional int64 ZhenFu = 12;</code>
     *
     * <pre>
     * NUM 振幅 % 推送
     * </pre>
     */
    boolean hasZhenFu();
    /**
     * <code>optional int64 ZhenFu = 12;</code>
     *
     * <pre>
     * NUM 振幅 % 推送
     * </pre>
     */
    long getZhenFu();

    /**
     * <code>optional int64 ChengJiaoLiang = 13;</code>
     *
     * <pre>
     * NUM 总手 手 推送（总手-总成交量，单位股）
     * </pre>
     */
    boolean hasChengJiaoLiang();
    /**
     * <code>optional int64 ChengJiaoLiang = 13;</code>
     *
     * <pre>
     * NUM 总手 手 推送（总手-总成交量，单位股）
     * </pre>
     */
    long getChengJiaoLiang();

    /**
     * <code>optional int64 XianShou = 14;</code>
     *
     * <pre>
     * NUM 现手 手 推送（现手-最新一笔交量，单位股）
     * </pre>
     */
    boolean hasXianShou();
    /**
     * <code>optional int64 XianShou = 14;</code>
     *
     * <pre>
     * NUM 现手 手 推送（现手-最新一笔交量，单位股）
     * </pre>
     */
    long getXianShou();

    /**
     * <code>optional int64 ChengJiaoE = 15;</code>
     *
     * <pre>
     * NUM 成交额 万元 推送
     * </pre>
     */
    boolean hasChengJiaoE();
    /**
     * <code>optional int64 ChengJiaoE = 15;</code>
     *
     * <pre>
     * NUM 成交额 万元 推送
     * </pre>
     */
    long getChengJiaoE();

    /**
     * <code>optional int64 ZongChengJiaoBiShu = 16;</code>
     *
     * <pre>
     * 总成交笔数
     * </pre>
     */
    boolean hasZongChengJiaoBiShu();
    /**
     * <code>optional int64 ZongChengJiaoBiShu = 16;</code>
     *
     * <pre>
     * 总成交笔数
     * </pre>
     */
    long getZongChengJiaoBiShu();

    /**
     * <code>optional int64 MeiBiChengJiaoGuShu = 17;</code>
     *
     * <pre>
     * 每笔成交股数
     * </pre>
     */
    boolean hasMeiBiChengJiaoGuShu();
    /**
     * <code>optional int64 MeiBiChengJiaoGuShu = 17;</code>
     *
     * <pre>
     * 每笔成交股数
     * </pre>
     */
    long getMeiBiChengJiaoGuShu();

    /**
     * <code>optional int64 HuanShou = 18;</code>
     *
     * <pre>
     * 换手,千分比
     * </pre>
     */
    boolean hasHuanShou();
    /**
     * <code>optional int64 HuanShou = 18;</code>
     *
     * <pre>
     * 换手,千分比
     * </pre>
     */
    long getHuanShou();

    /**
     * <code>optional int64 LiangBi = 19;</code>
     *
     * <pre>
     * 量比,千分比
     * </pre>
     */
    boolean hasLiangBi();
    /**
     * <code>optional int64 LiangBi = 19;</code>
     *
     * <pre>
     * 量比,千分比
     * </pre>
     */
    long getLiangBi();

    /**
     * <code>optional int64 NeiPan = 20;</code>
     *
     * <pre>
     * NUM 内盘 手 推送
     * </pre>
     */
    boolean hasNeiPan();
    /**
     * <code>optional int64 NeiPan = 20;</code>
     *
     * <pre>
     * NUM 内盘 手 推送
     * </pre>
     */
    long getNeiPan();

    /**
     * <code>optional int64 WaiPan = 21;</code>
     *
     * <pre>
     * NUM 外盘 手 推送
     * </pre>
     */
    boolean hasWaiPan();
    /**
     * <code>optional int64 WaiPan = 21;</code>
     *
     * <pre>
     * NUM 外盘 手 推送
     * </pre>
     */
    long getWaiPan();

    /**
     * <code>optional int64 ZongMaiRu = 22;</code>
     *
     * <pre>
     * 以下L2
     * </pre>
     */
    boolean hasZongMaiRu();
    /**
     * <code>optional int64 ZongMaiRu = 22;</code>
     *
     * <pre>
     * 以下L2
     * </pre>
     */
    long getZongMaiRu();

    /**
     * <code>optional int64 ZongMaiChu = 23;</code>
     *
     * <pre>
     * 总卖
     * </pre>
     */
    boolean hasZongMaiChu();
    /**
     * <code>optional int64 ZongMaiChu = 23;</code>
     *
     * <pre>
     * 总卖
     * </pre>
     */
    long getZongMaiChu();

    /**
     * <code>optional int64 ZongMaiRuJunJia = 24;</code>
     *
     * <pre>
     * 总买均价
     * </pre>
     */
    boolean hasZongMaiRuJunJia();
    /**
     * <code>optional int64 ZongMaiRuJunJia = 24;</code>
     *
     * <pre>
     * 总买均价
     * </pre>
     */
    long getZongMaiRuJunJia();

    /**
     * <code>optional int64 ZongMaiChuJunJia = 25;</code>
     *
     * <pre>
     * 总卖均价
     * </pre>
     */
    boolean hasZongMaiChuJunJia();
    /**
     * <code>optional int64 ZongMaiChuJunJia = 25;</code>
     *
     * <pre>
     * 总卖均价
     * </pre>
     */
    long getZongMaiChuJunJia();

    /**
     * <code>optional int64 WeiTuoMaiRuJia1 = 26;</code>
     *
     * <pre>
     * 以下买卖盘
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia1();
    /**
     * <code>optional int64 WeiTuoMaiRuJia1 = 26;</code>
     *
     * <pre>
     * 以下买卖盘
     * </pre>
     */
    long getWeiTuoMaiRuJia1();

    /**
     * <code>optional int64 WeiTuoMaiRuJia2 = 27;</code>
     *
     * <pre>
     * 买二价
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia2();
    /**
     * <code>optional int64 WeiTuoMaiRuJia2 = 27;</code>
     *
     * <pre>
     * 买二价
     * </pre>
     */
    long getWeiTuoMaiRuJia2();

    /**
     * <code>optional int64 WeiTuoMaiRuJia3 = 28;</code>
     *
     * <pre>
     * 买三价
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia3();
    /**
     * <code>optional int64 WeiTuoMaiRuJia3 = 28;</code>
     *
     * <pre>
     * 买三价
     * </pre>
     */
    long getWeiTuoMaiRuJia3();

    /**
     * <code>optional int64 WeiTuoMaiRuJia4 = 29;</code>
     *
     * <pre>
     * 买四价
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia4();
    /**
     * <code>optional int64 WeiTuoMaiRuJia4 = 29;</code>
     *
     * <pre>
     * 买四价
     * </pre>
     */
    long getWeiTuoMaiRuJia4();

    /**
     * <code>optional int64 WeiTuoMaiRuJia5 = 30;</code>
     *
     * <pre>
     * 买五价
     * </pre>
     */
    boolean hasWeiTuoMaiRuJia5();
    /**
     * <code>optional int64 WeiTuoMaiRuJia5 = 30;</code>
     *
     * <pre>
     * 买五价
     * </pre>
     */
    long getWeiTuoMaiRuJia5();

    /**
     * <code>optional int64 WeiTuoMaiRuLiang1 = 31;</code>
     *
     * <pre>
     * 买一量
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang1();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang1 = 31;</code>
     *
     * <pre>
     * 买一量
     * </pre>
     */
    long getWeiTuoMaiRuLiang1();

    /**
     * <code>optional int64 WeiTuoMaiRuLiang2 = 32;</code>
     *
     * <pre>
     * 买二量
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang2();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang2 = 32;</code>
     *
     * <pre>
     * 买二量
     * </pre>
     */
    long getWeiTuoMaiRuLiang2();

    /**
     * <code>optional int64 WeiTuoMaiRuLiang3 = 33;</code>
     *
     * <pre>
     * 买三量
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang3();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang3 = 33;</code>
     *
     * <pre>
     * 买三量
     * </pre>
     */
    long getWeiTuoMaiRuLiang3();

    /**
     * <code>optional int64 WeiTuoMaiRuLiang4 = 34;</code>
     *
     * <pre>
     * 买四量
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang4();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang4 = 34;</code>
     *
     * <pre>
     * 买四量
     * </pre>
     */
    long getWeiTuoMaiRuLiang4();

    /**
     * <code>optional int64 WeiTuoMaiRuLiang5 = 35;</code>
     *
     * <pre>
     * 买五量
     * </pre>
     */
    boolean hasWeiTuoMaiRuLiang5();
    /**
     * <code>optional int64 WeiTuoMaiRuLiang5 = 35;</code>
     *
     * <pre>
     * 买五量
     * </pre>
     */
    long getWeiTuoMaiRuLiang5();

    /**
     * <code>optional int64 WeiTuoMaiChuJia1 = 36;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia1();
    /**
     * <code>optional int64 WeiTuoMaiChuJia1 = 36;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    long getWeiTuoMaiChuJia1();

    /**
     * <code>optional int64 WeiTuoMaiChuJia2 = 37;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia2();
    /**
     * <code>optional int64 WeiTuoMaiChuJia2 = 37;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    long getWeiTuoMaiChuJia2();

    /**
     * <code>optional int64 WeiTuoMaiChuJia3 = 38;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia3();
    /**
     * <code>optional int64 WeiTuoMaiChuJia3 = 38;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    long getWeiTuoMaiChuJia3();

    /**
     * <code>optional int64 WeiTuoMaiChuJia4 = 39;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia4();
    /**
     * <code>optional int64 WeiTuoMaiChuJia4 = 39;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    long getWeiTuoMaiChuJia4();

    /**
     * <code>optional int64 WeiTuoMaiChuJia5 = 40;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    boolean hasWeiTuoMaiChuJia5();
    /**
     * <code>optional int64 WeiTuoMaiChuJia5 = 40;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    long getWeiTuoMaiChuJia5();

    /**
     * <code>optional int64 WeiTuoMaiChuLiang1 = 41;</code>
     *
     * <pre>
     * 卖一量
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang1();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang1 = 41;</code>
     *
     * <pre>
     * 卖一量
     * </pre>
     */
    long getWeiTuoMaiChuLiang1();

    /**
     * <code>optional int64 WeiTuoMaiChuLiang2 = 42;</code>
     *
     * <pre>
     * 卖二量
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang2();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang2 = 42;</code>
     *
     * <pre>
     * 卖二量
     * </pre>
     */
    long getWeiTuoMaiChuLiang2();

    /**
     * <code>optional int64 WeiTuoMaiChuLiang3 = 43;</code>
     *
     * <pre>
     * 卖三量
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang3();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang3 = 43;</code>
     *
     * <pre>
     * 卖三量
     * </pre>
     */
    long getWeiTuoMaiChuLiang3();

    /**
     * <code>optional int64 WeiTuoMaiChuLiang4 = 44;</code>
     *
     * <pre>
     * 卖四量
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang4();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang4 = 44;</code>
     *
     * <pre>
     * 卖四量
     * </pre>
     */
    long getWeiTuoMaiChuLiang4();

    /**
     * <code>optional int64 WeiTuoMaiChuLiang5 = 45;</code>
     *
     * <pre>
     * 卖五量
     * </pre>
     */
    boolean hasWeiTuoMaiChuLiang5();
    /**
     * <code>optional int64 WeiTuoMaiChuLiang5 = 45;</code>
     *
     * <pre>
     * 卖五量
     * </pre>
     */
    long getWeiTuoMaiChuLiang5();

    /**
     * <code>optional int64 WeiBi = 46;</code>
     *
     * <pre>
     * 需要计算
     * </pre>
     */
    boolean hasWeiBi();
    /**
     * <code>optional int64 WeiBi = 46;</code>
     *
     * <pre>
     * 需要计算
     * </pre>
     */
    long getWeiBi();

    /**
     * <code>optional int64 WeiCha = 47;</code>
     *
     * <pre>
     * 委差
     * </pre>
     */
    boolean hasWeiCha();
    /**
     * <code>optional int64 WeiCha = 47;</code>
     *
     * <pre>
     * 委差
     * </pre>
     */
    long getWeiCha();

    /**
     * <code>optional int64 ZhangSu = 48;</code>
     *
     * <pre>
     * 涨速
     * </pre>
     */
    boolean hasZhangSu();
    /**
     * <code>optional int64 ZhangSu = 48;</code>
     *
     * <pre>
     * 涨速
     * </pre>
     */
    long getZhangSu();

    /**
     * <code>optional int64 JunLiang5Ri = 49;</code>
     *
     * <pre>
     * 5日均量
     * </pre>
     */
    boolean hasJunLiang5Ri();
    /**
     * <code>optional int64 JunLiang5Ri = 49;</code>
     *
     * <pre>
     * 5日均量
     * </pre>
     */
    long getJunLiang5Ri();

    /**
     * <code>optional int64 ShangZhangJiaShu = 50;</code>
     *
     * <pre>
     * 所在市场的上涨家数
     * </pre>
     */
    boolean hasShangZhangJiaShu();
    /**
     * <code>optional int64 ShangZhangJiaShu = 50;</code>
     *
     * <pre>
     * 所在市场的上涨家数
     * </pre>
     */
    long getShangZhangJiaShu();

    /**
     * <code>optional int64 XiaDieJiaShu = 51;</code>
     *
     * <pre>
     * 所在市场的下跌家数
     * </pre>
     */
    boolean hasXiaDieJiaShu();
    /**
     * <code>optional int64 XiaDieJiaShu = 51;</code>
     *
     * <pre>
     * 所在市场的下跌家数
     * </pre>
     */
    long getXiaDieJiaShu();

    /**
     * <code>optional int64 PingPanJiaShu = 52;</code>
     *
     * <pre>
     * 所在市场的平盘家数
     * </pre>
     */
    boolean hasPingPanJiaShu();
    /**
     * <code>optional int64 PingPanJiaShu = 52;</code>
     *
     * <pre>
     * 所在市场的平盘家数
     * </pre>
     */
    long getPingPanJiaShu();

    /**
     * <code>optional int64 AGuShangZhangJiaShu = 53;</code>
     *
     * <pre>
     * 所在市场的A股上涨家数
     * </pre>
     */
    boolean hasAGuShangZhangJiaShu();
    /**
     * <code>optional int64 AGuShangZhangJiaShu = 53;</code>
     *
     * <pre>
     * 所在市场的A股上涨家数
     * </pre>
     */
    long getAGuShangZhangJiaShu();

    /**
     * <code>optional int64 AGuXiaDieJiaShu = 54;</code>
     *
     * <pre>
     * 所在市场的A股下跌家数
     * </pre>
     */
    boolean hasAGuXiaDieJiaShu();
    /**
     * <code>optional int64 AGuXiaDieJiaShu = 54;</code>
     *
     * <pre>
     * 所在市场的A股下跌家数
     * </pre>
     */
    long getAGuXiaDieJiaShu();

    /**
     * <code>optional int64 AGuPingPanJiaShu = 55;</code>
     *
     * <pre>
     * 所在市场的A股平盘家数
     * </pre>
     */
    boolean hasAGuPingPanJiaShu();
    /**
     * <code>optional int64 AGuPingPanJiaShu = 55;</code>
     *
     * <pre>
     * 所在市场的A股平盘家数
     * </pre>
     */
    long getAGuPingPanJiaShu();

    /**
     * <code>optional int64 AGuChengJiaoE = 56;</code>
     *
     * <pre>
     * 所在市场的A股成交额(亿)
     * </pre>
     */
    boolean hasAGuChengJiaoE();
    /**
     * <code>optional int64 AGuChengJiaoE = 56;</code>
     *
     * <pre>
     * 所在市场的A股成交额(亿)
     * </pre>
     */
    long getAGuChengJiaoE();

    /**
     * <code>optional int64 BGuShangZhangJiaShu = 57;</code>
     *
     * <pre>
     * 所在市场的B股上涨家数
     * </pre>
     */
    boolean hasBGuShangZhangJiaShu();
    /**
     * <code>optional int64 BGuShangZhangJiaShu = 57;</code>
     *
     * <pre>
     * 所在市场的B股上涨家数
     * </pre>
     */
    long getBGuShangZhangJiaShu();

    /**
     * <code>optional int64 BGuXiaDieJiaShu = 58;</code>
     *
     * <pre>
     * 所在市场的B股下跌家数
     * </pre>
     */
    boolean hasBGuXiaDieJiaShu();
    /**
     * <code>optional int64 BGuXiaDieJiaShu = 58;</code>
     *
     * <pre>
     * 所在市场的B股下跌家数
     * </pre>
     */
    long getBGuXiaDieJiaShu();

    /**
     * <code>optional int64 BGuPingPanJiaShu = 59;</code>
     *
     * <pre>
     * 所在市场的B股平盘家数
     * </pre>
     */
    boolean hasBGuPingPanJiaShu();
    /**
     * <code>optional int64 BGuPingPanJiaShu = 59;</code>
     *
     * <pre>
     * 所在市场的B股平盘家数
     * </pre>
     */
    long getBGuPingPanJiaShu();

    /**
     * <code>optional int64 BGuChengJiaoE = 60;</code>
     *
     * <pre>
     * 所在市场的B股成交额(亿)
     * </pre>
     */
    boolean hasBGuChengJiaoE();
    /**
     * <code>optional int64 BGuChengJiaoE = 60;</code>
     *
     * <pre>
     * 所在市场的B股成交额(亿)
     * </pre>
     */
    long getBGuChengJiaoE();

    /**
     * <code>optional int64 JiJinShangZhangJiaShu = 61;</code>
     *
     * <pre>
     * 所在市场的基金上涨家数
     * </pre>
     */
    boolean hasJiJinShangZhangJiaShu();
    /**
     * <code>optional int64 JiJinShangZhangJiaShu = 61;</code>
     *
     * <pre>
     * 所在市场的基金上涨家数
     * </pre>
     */
    long getJiJinShangZhangJiaShu();

    /**
     * <code>optional int64 JiJinXiaDieJiaShu = 62;</code>
     *
     * <pre>
     * 所在市场的基金下跌家数
     * </pre>
     */
    boolean hasJiJinXiaDieJiaShu();
    /**
     * <code>optional int64 JiJinXiaDieJiaShu = 62;</code>
     *
     * <pre>
     * 所在市场的基金下跌家数
     * </pre>
     */
    long getJiJinXiaDieJiaShu();

    /**
     * <code>optional int64 JiJinPingPanJiaShu = 63;</code>
     *
     * <pre>
     * 所在市场的基金平盘家数
     * </pre>
     */
    boolean hasJiJinPingPanJiaShu();
    /**
     * <code>optional int64 JiJinPingPanJiaShu = 63;</code>
     *
     * <pre>
     * 所在市场的基金平盘家数
     * </pre>
     */
    long getJiJinPingPanJiaShu();

    /**
     * <code>optional int64 JiJinChengJiaoE = 64;</code>
     *
     * <pre>
     * 所在市场的基金成交额(亿)
     * </pre>
     */
    boolean hasJiJinChengJiaoE();
    /**
     * <code>optional int64 JiJinChengJiaoE = 64;</code>
     *
     * <pre>
     * 所在市场的基金成交额(亿)
     * </pre>
     */
    long getJiJinChengJiaoE();

    /**
     * <code>optional int64 QiTaShangZhangJiaShu = 65;</code>
     *
     * <pre>
     * 所在市场的其他上涨家数
     * </pre>
     */
    boolean hasQiTaShangZhangJiaShu();
    /**
     * <code>optional int64 QiTaShangZhangJiaShu = 65;</code>
     *
     * <pre>
     * 所在市场的其他上涨家数
     * </pre>
     */
    long getQiTaShangZhangJiaShu();

    /**
     * <code>optional int64 QiTaXiaDieJiaShu = 66;</code>
     *
     * <pre>
     * 所在市场的其他下跌家数
     * </pre>
     */
    boolean hasQiTaXiaDieJiaShu();
    /**
     * <code>optional int64 QiTaXiaDieJiaShu = 66;</code>
     *
     * <pre>
     * 所在市场的其他下跌家数
     * </pre>
     */
    long getQiTaXiaDieJiaShu();

    /**
     * <code>optional int64 QiTaPingPanJiaShu = 67;</code>
     *
     * <pre>
     * 所在市场的其他平盘家数
     * </pre>
     */
    boolean hasQiTaPingPanJiaShu();
    /**
     * <code>optional int64 QiTaPingPanJiaShu = 67;</code>
     *
     * <pre>
     * 所在市场的其他平盘家数
     * </pre>
     */
    long getQiTaPingPanJiaShu();

    /**
     * <code>optional int64 QiTaChengJiaoE = 68;</code>
     *
     * <pre>
     * 所在市场的其他成交额(亿)
     * </pre>
     */
    boolean hasQiTaChengJiaoE();
    /**
     * <code>optional int64 QiTaChengJiaoE = 68;</code>
     *
     * <pre>
     * 所在市场的其他成交额(亿)
     * </pre>
     */
    long getQiTaChengJiaoE();

    /**
     * <code>optional int64 MaiRuDanShu = 69;</code>
     *
     * <pre>
     * 买入单数
     * </pre>
     */
    boolean hasMaiRuDanShu();
    /**
     * <code>optional int64 MaiRuDanShu = 69;</code>
     *
     * <pre>
     * 买入单数
     * </pre>
     */
    long getMaiRuDanShu();

    /**
     * <code>optional int64 MaiChuDanShu = 70;</code>
     *
     * <pre>
     * 卖出单数
     * </pre>
     */
    boolean hasMaiChuDanShu();
    /**
     * <code>optional int64 MaiChuDanShu = 70;</code>
     *
     * <pre>
     * 卖出单数
     * </pre>
     */
    long getMaiChuDanShu();

    /**
     * <code>optional int64 MaiRuZhongDanBiLi = 71;</code>
     *
     * <pre>
     * 买入中单比例
     * </pre>
     */
    boolean hasMaiRuZhongDanBiLi();
    /**
     * <code>optional int64 MaiRuZhongDanBiLi = 71;</code>
     *
     * <pre>
     * 买入中单比例
     * </pre>
     */
    long getMaiRuZhongDanBiLi();

    /**
     * <code>optional int64 MaiRuDaDanBiLi = 72;</code>
     *
     * <pre>
     * 买入大单比例
     * </pre>
     */
    boolean hasMaiRuDaDanBiLi();
    /**
     * <code>optional int64 MaiRuDaDanBiLi = 72;</code>
     *
     * <pre>
     * 买入大单比例
     * </pre>
     */
    long getMaiRuDaDanBiLi();

    /**
     * <code>optional int64 MaiRuTeDaDanBiLi = 73;</code>
     *
     * <pre>
     * 买入特大单比例
     * </pre>
     */
    boolean hasMaiRuTeDaDanBiLi();
    /**
     * <code>optional int64 MaiRuTeDaDanBiLi = 73;</code>
     *
     * <pre>
     * 买入特大单比例
     * </pre>
     */
    long getMaiRuTeDaDanBiLi();

    /**
     * <code>optional int64 MaiChuZhongDanBiLi = 74;</code>
     *
     * <pre>
     * 卖出中单比例
     * </pre>
     */
    boolean hasMaiChuZhongDanBiLi();
    /**
     * <code>optional int64 MaiChuZhongDanBiLi = 74;</code>
     *
     * <pre>
     * 卖出中单比例
     * </pre>
     */
    long getMaiChuZhongDanBiLi();

    /**
     * <code>optional int64 MaiChuDaDanBiLi = 75;</code>
     *
     * <pre>
     * 卖出大单比例
     * </pre>
     */
    boolean hasMaiChuDaDanBiLi();
    /**
     * <code>optional int64 MaiChuDaDanBiLi = 75;</code>
     *
     * <pre>
     * 卖出大单比例
     * </pre>
     */
    long getMaiChuDaDanBiLi();

    /**
     * <code>optional int64 MaiChuTeDaDanBiLi = 76;</code>
     *
     * <pre>
     * 卖出特大单比例
     * </pre>
     */
    boolean hasMaiChuTeDaDanBiLi();
    /**
     * <code>optional int64 MaiChuTeDaDanBiLi = 76;</code>
     *
     * <pre>
     * 卖出特大单比例
     * </pre>
     */
    long getMaiChuTeDaDanBiLi();

    /**
     * <code>optional int64 FenZhongZhangFu1 = 77;</code>
     *
     * <pre>
     * 1分钟涨幅
     * </pre>
     */
    boolean hasFenZhongZhangFu1();
    /**
     * <code>optional int64 FenZhongZhangFu1 = 77;</code>
     *
     * <pre>
     * 1分钟涨幅
     * </pre>
     */
    long getFenZhongZhangFu1();

    /**
     * <code>optional int64 FenZhongZhangFu2 = 78;</code>
     *
     * <pre>
     * 2分钟涨幅
     * </pre>
     */
    boolean hasFenZhongZhangFu2();
    /**
     * <code>optional int64 FenZhongZhangFu2 = 78;</code>
     *
     * <pre>
     * 2分钟涨幅
     * </pre>
     */
    long getFenZhongZhangFu2();

    /**
     * <code>optional int64 FenZhongZhangFu3 = 79;</code>
     *
     * <pre>
     * 3分钟涨幅
     * </pre>
     */
    boolean hasFenZhongZhangFu3();
    /**
     * <code>optional int64 FenZhongZhangFu3 = 79;</code>
     *
     * <pre>
     * 3分钟涨幅
     * </pre>
     */
    long getFenZhongZhangFu3();

    /**
     * <code>optional int64 FenZhongZhangFu4 = 80;</code>
     *
     * <pre>
     * 4分钟涨幅
     * </pre>
     */
    boolean hasFenZhongZhangFu4();
    /**
     * <code>optional int64 FenZhongZhangFu4 = 80;</code>
     *
     * <pre>
     * 4分钟涨幅
     * </pre>
     */
    long getFenZhongZhangFu4();

    /**
     * <code>optional int64 FenZhongZhangFu5 = 81;</code>
     *
     * <pre>
     * 5分钟涨幅
     * </pre>
     */
    boolean hasFenZhongZhangFu5();
    /**
     * <code>optional int64 FenZhongZhangFu5 = 81;</code>
     *
     * <pre>
     * 5分钟涨幅
     * </pre>
     */
    long getFenZhongZhangFu5();

    /**
     * <code>optional int64 ShiYingLv = 82;</code>
     *
     * <pre>
     * 市盈率
     * </pre>
     */
    boolean hasShiYingLv();
    /**
     * <code>optional int64 ShiYingLv = 82;</code>
     *
     * <pre>
     * 市盈率
     * </pre>
     */
    long getShiYingLv();

    /**
     * <code>optional int64 ZhangTing = 83;</code>
     *
     * <pre>
     * 涨停
     * </pre>
     */
    boolean hasZhangTing();
    /**
     * <code>optional int64 ZhangTing = 83;</code>
     *
     * <pre>
     * 涨停
     * </pre>
     */
    long getZhangTing();

    /**
     * <code>optional int64 DieTing = 84;</code>
     *
     * <pre>
     * 跌停
     * </pre>
     */
    boolean hasDieTing();
    /**
     * <code>optional int64 DieTing = 84;</code>
     *
     * <pre>
     * 跌停
     * </pre>
     */
    long getDieTing();

    /**
     * <code>optional string ShiChangMingCheng = 85;</code>
     *
     * <pre>
     * 所在市场的市场名称
     * </pre>
     */
    boolean hasShiChangMingCheng();
    /**
     * <code>optional string ShiChangMingCheng = 85;</code>
     *
     * <pre>
     * 所在市场的市场名称
     * </pre>
     */
    java.lang.String getShiChangMingCheng();
    /**
     * <code>optional string ShiChangMingCheng = 85;</code>
     *
     * <pre>
     * 所在市场的市场名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getShiChangMingChengBytes();

    /**
     * <code>optional string ShiChangDuanMingCheng = 86;</code>
     *
     * <pre>
     * 所在市场的市场短名称
     * </pre>
     */
    boolean hasShiChangDuanMingCheng();
    /**
     * <code>optional string ShiChangDuanMingCheng = 86;</code>
     *
     * <pre>
     * 所在市场的市场短名称
     * </pre>
     */
    java.lang.String getShiChangDuanMingCheng();
    /**
     * <code>optional string ShiChangDuanMingCheng = 86;</code>
     *
     * <pre>
     * 所在市场的市场短名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getShiChangDuanMingChengBytes();

    /**
     * <code>optional int64 JiGouChiHuoShu = 87;</code>
     *
     * <pre>
     * 机构吃货数
     * </pre>
     */
    boolean hasJiGouChiHuoShu();
    /**
     * <code>optional int64 JiGouChiHuoShu = 87;</code>
     *
     * <pre>
     * 机构吃货数
     * </pre>
     */
    long getJiGouChiHuoShu();

    /**
     * <code>optional int64 JiGouTuHuoShu = 88;</code>
     *
     * <pre>
     * 机构吐货数
     * </pre>
     */
    boolean hasJiGouTuHuoShu();
    /**
     * <code>optional int64 JiGouTuHuoShu = 88;</code>
     *
     * <pre>
     * 机构吐货数
     * </pre>
     */
    long getJiGouTuHuoShu();

    /**
     * <code>optional int64 JiGouChiHuoLiang = 89;</code>
     *
     * <pre>
     * 机构吃货量
     * </pre>
     */
    boolean hasJiGouChiHuoLiang();
    /**
     * <code>optional int64 JiGouChiHuoLiang = 89;</code>
     *
     * <pre>
     * 机构吃货量
     * </pre>
     */
    long getJiGouChiHuoLiang();

    /**
     * <code>optional int64 JiGouTuHuoLiang = 90;</code>
     *
     * <pre>
     * 机构吐货量
     * </pre>
     */
    boolean hasJiGouTuHuoLiang();
    /**
     * <code>optional int64 JiGouTuHuoLiang = 90;</code>
     *
     * <pre>
     * 机构吐货量
     * </pre>
     */
    long getJiGouTuHuoLiang();

    /**
     * <code>optional int64 JiGouChiHuoJunE = 91;</code>
     *
     * <pre>
     * 机构吃货均额
     * </pre>
     */
    boolean hasJiGouChiHuoJunE();
    /**
     * <code>optional int64 JiGouChiHuoJunE = 91;</code>
     *
     * <pre>
     * 机构吃货均额
     * </pre>
     */
    long getJiGouChiHuoJunE();

    /**
     * <code>optional int64 JiGouTuHuoJunE = 92;</code>
     *
     * <pre>
     * 机构吐货均额
     * </pre>
     */
    boolean hasJiGouTuHuoJunE();
    /**
     * <code>optional int64 JiGouTuHuoJunE = 92;</code>
     *
     * <pre>
     * 机构吐货均额
     * </pre>
     */
    long getJiGouTuHuoJunE();

    /**
     * <code>optional int64 MeiShouGuShu = 93;</code>
     *
     * <pre>
     * 每手股数
     * </pre>
     */
    boolean hasMeiShouGuShu();
    /**
     * <code>optional int64 MeiShouGuShu = 93;</code>
     *
     * <pre>
     * 每手股数
     * </pre>
     */
    long getMeiShouGuShu();

    /**
     * <code>optional int64 JiaoYiDanWei = 94;</code>
     *
     * <pre>
     * 交易单位
     * </pre>
     */
    boolean hasJiaoYiDanWei();
    /**
     * <code>optional int64 JiaoYiDanWei = 94;</code>
     *
     * <pre>
     * 交易单位
     * </pre>
     */
    long getJiaoYiDanWei();

    /**
     * <code>optional int64 ShiXiaoLv = 95;</code>
     *
     * <pre>
     * 市销率
     * </pre>
     */
    boolean hasShiXiaoLv();
    /**
     * <code>optional int64 ShiXiaoLv = 95;</code>
     *
     * <pre>
     * 市销率
     * </pre>
     */
    long getShiXiaoLv();

    /**
     * <code>optional int64 ShiJian = 96;</code>
     *
     * <pre>
     * 时间
     * </pre>
     */
    boolean hasShiJian();
    /**
     * <code>optional int64 ShiJian = 96;</code>
     *
     * <pre>
     * 时间
     * </pre>
     */
    long getShiJian();

    /**
     * <code>optional int64 ShiJingLv = 97;</code>
     *
     * <pre>
     * 市净率
     * </pre>
     */
    boolean hasShiJingLv();
    /**
     * <code>optional int64 ShiJingLv = 97;</code>
     *
     * <pre>
     * 市净率
     * </pre>
     */
    long getShiJingLv();

    /**
     * <code>optional int64 ZongShiZhi = 98;</code>
     *
     * <pre>
     * 总市值
     * </pre>
     */
    boolean hasZongShiZhi();
    /**
     * <code>optional int64 ZongShiZhi = 98;</code>
     *
     * <pre>
     * 总市值
     * </pre>
     */
    long getZongShiZhi();

    /**
     * <code>optional int64 LiuTongShiZhi = 99;</code>
     *
     * <pre>
     * 流通市值
     * </pre>
     */
    boolean hasLiuTongShiZhi();
    /**
     * <code>optional int64 LiuTongShiZhi = 99;</code>
     *
     * <pre>
     * 流通市值
     * </pre>
     */
    long getLiuTongShiZhi();

    /**
     * <code>optional int64 MA1minMA1 = 200;</code>
     *
     * <pre>
     * 指标相关字段
     * MA
     * </pre>
     */
    boolean hasMA1MinMA1();
    /**
     * <code>optional int64 MA1minMA1 = 200;</code>
     *
     * <pre>
     * 指标相关字段
     * MA
     * </pre>
     */
    long getMA1MinMA1();

    /**
     * <code>optional int64 MA1minMA2 = 201;</code>
     *
     * <pre>
     * MA + 1min + MA2
     * </pre>
     */
    boolean hasMA1MinMA2();
    /**
     * <code>optional int64 MA1minMA2 = 201;</code>
     *
     * <pre>
     * MA + 1min + MA2
     * </pre>
     */
    long getMA1MinMA2();

    /**
     * <code>optional int64 MA1minMA3 = 202;</code>
     *
     * <pre>
     * MA + 1min + MA3
     * </pre>
     */
    boolean hasMA1MinMA3();
    /**
     * <code>optional int64 MA1minMA3 = 202;</code>
     *
     * <pre>
     * MA + 1min + MA3
     * </pre>
     */
    long getMA1MinMA3();

    /**
     * <code>optional int64 MA1minMA4 = 203;</code>
     *
     * <pre>
     * MA + 1min + MA4
     * </pre>
     */
    boolean hasMA1MinMA4();
    /**
     * <code>optional int64 MA1minMA4 = 203;</code>
     *
     * <pre>
     * MA + 1min + MA4
     * </pre>
     */
    long getMA1MinMA4();

    /**
     * <code>optional int64 MA1minMA5 = 204;</code>
     *
     * <pre>
     * MA + 1min + MA5
     * </pre>
     */
    boolean hasMA1MinMA5();
    /**
     * <code>optional int64 MA1minMA5 = 204;</code>
     *
     * <pre>
     * MA + 1min + MA5
     * </pre>
     */
    long getMA1MinMA5();

    /**
     * <code>optional int64 MA1minMA6 = 205;</code>
     *
     * <pre>
     * MA + 1min + MA6
     * </pre>
     */
    boolean hasMA1MinMA6();
    /**
     * <code>optional int64 MA1minMA6 = 205;</code>
     *
     * <pre>
     * MA + 1min + MA6
     * </pre>
     */
    long getMA1MinMA6();

    /**
     * <code>optional int64 MA5minMA1 = 206;</code>
     *
     * <pre>
     * MA + 5min + MA1
     * </pre>
     */
    boolean hasMA5MinMA1();
    /**
     * <code>optional int64 MA5minMA1 = 206;</code>
     *
     * <pre>
     * MA + 5min + MA1
     * </pre>
     */
    long getMA5MinMA1();

    /**
     * <code>optional int64 MA5minMA2 = 207;</code>
     *
     * <pre>
     * MA + 5min + MA2
     * </pre>
     */
    boolean hasMA5MinMA2();
    /**
     * <code>optional int64 MA5minMA2 = 207;</code>
     *
     * <pre>
     * MA + 5min + MA2
     * </pre>
     */
    long getMA5MinMA2();

    /**
     * <code>optional int64 MA5minMA3 = 208;</code>
     *
     * <pre>
     * MA + 5min + MA3
     * </pre>
     */
    boolean hasMA5MinMA3();
    /**
     * <code>optional int64 MA5minMA3 = 208;</code>
     *
     * <pre>
     * MA + 5min + MA3
     * </pre>
     */
    long getMA5MinMA3();

    /**
     * <code>optional int64 MA5minMA4 = 209;</code>
     *
     * <pre>
     * MA + 5min + MA4
     * </pre>
     */
    boolean hasMA5MinMA4();
    /**
     * <code>optional int64 MA5minMA4 = 209;</code>
     *
     * <pre>
     * MA + 5min + MA4
     * </pre>
     */
    long getMA5MinMA4();

    /**
     * <code>optional int64 MA5minMA5 = 210;</code>
     *
     * <pre>
     * MA + 5min + MA5
     * </pre>
     */
    boolean hasMA5MinMA5();
    /**
     * <code>optional int64 MA5minMA5 = 210;</code>
     *
     * <pre>
     * MA + 5min + MA5
     * </pre>
     */
    long getMA5MinMA5();

    /**
     * <code>optional int64 MA5minMA6 = 211;</code>
     *
     * <pre>
     * MA + 5min + MA6
     * </pre>
     */
    boolean hasMA5MinMA6();
    /**
     * <code>optional int64 MA5minMA6 = 211;</code>
     *
     * <pre>
     * MA + 5min + MA6
     * </pre>
     */
    long getMA5MinMA6();

    /**
     * <code>optional int64 MA1dayMA1 = 212;</code>
     *
     * <pre>
     * MA + 1day + MA1
     * </pre>
     */
    boolean hasMA1DayMA1();
    /**
     * <code>optional int64 MA1dayMA1 = 212;</code>
     *
     * <pre>
     * MA + 1day + MA1
     * </pre>
     */
    long getMA1DayMA1();

    /**
     * <code>optional int64 MA1dayMA2 = 213;</code>
     *
     * <pre>
     * MA + 1day + MA2
     * </pre>
     */
    boolean hasMA1DayMA2();
    /**
     * <code>optional int64 MA1dayMA2 = 213;</code>
     *
     * <pre>
     * MA + 1day + MA2
     * </pre>
     */
    long getMA1DayMA2();

    /**
     * <code>optional int64 MA1dayMA3 = 214;</code>
     *
     * <pre>
     * MA + 1day + MA3
     * </pre>
     */
    boolean hasMA1DayMA3();
    /**
     * <code>optional int64 MA1dayMA3 = 214;</code>
     *
     * <pre>
     * MA + 1day + MA3
     * </pre>
     */
    long getMA1DayMA3();

    /**
     * <code>optional int64 MA1dayMA4 = 215;</code>
     *
     * <pre>
     * MA + 1day + MA4
     * </pre>
     */
    boolean hasMA1DayMA4();
    /**
     * <code>optional int64 MA1dayMA4 = 215;</code>
     *
     * <pre>
     * MA + 1day + MA4
     * </pre>
     */
    long getMA1DayMA4();

    /**
     * <code>optional int64 MA1dayMA5 = 216;</code>
     *
     * <pre>
     * MA + 1day + MA5
     * </pre>
     */
    boolean hasMA1DayMA5();
    /**
     * <code>optional int64 MA1dayMA5 = 216;</code>
     *
     * <pre>
     * MA + 1day + MA5
     * </pre>
     */
    long getMA1DayMA5();

    /**
     * <code>optional int64 MA1dayMA6 = 217;</code>
     *
     * <pre>
     * MA + 1day + MA6
     * </pre>
     */
    boolean hasMA1DayMA6();
    /**
     * <code>optional int64 MA1dayMA6 = 217;</code>
     *
     * <pre>
     * MA + 1day + MA6
     * </pre>
     */
    long getMA1DayMA6();

    /**
     * <code>optional int64 BOLL1minMID = 218;</code>
     *
     * <pre>
     * BOLL
     * </pre>
     */
    boolean hasBOLL1MinMID();
    /**
     * <code>optional int64 BOLL1minMID = 218;</code>
     *
     * <pre>
     * BOLL
     * </pre>
     */
    long getBOLL1MinMID();

    /**
     * <code>optional int64 BOLL1minUPPER = 219;</code>
     *
     * <pre>
     * BOLL + 1min + UPPER
     * </pre>
     */
    boolean hasBOLL1MinUPPER();
    /**
     * <code>optional int64 BOLL1minUPPER = 219;</code>
     *
     * <pre>
     * BOLL + 1min + UPPER
     * </pre>
     */
    long getBOLL1MinUPPER();

    /**
     * <code>optional int64 BOLL1minLOWER = 220;</code>
     *
     * <pre>
     * BOLL + 1min + LOWER
     * </pre>
     */
    boolean hasBOLL1MinLOWER();
    /**
     * <code>optional int64 BOLL1minLOWER = 220;</code>
     *
     * <pre>
     * BOLL + 1min + LOWER
     * </pre>
     */
    long getBOLL1MinLOWER();

    /**
     * <code>optional int64 BOLL5minMID = 221;</code>
     *
     * <pre>
     * BOLL + 5min + MID
     * </pre>
     */
    boolean hasBOLL5MinMID();
    /**
     * <code>optional int64 BOLL5minMID = 221;</code>
     *
     * <pre>
     * BOLL + 5min + MID
     * </pre>
     */
    long getBOLL5MinMID();

    /**
     * <code>optional int64 BOLL5minUPPER = 222;</code>
     *
     * <pre>
     * BOLL + 5min + UPPER
     * </pre>
     */
    boolean hasBOLL5MinUPPER();
    /**
     * <code>optional int64 BOLL5minUPPER = 222;</code>
     *
     * <pre>
     * BOLL + 5min + UPPER
     * </pre>
     */
    long getBOLL5MinUPPER();

    /**
     * <code>optional int64 BOLL5minLOWER = 223;</code>
     *
     * <pre>
     * BOLL + 5min + LOWER
     * </pre>
     */
    boolean hasBOLL5MinLOWER();
    /**
     * <code>optional int64 BOLL5minLOWER = 223;</code>
     *
     * <pre>
     * BOLL + 5min + LOWER
     * </pre>
     */
    long getBOLL5MinLOWER();

    /**
     * <code>optional int64 BOLL1dayMID = 224;</code>
     *
     * <pre>
     * BOLL + 5min + MID
     * </pre>
     */
    boolean hasBOLL1DayMID();
    /**
     * <code>optional int64 BOLL1dayMID = 224;</code>
     *
     * <pre>
     * BOLL + 5min + MID
     * </pre>
     */
    long getBOLL1DayMID();

    /**
     * <code>optional int64 BOLL1dayUPPER = 225;</code>
     *
     * <pre>
     * BOLL + 5min + UPPER
     * </pre>
     */
    boolean hasBOLL1DayUPPER();
    /**
     * <code>optional int64 BOLL1dayUPPER = 225;</code>
     *
     * <pre>
     * BOLL + 5min + UPPER
     * </pre>
     */
    long getBOLL1DayUPPER();

    /**
     * <code>optional int64 BOLL1dayLOWER = 226;</code>
     *
     * <pre>
     * BOLL + 5min + LOWER
     * </pre>
     */
    boolean hasBOLL1DayLOWER();
    /**
     * <code>optional int64 BOLL1dayLOWER = 226;</code>
     *
     * <pre>
     * BOLL + 5min + LOWER
     * </pre>
     */
    long getBOLL1DayLOWER();

    /**
     * <code>optional int64 VOL1min = 227;</code>
     *
     * <pre>
     * VOL
     * </pre>
     */
    boolean hasVOL1Min();
    /**
     * <code>optional int64 VOL1min = 227;</code>
     *
     * <pre>
     * VOL
     * </pre>
     */
    long getVOL1Min();

    /**
     * <code>optional int64 VOL1minMA1 = 228;</code>
     *
     * <pre>
     * VOL + 1min + MA1
     * </pre>
     */
    boolean hasVOL1MinMA1();
    /**
     * <code>optional int64 VOL1minMA1 = 228;</code>
     *
     * <pre>
     * VOL + 1min + MA1
     * </pre>
     */
    long getVOL1MinMA1();

    /**
     * <code>optional int64 VOL1minMA2 = 229;</code>
     *
     * <pre>
     * VOL + 1min + MA2
     * </pre>
     */
    boolean hasVOL1MinMA2();
    /**
     * <code>optional int64 VOL1minMA2 = 229;</code>
     *
     * <pre>
     * VOL + 1min + MA2
     * </pre>
     */
    long getVOL1MinMA2();

    /**
     * <code>optional int64 VOL1minMA3 = 230;</code>
     *
     * <pre>
     * VOL + 1min + MA3
     * </pre>
     */
    boolean hasVOL1MinMA3();
    /**
     * <code>optional int64 VOL1minMA3 = 230;</code>
     *
     * <pre>
     * VOL + 1min + MA3
     * </pre>
     */
    long getVOL1MinMA3();

    /**
     * <code>optional int64 VOL5min = 231;</code>
     *
     * <pre>
     * VOL + 5min + _
     * </pre>
     */
    boolean hasVOL5Min();
    /**
     * <code>optional int64 VOL5min = 231;</code>
     *
     * <pre>
     * VOL + 5min + _
     * </pre>
     */
    long getVOL5Min();

    /**
     * <code>optional int64 VOL5minMA1 = 232;</code>
     *
     * <pre>
     * VOL + 5min + MA1
     * </pre>
     */
    boolean hasVOL5MinMA1();
    /**
     * <code>optional int64 VOL5minMA1 = 232;</code>
     *
     * <pre>
     * VOL + 5min + MA1
     * </pre>
     */
    long getVOL5MinMA1();

    /**
     * <code>optional int64 VOL5minMA2 = 233;</code>
     *
     * <pre>
     * VOL + 5min + MA2
     * </pre>
     */
    boolean hasVOL5MinMA2();
    /**
     * <code>optional int64 VOL5minMA2 = 233;</code>
     *
     * <pre>
     * VOL + 5min + MA2
     * </pre>
     */
    long getVOL5MinMA2();

    /**
     * <code>optional int64 VOL5minMA3 = 234;</code>
     *
     * <pre>
     * VOL + 5min + MA3
     * </pre>
     */
    boolean hasVOL5MinMA3();
    /**
     * <code>optional int64 VOL5minMA3 = 234;</code>
     *
     * <pre>
     * VOL + 5min + MA3
     * </pre>
     */
    long getVOL5MinMA3();

    /**
     * <code>optional int64 VOL1day = 235;</code>
     *
     * <pre>
     * VOL + 1day + _
     * </pre>
     */
    boolean hasVOL1Day();
    /**
     * <code>optional int64 VOL1day = 235;</code>
     *
     * <pre>
     * VOL + 1day + _
     * </pre>
     */
    long getVOL1Day();

    /**
     * <code>optional int64 VOL1dayMA1 = 236;</code>
     *
     * <pre>
     * VOL + 1day + MA1
     * </pre>
     */
    boolean hasVOL1DayMA1();
    /**
     * <code>optional int64 VOL1dayMA1 = 236;</code>
     *
     * <pre>
     * VOL + 1day + MA1
     * </pre>
     */
    long getVOL1DayMA1();

    /**
     * <code>optional int64 VOL1dayMA2 = 237;</code>
     *
     * <pre>
     * VOL + 1day + MA2
     * </pre>
     */
    boolean hasVOL1DayMA2();
    /**
     * <code>optional int64 VOL1dayMA2 = 237;</code>
     *
     * <pre>
     * VOL + 1day + MA2
     * </pre>
     */
    long getVOL1DayMA2();

    /**
     * <code>optional int64 VOL1dayMA3 = 238;</code>
     *
     * <pre>
     * VOL + 1day + MA3
     * </pre>
     */
    boolean hasVOL1DayMA3();
    /**
     * <code>optional int64 VOL1dayMA3 = 238;</code>
     *
     * <pre>
     * VOL + 1day + MA3
     * </pre>
     */
    long getVOL1DayMA3();

    /**
     * <code>optional int64 ARBR1minAR = 239;</code>
     *
     * <pre>
     * ARBR
     * </pre>
     */
    boolean hasARBR1MinAR();
    /**
     * <code>optional int64 ARBR1minAR = 239;</code>
     *
     * <pre>
     * ARBR
     * </pre>
     */
    long getARBR1MinAR();

    /**
     * <code>optional int64 ARBR1minBR = 240;</code>
     *
     * <pre>
     * ARBR + 1min + BR
     * </pre>
     */
    boolean hasARBR1MinBR();
    /**
     * <code>optional int64 ARBR1minBR = 240;</code>
     *
     * <pre>
     * ARBR + 1min + BR
     * </pre>
     */
    long getARBR1MinBR();

    /**
     * <code>optional int64 ARBR5minAR = 241;</code>
     *
     * <pre>
     * ARBR + 5min + AR
     * </pre>
     */
    boolean hasARBR5MinAR();
    /**
     * <code>optional int64 ARBR5minAR = 241;</code>
     *
     * <pre>
     * ARBR + 5min + AR
     * </pre>
     */
    long getARBR5MinAR();

    /**
     * <code>optional int64 ARBR5minBR = 242;</code>
     *
     * <pre>
     * ARBR + 5min + BR
     * </pre>
     */
    boolean hasARBR5MinBR();
    /**
     * <code>optional int64 ARBR5minBR = 242;</code>
     *
     * <pre>
     * ARBR + 5min + BR
     * </pre>
     */
    long getARBR5MinBR();

    /**
     * <code>optional int64 ARBR1dayAR = 243;</code>
     *
     * <pre>
     * ARBR + 1day + AR
     * </pre>
     */
    boolean hasARBR1DayAR();
    /**
     * <code>optional int64 ARBR1dayAR = 243;</code>
     *
     * <pre>
     * ARBR + 1day + AR
     * </pre>
     */
    long getARBR1DayAR();

    /**
     * <code>optional int64 ARBR1dayBR = 244;</code>
     *
     * <pre>
     * ARBR + 1day + BR
     * </pre>
     */
    boolean hasARBR1DayBR();
    /**
     * <code>optional int64 ARBR1dayBR = 244;</code>
     *
     * <pre>
     * ARBR + 1day + BR
     * </pre>
     */
    long getARBR1DayBR();

    /**
     * <code>optional int64 BIAS1minBIAS1 = 245;</code>
     *
     * <pre>
     * BIAS
     * </pre>
     */
    boolean hasBIAS1MinBIAS1();
    /**
     * <code>optional int64 BIAS1minBIAS1 = 245;</code>
     *
     * <pre>
     * BIAS
     * </pre>
     */
    long getBIAS1MinBIAS1();

    /**
     * <code>optional int64 BIAS1minBIAS2 = 246;</code>
     *
     * <pre>
     * BIAS + 1min + BIAS2
     * </pre>
     */
    boolean hasBIAS1MinBIAS2();
    /**
     * <code>optional int64 BIAS1minBIAS2 = 246;</code>
     *
     * <pre>
     * BIAS + 1min + BIAS2
     * </pre>
     */
    long getBIAS1MinBIAS2();

    /**
     * <code>optional int64 BIAS1minBIAS3 = 247;</code>
     *
     * <pre>
     * BIAS + 1min + BIAS3
     * </pre>
     */
    boolean hasBIAS1MinBIAS3();
    /**
     * <code>optional int64 BIAS1minBIAS3 = 247;</code>
     *
     * <pre>
     * BIAS + 1min + BIAS3
     * </pre>
     */
    long getBIAS1MinBIAS3();

    /**
     * <code>optional int64 BIAS5minBIAS1 = 248;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS1
     * </pre>
     */
    boolean hasBIAS5MinBIAS1();
    /**
     * <code>optional int64 BIAS5minBIAS1 = 248;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS1
     * </pre>
     */
    long getBIAS5MinBIAS1();

    /**
     * <code>optional int64 BIAS5minBIAS2 = 249;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS2
     * </pre>
     */
    boolean hasBIAS5MinBIAS2();
    /**
     * <code>optional int64 BIAS5minBIAS2 = 249;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS2
     * </pre>
     */
    long getBIAS5MinBIAS2();

    /**
     * <code>optional int64 BIAS5minBIAS3 = 250;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS3
     * </pre>
     */
    boolean hasBIAS5MinBIAS3();
    /**
     * <code>optional int64 BIAS5minBIAS3 = 250;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS3
     * </pre>
     */
    long getBIAS5MinBIAS3();

    /**
     * <code>optional int64 BIAS1dayBIAS1 = 251;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS1
     * </pre>
     */
    boolean hasBIAS1DayBIAS1();
    /**
     * <code>optional int64 BIAS1dayBIAS1 = 251;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS1
     * </pre>
     */
    long getBIAS1DayBIAS1();

    /**
     * <code>optional int64 BIAS1dayBIAS2 = 252;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS2
     * </pre>
     */
    boolean hasBIAS1DayBIAS2();
    /**
     * <code>optional int64 BIAS1dayBIAS2 = 252;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS2
     * </pre>
     */
    long getBIAS1DayBIAS2();

    /**
     * <code>optional int64 BIAS1dayBIAS3 = 253;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS3
     * </pre>
     */
    boolean hasBIAS1DayBIAS3();
    /**
     * <code>optional int64 BIAS1dayBIAS3 = 253;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS3
     * </pre>
     */
    long getBIAS1DayBIAS3();

    /**
     * <code>optional int64 CCI1min = 254;</code>
     *
     * <pre>
     * CCI
     * </pre>
     */
    boolean hasCCI1Min();
    /**
     * <code>optional int64 CCI1min = 254;</code>
     *
     * <pre>
     * CCI
     * </pre>
     */
    long getCCI1Min();

    /**
     * <code>optional int64 CCI5min = 255;</code>
     *
     * <pre>
     * CCI + 5min + _
     * </pre>
     */
    boolean hasCCI5Min();
    /**
     * <code>optional int64 CCI5min = 255;</code>
     *
     * <pre>
     * CCI + 5min + _
     * </pre>
     */
    long getCCI5Min();

    /**
     * <code>optional int64 CCI1day = 256;</code>
     *
     * <pre>
     * CCI + 1day + _
     * </pre>
     */
    boolean hasCCI1Day();
    /**
     * <code>optional int64 CCI1day = 256;</code>
     *
     * <pre>
     * CCI + 1day + _
     * </pre>
     */
    long getCCI1Day();

    /**
     * <code>optional int64 CJBS1minCJBS = 257;</code>
     *
     * <pre>
     * CJBS
     * </pre>
     */
    boolean hasCJBS1MinCJBS();
    /**
     * <code>optional int64 CJBS1minCJBS = 257;</code>
     *
     * <pre>
     * CJBS
     * </pre>
     */
    long getCJBS1MinCJBS();

    /**
     * <code>optional int64 CJBS5minCJBS = 258;</code>
     *
     * <pre>
     * CJBS + 5min + CJBS
     * </pre>
     */
    boolean hasCJBS5MinCJBS();
    /**
     * <code>optional int64 CJBS5minCJBS = 258;</code>
     *
     * <pre>
     * CJBS + 5min + CJBS
     * </pre>
     */
    long getCJBS5MinCJBS();

    /**
     * <code>optional int64 CJBS1dayCJBS = 259;</code>
     *
     * <pre>
     * CJBS + 1day + CJBS
     * </pre>
     */
    boolean hasCJBS1DayCJBS();
    /**
     * <code>optional int64 CJBS1dayCJBS = 259;</code>
     *
     * <pre>
     * CJBS + 1day + CJBS
     * </pre>
     */
    long getCJBS1DayCJBS();

    /**
     * <code>optional int64 CR1minCR = 260;</code>
     *
     * <pre>
     * CR
     * </pre>
     */
    boolean hasCR1MinCR();
    /**
     * <code>optional int64 CR1minCR = 260;</code>
     *
     * <pre>
     * CR
     * </pre>
     */
    long getCR1MinCR();

    /**
     * <code>optional int64 CR1minMA1 = 261;</code>
     *
     * <pre>
     * CR + 1min + MA1
     * </pre>
     */
    boolean hasCR1MinMA1();
    /**
     * <code>optional int64 CR1minMA1 = 261;</code>
     *
     * <pre>
     * CR + 1min + MA1
     * </pre>
     */
    long getCR1MinMA1();

    /**
     * <code>optional int64 CR1minMA2 = 262;</code>
     *
     * <pre>
     * CR + 1min + MA2
     * </pre>
     */
    boolean hasCR1MinMA2();
    /**
     * <code>optional int64 CR1minMA2 = 262;</code>
     *
     * <pre>
     * CR + 1min + MA2
     * </pre>
     */
    long getCR1MinMA2();

    /**
     * <code>optional int64 CR1minMA3 = 263;</code>
     *
     * <pre>
     * CR + 1min + MA3
     * </pre>
     */
    boolean hasCR1MinMA3();
    /**
     * <code>optional int64 CR1minMA3 = 263;</code>
     *
     * <pre>
     * CR + 1min + MA3
     * </pre>
     */
    long getCR1MinMA3();

    /**
     * <code>optional int64 CR5minCR = 264;</code>
     *
     * <pre>
     * CR + 5min + CR
     * </pre>
     */
    boolean hasCR5MinCR();
    /**
     * <code>optional int64 CR5minCR = 264;</code>
     *
     * <pre>
     * CR + 5min + CR
     * </pre>
     */
    long getCR5MinCR();

    /**
     * <code>optional int64 CR5minMA1 = 265;</code>
     *
     * <pre>
     * CR + 5min + MA1
     * </pre>
     */
    boolean hasCR5MinMA1();
    /**
     * <code>optional int64 CR5minMA1 = 265;</code>
     *
     * <pre>
     * CR + 5min + MA1
     * </pre>
     */
    long getCR5MinMA1();

    /**
     * <code>optional int64 CR5minMA2 = 266;</code>
     *
     * <pre>
     * CR + 5min + MA2
     * </pre>
     */
    boolean hasCR5MinMA2();
    /**
     * <code>optional int64 CR5minMA2 = 266;</code>
     *
     * <pre>
     * CR + 5min + MA2
     * </pre>
     */
    long getCR5MinMA2();

    /**
     * <code>optional int64 CR5minMA3 = 267;</code>
     *
     * <pre>
     * CR + 5min + MA3
     * </pre>
     */
    boolean hasCR5MinMA3();
    /**
     * <code>optional int64 CR5minMA3 = 267;</code>
     *
     * <pre>
     * CR + 5min + MA3
     * </pre>
     */
    long getCR5MinMA3();

    /**
     * <code>optional int64 CR1dayCR = 268;</code>
     *
     * <pre>
     * CR + 1day + CR
     * </pre>
     */
    boolean hasCR1DayCR();
    /**
     * <code>optional int64 CR1dayCR = 268;</code>
     *
     * <pre>
     * CR + 1day + CR
     * </pre>
     */
    long getCR1DayCR();

    /**
     * <code>optional int64 CR1dayMA1 = 269;</code>
     *
     * <pre>
     * CR + 1day + MA1
     * </pre>
     */
    boolean hasCR1DayMA1();
    /**
     * <code>optional int64 CR1dayMA1 = 269;</code>
     *
     * <pre>
     * CR + 1day + MA1
     * </pre>
     */
    long getCR1DayMA1();

    /**
     * <code>optional int64 CR1dayMA2 = 270;</code>
     *
     * <pre>
     * CR + 1day + MA2
     * </pre>
     */
    boolean hasCR1DayMA2();
    /**
     * <code>optional int64 CR1dayMA2 = 270;</code>
     *
     * <pre>
     * CR + 1day + MA2
     * </pre>
     */
    long getCR1DayMA2();

    /**
     * <code>optional int64 CR1dayMA3 = 271;</code>
     *
     * <pre>
     * CR + 1day + MA3
     * </pre>
     */
    boolean hasCR1DayMA3();
    /**
     * <code>optional int64 CR1dayMA3 = 271;</code>
     *
     * <pre>
     * CR + 1day + MA3
     * </pre>
     */
    long getCR1DayMA3();

    /**
     * <code>optional int64 DMA1minDDD = 272;</code>
     *
     * <pre>
     * DMA
     * </pre>
     */
    boolean hasDMA1MinDDD();
    /**
     * <code>optional int64 DMA1minDDD = 272;</code>
     *
     * <pre>
     * DMA
     * </pre>
     */
    long getDMA1MinDDD();

    /**
     * <code>optional int64 DMA1minAMA = 273;</code>
     *
     * <pre>
     * DMA + 1min + AMA
     * </pre>
     */
    boolean hasDMA1MinAMA();
    /**
     * <code>optional int64 DMA1minAMA = 273;</code>
     *
     * <pre>
     * DMA + 1min + AMA
     * </pre>
     */
    long getDMA1MinAMA();

    /**
     * <code>optional int64 DMA5minDDD = 274;</code>
     *
     * <pre>
     * DMA + 5min + DDD
     * </pre>
     */
    boolean hasDMA5MinDDD();
    /**
     * <code>optional int64 DMA5minDDD = 274;</code>
     *
     * <pre>
     * DMA + 5min + DDD
     * </pre>
     */
    long getDMA5MinDDD();

    /**
     * <code>optional int64 DMA5minAMA = 275;</code>
     *
     * <pre>
     * DMA + 5min + AMA
     * </pre>
     */
    boolean hasDMA5MinAMA();
    /**
     * <code>optional int64 DMA5minAMA = 275;</code>
     *
     * <pre>
     * DMA + 5min + AMA
     * </pre>
     */
    long getDMA5MinAMA();

    /**
     * <code>optional int64 DMA1dayDDD = 276;</code>
     *
     * <pre>
     * DMA + 1day + DDD
     * </pre>
     */
    boolean hasDMA1DayDDD();
    /**
     * <code>optional int64 DMA1dayDDD = 276;</code>
     *
     * <pre>
     * DMA + 1day + DDD
     * </pre>
     */
    long getDMA1DayDDD();

    /**
     * <code>optional int64 DMA1dayAMA = 277;</code>
     *
     * <pre>
     * DMA + 1day + AMA
     * </pre>
     */
    boolean hasDMA1DayAMA();
    /**
     * <code>optional int64 DMA1dayAMA = 277;</code>
     *
     * <pre>
     * DMA + 1day + AMA
     * </pre>
     */
    long getDMA1DayAMA();

    /**
     * <code>optional int64 DMI1minPDI = 278;</code>
     *
     * <pre>
     * DMI
     * </pre>
     */
    boolean hasDMI1MinPDI();
    /**
     * <code>optional int64 DMI1minPDI = 278;</code>
     *
     * <pre>
     * DMI
     * </pre>
     */
    long getDMI1MinPDI();

    /**
     * <code>optional int64 DMI1minMDI = 279;</code>
     *
     * <pre>
     * DMI + 1min + MDI
     * </pre>
     */
    boolean hasDMI1MinMDI();
    /**
     * <code>optional int64 DMI1minMDI = 279;</code>
     *
     * <pre>
     * DMI + 1min + MDI
     * </pre>
     */
    long getDMI1MinMDI();

    /**
     * <code>optional int64 DMI1minADX = 280;</code>
     *
     * <pre>
     * DMI + 1min + ADX
     * </pre>
     */
    boolean hasDMI1MinADX();
    /**
     * <code>optional int64 DMI1minADX = 280;</code>
     *
     * <pre>
     * DMI + 1min + ADX
     * </pre>
     */
    long getDMI1MinADX();

    /**
     * <code>optional int64 DMI1minADXR = 281;</code>
     *
     * <pre>
     * DMI + 1min + ADXR
     * </pre>
     */
    boolean hasDMI1MinADXR();
    /**
     * <code>optional int64 DMI1minADXR = 281;</code>
     *
     * <pre>
     * DMI + 1min + ADXR
     * </pre>
     */
    long getDMI1MinADXR();

    /**
     * <code>optional int64 DMI5minPDI = 282;</code>
     *
     * <pre>
     * DMI + 5min + PDI
     * </pre>
     */
    boolean hasDMI5MinPDI();
    /**
     * <code>optional int64 DMI5minPDI = 282;</code>
     *
     * <pre>
     * DMI + 5min + PDI
     * </pre>
     */
    long getDMI5MinPDI();

    /**
     * <code>optional int64 DMI5minMDI = 283;</code>
     *
     * <pre>
     * DMI + 5min + MDI
     * </pre>
     */
    boolean hasDMI5MinMDI();
    /**
     * <code>optional int64 DMI5minMDI = 283;</code>
     *
     * <pre>
     * DMI + 5min + MDI
     * </pre>
     */
    long getDMI5MinMDI();

    /**
     * <code>optional int64 DMI5minADX = 284;</code>
     *
     * <pre>
     * DMI + 5min + ADX
     * </pre>
     */
    boolean hasDMI5MinADX();
    /**
     * <code>optional int64 DMI5minADX = 284;</code>
     *
     * <pre>
     * DMI + 5min + ADX
     * </pre>
     */
    long getDMI5MinADX();

    /**
     * <code>optional int64 DMI5minADXR = 285;</code>
     *
     * <pre>
     * DMI + 5min + ADXR
     * </pre>
     */
    boolean hasDMI5MinADXR();
    /**
     * <code>optional int64 DMI5minADXR = 285;</code>
     *
     * <pre>
     * DMI + 5min + ADXR
     * </pre>
     */
    long getDMI5MinADXR();

    /**
     * <code>optional int64 DMI1dayPDI = 286;</code>
     *
     * <pre>
     * DMI + 1day + PDI
     * </pre>
     */
    boolean hasDMI1DayPDI();
    /**
     * <code>optional int64 DMI1dayPDI = 286;</code>
     *
     * <pre>
     * DMI + 1day + PDI
     * </pre>
     */
    long getDMI1DayPDI();

    /**
     * <code>optional int64 DMI1dayMDI = 287;</code>
     *
     * <pre>
     * DMI + 1day + MDI
     * </pre>
     */
    boolean hasDMI1DayMDI();
    /**
     * <code>optional int64 DMI1dayMDI = 287;</code>
     *
     * <pre>
     * DMI + 1day + MDI
     * </pre>
     */
    long getDMI1DayMDI();

    /**
     * <code>optional int64 DMI1dayADX = 288;</code>
     *
     * <pre>
     * DMI + 1day + ADX
     * </pre>
     */
    boolean hasDMI1DayADX();
    /**
     * <code>optional int64 DMI1dayADX = 288;</code>
     *
     * <pre>
     * DMI + 1day + ADX
     * </pre>
     */
    long getDMI1DayADX();

    /**
     * <code>optional int64 DMI1dayADXR = 289;</code>
     *
     * <pre>
     * DMI + 1day + ADXR
     * </pre>
     */
    boolean hasDMI1DayADXR();
    /**
     * <code>optional int64 DMI1dayADXR = 289;</code>
     *
     * <pre>
     * DMI + 1day + ADXR
     * </pre>
     */
    long getDMI1DayADXR();

    /**
     * <code>optional int64 KDJ1minK = 290;</code>
     *
     * <pre>
     * KDJ
     * </pre>
     */
    boolean hasKDJ1MinK();
    /**
     * <code>optional int64 KDJ1minK = 290;</code>
     *
     * <pre>
     * KDJ
     * </pre>
     */
    long getKDJ1MinK();

    /**
     * <code>optional int64 KDJ1minD = 291;</code>
     *
     * <pre>
     * KDJ + 1min + D
     * </pre>
     */
    boolean hasKDJ1MinD();
    /**
     * <code>optional int64 KDJ1minD = 291;</code>
     *
     * <pre>
     * KDJ + 1min + D
     * </pre>
     */
    long getKDJ1MinD();

    /**
     * <code>optional int64 KDJ1minJ = 292;</code>
     *
     * <pre>
     * KDJ + 1min + J
     * </pre>
     */
    boolean hasKDJ1MinJ();
    /**
     * <code>optional int64 KDJ1minJ = 292;</code>
     *
     * <pre>
     * KDJ + 1min + J
     * </pre>
     */
    long getKDJ1MinJ();

    /**
     * <code>optional int64 KDJ5minK = 293;</code>
     *
     * <pre>
     * KDJ + 5min + K
     * </pre>
     */
    boolean hasKDJ5MinK();
    /**
     * <code>optional int64 KDJ5minK = 293;</code>
     *
     * <pre>
     * KDJ + 5min + K
     * </pre>
     */
    long getKDJ5MinK();

    /**
     * <code>optional int64 KDJ5minD = 294;</code>
     *
     * <pre>
     * KDJ + 5min + D
     * </pre>
     */
    boolean hasKDJ5MinD();
    /**
     * <code>optional int64 KDJ5minD = 294;</code>
     *
     * <pre>
     * KDJ + 5min + D
     * </pre>
     */
    long getKDJ5MinD();

    /**
     * <code>optional int64 KDJ5minJ = 295;</code>
     *
     * <pre>
     * KDJ + 5min + J
     * </pre>
     */
    boolean hasKDJ5MinJ();
    /**
     * <code>optional int64 KDJ5minJ = 295;</code>
     *
     * <pre>
     * KDJ + 5min + J
     * </pre>
     */
    long getKDJ5MinJ();

    /**
     * <code>optional int64 KDJ1dayK = 296;</code>
     *
     * <pre>
     * KDJ + 1day + K
     * </pre>
     */
    boolean hasKDJ1DayK();
    /**
     * <code>optional int64 KDJ1dayK = 296;</code>
     *
     * <pre>
     * KDJ + 1day + K
     * </pre>
     */
    long getKDJ1DayK();

    /**
     * <code>optional int64 KDJ1dayD = 297;</code>
     *
     * <pre>
     * KDJ + 1day + D
     * </pre>
     */
    boolean hasKDJ1DayD();
    /**
     * <code>optional int64 KDJ1dayD = 297;</code>
     *
     * <pre>
     * KDJ + 1day + D
     * </pre>
     */
    long getKDJ1DayD();

    /**
     * <code>optional int64 KDJ1dayJ = 298;</code>
     *
     * <pre>
     * KDJ + 1day + J
     * </pre>
     */
    boolean hasKDJ1DayJ();
    /**
     * <code>optional int64 KDJ1dayJ = 298;</code>
     *
     * <pre>
     * KDJ + 1day + J
     * </pre>
     */
    long getKDJ1DayJ();

    /**
     * <code>optional int64 MACD1minDIFF = 299;</code>
     *
     * <pre>
     * MACD
     * </pre>
     */
    boolean hasMACD1MinDIFF();
    /**
     * <code>optional int64 MACD1minDIFF = 299;</code>
     *
     * <pre>
     * MACD
     * </pre>
     */
    long getMACD1MinDIFF();

    /**
     * <code>optional int64 MACD1minDEA = 300;</code>
     *
     * <pre>
     * MACD + 1min + DEA
     * </pre>
     */
    boolean hasMACD1MinDEA();
    /**
     * <code>optional int64 MACD1minDEA = 300;</code>
     *
     * <pre>
     * MACD + 1min + DEA
     * </pre>
     */
    long getMACD1MinDEA();

    /**
     * <code>optional int64 MACD1minMACD = 301;</code>
     *
     * <pre>
     * MACD + 1min + MACD
     * </pre>
     */
    boolean hasMACD1MinMACD();
    /**
     * <code>optional int64 MACD1minMACD = 301;</code>
     *
     * <pre>
     * MACD + 1min + MACD
     * </pre>
     */
    long getMACD1MinMACD();

    /**
     * <code>optional int64 MACD5minDIFF = 302;</code>
     *
     * <pre>
     * MACD + 5min + DIFF
     * </pre>
     */
    boolean hasMACD5MinDIFF();
    /**
     * <code>optional int64 MACD5minDIFF = 302;</code>
     *
     * <pre>
     * MACD + 5min + DIFF
     * </pre>
     */
    long getMACD5MinDIFF();

    /**
     * <code>optional int64 MACD5minDEA = 303;</code>
     *
     * <pre>
     * MACD + 5min + DEA
     * </pre>
     */
    boolean hasMACD5MinDEA();
    /**
     * <code>optional int64 MACD5minDEA = 303;</code>
     *
     * <pre>
     * MACD + 5min + DEA
     * </pre>
     */
    long getMACD5MinDEA();

    /**
     * <code>optional int64 MACD5minMACD = 304;</code>
     *
     * <pre>
     * MACD + 5min + MACD
     * </pre>
     */
    boolean hasMACD5MinMACD();
    /**
     * <code>optional int64 MACD5minMACD = 304;</code>
     *
     * <pre>
     * MACD + 5min + MACD
     * </pre>
     */
    long getMACD5MinMACD();

    /**
     * <code>optional int64 MACD1dayDIFF = 305;</code>
     *
     * <pre>
     * MACD + 1day + DIFF
     * </pre>
     */
    boolean hasMACD1DayDIFF();
    /**
     * <code>optional int64 MACD1dayDIFF = 305;</code>
     *
     * <pre>
     * MACD + 1day + DIFF
     * </pre>
     */
    long getMACD1DayDIFF();

    /**
     * <code>optional int64 MACD1dayDEA = 306;</code>
     *
     * <pre>
     * MACD + 1day + DEA
     * </pre>
     */
    boolean hasMACD1DayDEA();
    /**
     * <code>optional int64 MACD1dayDEA = 306;</code>
     *
     * <pre>
     * MACD + 1day + DEA
     * </pre>
     */
    long getMACD1DayDEA();

    /**
     * <code>optional int64 MACD1dayMACD = 307;</code>
     *
     * <pre>
     * MACD + 1day + MACD
     * </pre>
     */
    boolean hasMACD1DayMACD();
    /**
     * <code>optional int64 MACD1dayMACD = 307;</code>
     *
     * <pre>
     * MACD + 1day + MACD
     * </pre>
     */
    long getMACD1DayMACD();

    /**
     * <code>optional int64 OBV1min = 308;</code>
     *
     * <pre>
     * OBV
     * </pre>
     */
    boolean hasOBV1Min();
    /**
     * <code>optional int64 OBV1min = 308;</code>
     *
     * <pre>
     * OBV
     * </pre>
     */
    long getOBV1Min();

    /**
     * <code>optional int64 OBV5min = 309;</code>
     *
     * <pre>
     * OBV + 5min + _
     * </pre>
     */
    boolean hasOBV5Min();
    /**
     * <code>optional int64 OBV5min = 309;</code>
     *
     * <pre>
     * OBV + 5min + _
     * </pre>
     */
    long getOBV5Min();

    /**
     * <code>optional int64 OBV1day = 310;</code>
     *
     * <pre>
     * OBV + 1day + _
     * </pre>
     */
    boolean hasOBV1Day();
    /**
     * <code>optional int64 OBV1day = 310;</code>
     *
     * <pre>
     * OBV + 1day + _
     * </pre>
     */
    long getOBV1Day();

    /**
     * <code>optional int64 PSY1min = 311;</code>
     *
     * <pre>
     * PSY
     * </pre>
     */
    boolean hasPSY1Min();
    /**
     * <code>optional int64 PSY1min = 311;</code>
     *
     * <pre>
     * PSY
     * </pre>
     */
    long getPSY1Min();

    /**
     * <code>optional int64 PSY5min = 312;</code>
     *
     * <pre>
     * PSY + 5min + _
     * </pre>
     */
    boolean hasPSY5Min();
    /**
     * <code>optional int64 PSY5min = 312;</code>
     *
     * <pre>
     * PSY + 5min + _
     * </pre>
     */
    long getPSY5Min();

    /**
     * <code>optional int64 PSY1day = 313;</code>
     *
     * <pre>
     * PSY + 1day + _
     * </pre>
     */
    boolean hasPSY1Day();
    /**
     * <code>optional int64 PSY1day = 313;</code>
     *
     * <pre>
     * PSY + 1day + _
     * </pre>
     */
    long getPSY1Day();

    /**
     * <code>optional int64 RSI1minRSI1 = 314;</code>
     *
     * <pre>
     * RSI
     * </pre>
     */
    boolean hasRSI1MinRSI1();
    /**
     * <code>optional int64 RSI1minRSI1 = 314;</code>
     *
     * <pre>
     * RSI
     * </pre>
     */
    long getRSI1MinRSI1();

    /**
     * <code>optional int64 RSI1minRSI2 = 315;</code>
     *
     * <pre>
     * RSI + 1min + RSI2
     * </pre>
     */
    boolean hasRSI1MinRSI2();
    /**
     * <code>optional int64 RSI1minRSI2 = 315;</code>
     *
     * <pre>
     * RSI + 1min + RSI2
     * </pre>
     */
    long getRSI1MinRSI2();

    /**
     * <code>optional int64 RSI1minRSI3 = 316;</code>
     *
     * <pre>
     * RSI + 1min + RSI3
     * </pre>
     */
    boolean hasRSI1MinRSI3();
    /**
     * <code>optional int64 RSI1minRSI3 = 316;</code>
     *
     * <pre>
     * RSI + 1min + RSI3
     * </pre>
     */
    long getRSI1MinRSI3();

    /**
     * <code>optional int64 RSI5minRSI1 = 317;</code>
     *
     * <pre>
     * RSI + 5min + RSI1
     * </pre>
     */
    boolean hasRSI5MinRSI1();
    /**
     * <code>optional int64 RSI5minRSI1 = 317;</code>
     *
     * <pre>
     * RSI + 5min + RSI1
     * </pre>
     */
    long getRSI5MinRSI1();

    /**
     * <code>optional int64 RSI5minRSI2 = 318;</code>
     *
     * <pre>
     * RSI + 5min + RSI2
     * </pre>
     */
    boolean hasRSI5MinRSI2();
    /**
     * <code>optional int64 RSI5minRSI2 = 318;</code>
     *
     * <pre>
     * RSI + 5min + RSI2
     * </pre>
     */
    long getRSI5MinRSI2();

    /**
     * <code>optional int64 RSI5minRSI3 = 319;</code>
     *
     * <pre>
     * RSI + 5min + RSI3
     * </pre>
     */
    boolean hasRSI5MinRSI3();
    /**
     * <code>optional int64 RSI5minRSI3 = 319;</code>
     *
     * <pre>
     * RSI + 5min + RSI3
     * </pre>
     */
    long getRSI5MinRSI3();

    /**
     * <code>optional int64 RSI1dayRSI1 = 320;</code>
     *
     * <pre>
     * RSI + 1day + RSI1
     * </pre>
     */
    boolean hasRSI1DayRSI1();
    /**
     * <code>optional int64 RSI1dayRSI1 = 320;</code>
     *
     * <pre>
     * RSI + 1day + RSI1
     * </pre>
     */
    long getRSI1DayRSI1();

    /**
     * <code>optional int64 RSI1dayRSI2 = 321;</code>
     *
     * <pre>
     * RSI + 1day + RSI2
     * </pre>
     */
    boolean hasRSI1DayRSI2();
    /**
     * <code>optional int64 RSI1dayRSI2 = 321;</code>
     *
     * <pre>
     * RSI + 1day + RSI2
     * </pre>
     */
    long getRSI1DayRSI2();

    /**
     * <code>optional int64 RSI1dayRSI3 = 322;</code>
     *
     * <pre>
     * RSI + 1day + RSI3
     * </pre>
     */
    boolean hasRSI1DayRSI3();
    /**
     * <code>optional int64 RSI1dayRSI3 = 322;</code>
     *
     * <pre>
     * RSI + 1day + RSI3
     * </pre>
     */
    long getRSI1DayRSI3();

    /**
     * <code>optional int64 WR1minWR1 = 323;</code>
     *
     * <pre>
     * WR
     * </pre>
     */
    boolean hasWR1MinWR1();
    /**
     * <code>optional int64 WR1minWR1 = 323;</code>
     *
     * <pre>
     * WR
     * </pre>
     */
    long getWR1MinWR1();

    /**
     * <code>optional int64 WR1minWR2 = 324;</code>
     *
     * <pre>
     * WR + 1min + WR2
     * </pre>
     */
    boolean hasWR1MinWR2();
    /**
     * <code>optional int64 WR1minWR2 = 324;</code>
     *
     * <pre>
     * WR + 1min + WR2
     * </pre>
     */
    long getWR1MinWR2();

    /**
     * <code>optional int64 WR5minWR1 = 325;</code>
     *
     * <pre>
     * WR + 5min + WR1
     * </pre>
     */
    boolean hasWR5MinWR1();
    /**
     * <code>optional int64 WR5minWR1 = 325;</code>
     *
     * <pre>
     * WR + 5min + WR1
     * </pre>
     */
    long getWR5MinWR1();

    /**
     * <code>optional int64 WR5minWR2 = 326;</code>
     *
     * <pre>
     * WR + 5min + WR2
     * </pre>
     */
    boolean hasWR5MinWR2();
    /**
     * <code>optional int64 WR5minWR2 = 326;</code>
     *
     * <pre>
     * WR + 5min + WR2
     * </pre>
     */
    long getWR5MinWR2();

    /**
     * <code>optional int64 WR1dayWR1 = 327;</code>
     *
     * <pre>
     * WR + 1day + WR1
     * </pre>
     */
    boolean hasWR1DayWR1();
    /**
     * <code>optional int64 WR1dayWR1 = 327;</code>
     *
     * <pre>
     * WR + 1day + WR1
     * </pre>
     */
    long getWR1DayWR1();

    /**
     * <code>optional int64 WR1dayWR2 = 328;</code>
     *
     * <pre>
     * WR + 1day + WR2
     * </pre>
     */
    boolean hasWR1DayWR2();
    /**
     * <code>optional int64 WR1dayWR2 = 328;</code>
     *
     * <pre>
     * WR + 1day + WR2
     * </pre>
     */
    long getWR1DayWR2();

    /**
     * <code>optional int64 LeiXing = 400;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    boolean hasLeiXing();
    /**
     * <code>optional int64 LeiXing = 400;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    long getLeiXing();

    /**
     * <code>optional int64 ZiLeiXing = 401;</code>
     *
     * <pre>
     * 子类型
     * </pre>
     */
    boolean hasZiLeiXing();
    /**
     * <code>optional int64 ZiLeiXing = 401;</code>
     *
     * <pre>
     * 子类型
     * </pre>
     */
    long getZiLeiXing();

    /**
     * <code>optional string LeiXingMingCheng = 402;</code>
     *
     * <pre>
     * 类型名称
     * </pre>
     */
    boolean hasLeiXingMingCheng();
    /**
     * <code>optional string LeiXingMingCheng = 402;</code>
     *
     * <pre>
     * 类型名称
     * </pre>
     */
    java.lang.String getLeiXingMingCheng();
    /**
     * <code>optional string LeiXingMingCheng = 402;</code>
     *
     * <pre>
     * 类型名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getLeiXingMingChengBytes();

    /**
     * <code>optional int64 ChengJiaoLiangDanWei = 403;</code>
     *
     * <pre>
     * 成交量单位
     * </pre>
     */
    boolean hasChengJiaoLiangDanWei();
    /**
     * <code>optional int64 ChengJiaoLiangDanWei = 403;</code>
     *
     * <pre>
     * 成交量单位
     * </pre>
     */
    long getChengJiaoLiangDanWei();

    /**
     * <code>optional int64 FJJJLeiXing = 501;</code>
     *
     * <pre>
     * 分级基金
     * </pre>
     */
    boolean hasFJJJLeiXing();
    /**
     * <code>optional int64 FJJJLeiXing = 501;</code>
     *
     * <pre>
     * 分级基金
     * </pre>
     */
    long getFJJJLeiXing();

    /**
     * <code>optional int64 ZhengTiYiJia = 502;</code>
     *
     * <pre>
     * 整体溢价
     * </pre>
     */
    boolean hasZhengTiYiJia();
    /**
     * <code>optional int64 ZhengTiYiJia = 502;</code>
     *
     * <pre>
     * 整体溢价
     * </pre>
     */
    long getZhengTiYiJia();

    /**
     * <code>optional int64 MYiJia = 551;</code>
     *
     * <pre>
     *母基金溢价
     * </pre>
     */
    boolean hasMYiJia();
    /**
     * <code>optional int64 MYiJia = 551;</code>
     *
     * <pre>
     *母基金溢价
     * </pre>
     */
    long getMYiJia();

    /**
     * <code>optional int64 MShiShiJingZhi = 552;</code>
     *
     * <pre>
     * 母基金实时净值
     * </pre>
     */
    boolean hasMShiShiJingZhi();
    /**
     * <code>optional int64 MShiShiJingZhi = 552;</code>
     *
     * <pre>
     * 母基金实时净值
     * </pre>
     */
    long getMShiShiJingZhi();

    /**
     * <code>optional int64 MShangZheXuZhang = 553;</code>
     *
     * <pre>
     * 上折母基需涨
     * </pre>
     */
    boolean hasMShangZheXuZhang();
    /**
     * <code>optional int64 MShangZheXuZhang = 553;</code>
     *
     * <pre>
     * 上折母基需涨
     * </pre>
     */
    long getMShangZheXuZhang();

    /**
     * <code>optional int64 MXiaZheXuDie = 554;</code>
     *
     * <pre>
     * 下折母基需跌
     * </pre>
     */
    boolean hasMXiaZheXuDie();
    /**
     * <code>optional int64 MXiaZheXuDie = 554;</code>
     *
     * <pre>
     * 下折母基需跌
     * </pre>
     */
    long getMXiaZheXuDie();

    /**
     * <code>optional int64 YinHanShouYi = 511;</code>
     *
     * <pre>
     * 隐含收益，仅A基金
     * </pre>
     */
    boolean hasYinHanShouYi();
    /**
     * <code>optional int64 YinHanShouYi = 511;</code>
     *
     * <pre>
     * 隐含收益，仅A基金
     * </pre>
     */
    long getYinHanShouYi();

    /**
     * <code>optional int64 JiaGeGangGan = 512;</code>
     *
     * <pre>
     * 价格杠杆，仅B基金
     * </pre>
     */
    boolean hasJiaGeGangGan();
    /**
     * <code>optional int64 JiaGeGangGan = 512;</code>
     *
     * <pre>
     * 价格杠杆，仅B基金
     * </pre>
     */
    long getJiaGeGangGan();

    /**
     * <code>optional string PinZhongObj = 601;</code>
     *
     * <pre>
     *财务数据
     * </pre>
     */
    boolean hasPinZhongObj();
    /**
     * <code>optional string PinZhongObj = 601;</code>
     *
     * <pre>
     *财务数据
     * </pre>
     */
    java.lang.String getPinZhongObj();
    /**
     * <code>optional string PinZhongObj = 601;</code>
     *
     * <pre>
     *财务数据
     * </pre>
     */
    com.google.protobuf.ByteString
        getPinZhongObjBytes();

    /**
     * <code>optional string BaoGaoQi = 602;</code>
     *
     * <pre>
     * 报告期YYYYMMDDttmmss EndDate
     * </pre>
     */
    boolean hasBaoGaoQi();
    /**
     * <code>optional string BaoGaoQi = 602;</code>
     *
     * <pre>
     * 报告期YYYYMMDDttmmss EndDate
     * </pre>
     */
    java.lang.String getBaoGaoQi();
    /**
     * <code>optional string BaoGaoQi = 602;</code>
     *
     * <pre>
     * 报告期YYYYMMDDttmmss EndDate
     * </pre>
     */
    com.google.protobuf.ByteString
        getBaoGaoQiBytes();

    /**
     * <code>optional string ShangShiRiQi = 603;</code>
     *
     * <pre>
     * 上市日期YYYYMMDDttmmss C35
     * </pre>
     */
    boolean hasShangShiRiQi();
    /**
     * <code>optional string ShangShiRiQi = 603;</code>
     *
     * <pre>
     * 上市日期YYYYMMDDttmmss C35
     * </pre>
     */
    java.lang.String getShangShiRiQi();
    /**
     * <code>optional string ShangShiRiQi = 603;</code>
     *
     * <pre>
     * 上市日期YYYYMMDDttmmss C35
     * </pre>
     */
    com.google.protobuf.ByteString
        getShangShiRiQiBytes();

    /**
     * <code>optional int64 MeiGuShouYi = 604;</code>
     *
     * <pre>
     * 每股收益 C3   
     * </pre>
     */
    boolean hasMeiGuShouYi();
    /**
     * <code>optional int64 MeiGuShouYi = 604;</code>
     *
     * <pre>
     * 每股收益 C3   
     * </pre>
     */
    long getMeiGuShouYi();

    /**
     * <code>optional int64 MeiGuJingZiChan = 605;</code>
     *
     * <pre>
     * 每股净资产 C4
     * </pre>
     */
    boolean hasMeiGuJingZiChan();
    /**
     * <code>optional int64 MeiGuJingZiChan = 605;</code>
     *
     * <pre>
     * 每股净资产 C4
     * </pre>
     */
    long getMeiGuJingZiChan();

    /**
     * <code>optional int64 JingZiChanShouYiLv = 606;</code>
     *
     * <pre>
     * 净资产收益率 C5
     * </pre>
     */
    boolean hasJingZiChanShouYiLv();
    /**
     * <code>optional int64 JingZiChanShouYiLv = 606;</code>
     *
     * <pre>
     * 净资产收益率 C5
     * </pre>
     */
    long getJingZiChanShouYiLv();

    /**
     * <code>optional int64 MeiGuJingYingXianJin = 607;</code>
     *
     * <pre>
     * 每股经营现金 C6
     * </pre>
     */
    boolean hasMeiGuJingYingXianJin();
    /**
     * <code>optional int64 MeiGuJingYingXianJin = 607;</code>
     *
     * <pre>
     * 每股经营现金 C6
     * </pre>
     */
    long getMeiGuJingYingXianJin();

    /**
     * <code>optional int64 MeiGuGongJiJin = 608;</code>
     *
     * <pre>
     * 每股公积金 C7
     * </pre>
     */
    boolean hasMeiGuGongJiJin();
    /**
     * <code>optional int64 MeiGuGongJiJin = 608;</code>
     *
     * <pre>
     * 每股公积金 C7
     * </pre>
     */
    long getMeiGuGongJiJin();

    /**
     * <code>optional int64 MeiGuWeiFenPei = 609;</code>
     *
     * <pre>
     * 每股未分配 C8   
     * </pre>
     */
    boolean hasMeiGuWeiFenPei();
    /**
     * <code>optional int64 MeiGuWeiFenPei = 609;</code>
     *
     * <pre>
     * 每股未分配 C8   
     * </pre>
     */
    long getMeiGuWeiFenPei();

    /**
     * <code>optional int64 GuDongQuanYiBi = 610;</code>
     *
     * <pre>
     * 股东权益比 C9
     * </pre>
     */
    boolean hasGuDongQuanYiBi();
    /**
     * <code>optional int64 GuDongQuanYiBi = 610;</code>
     *
     * <pre>
     * 股东权益比 C9
     * </pre>
     */
    long getGuDongQuanYiBi();

    /**
     * <code>optional int64 JingLiRunTongBi = 611;</code>
     *
     * <pre>
     * 净利润同比 C10  
     * </pre>
     */
    boolean hasJingLiRunTongBi();
    /**
     * <code>optional int64 JingLiRunTongBi = 611;</code>
     *
     * <pre>
     * 净利润同比 C10  
     * </pre>
     */
    long getJingLiRunTongBi();

    /**
     * <code>optional int64 ZhuYingShouRuTongBi = 612;</code>
     *
     * <pre>
     * 主营收入同比 C11  
     * </pre>
     */
    boolean hasZhuYingShouRuTongBi();
    /**
     * <code>optional int64 ZhuYingShouRuTongBi = 612;</code>
     *
     * <pre>
     * 主营收入同比 C11  
     * </pre>
     */
    long getZhuYingShouRuTongBi();

    /**
     * <code>optional int64 XiaoShouMaoLiLv = 613;</code>
     *
     * <pre>
     * 销售毛利率 C12
     * </pre>
     */
    boolean hasXiaoShouMaoLiLv();
    /**
     * <code>optional int64 XiaoShouMaoLiLv = 613;</code>
     *
     * <pre>
     * 销售毛利率 C12
     * </pre>
     */
    long getXiaoShouMaoLiLv();

    /**
     * <code>optional int64 TiaoZhengMeiGuJingZi = 614;</code>
     *
     * <pre>
     * 调整每股净资 C13 
     * </pre>
     */
    boolean hasTiaoZhengMeiGuJingZi();
    /**
     * <code>optional int64 TiaoZhengMeiGuJingZi = 614;</code>
     *
     * <pre>
     * 调整每股净资 C13 
     * </pre>
     */
    long getTiaoZhengMeiGuJingZi();

    /**
     * <code>optional int64 ZongZiChan = 615;</code>
     *
     * <pre>
     * 总资产 C14   
     * </pre>
     */
    boolean hasZongZiChan();
    /**
     * <code>optional int64 ZongZiChan = 615;</code>
     *
     * <pre>
     * 总资产 C14   
     * </pre>
     */
    long getZongZiChan();

    /**
     * <code>optional int64 LiuDongZiChan = 616;</code>
     *
     * <pre>
     * 流动资产 C15
     * </pre>
     */
    boolean hasLiuDongZiChan();
    /**
     * <code>optional int64 LiuDongZiChan = 616;</code>
     *
     * <pre>
     * 流动资产 C15
     * </pre>
     */
    long getLiuDongZiChan();

    /**
     * <code>optional int64 GuDingZiChan = 617;</code>
     *
     * <pre>
     * 固定资产 C16
     * </pre>
     */
    boolean hasGuDingZiChan();
    /**
     * <code>optional int64 GuDingZiChan = 617;</code>
     *
     * <pre>
     * 固定资产 C16
     * </pre>
     */
    long getGuDingZiChan();

    /**
     * <code>optional int64 WuXingZiChan = 618;</code>
     *
     * <pre>
     * 无形资产 C17   
     * </pre>
     */
    boolean hasWuXingZiChan();
    /**
     * <code>optional int64 WuXingZiChan = 618;</code>
     *
     * <pre>
     * 无形资产 C17   
     * </pre>
     */
    long getWuXingZiChan();

    /**
     * <code>optional int64 LiuDongFuZhai = 619;</code>
     *
     * <pre>
     * 流动负债 C18
     * </pre>
     */
    boolean hasLiuDongFuZhai();
    /**
     * <code>optional int64 LiuDongFuZhai = 619;</code>
     *
     * <pre>
     * 流动负债 C18
     * </pre>
     */
    long getLiuDongFuZhai();

    /**
     * <code>optional int64 ChangQiFuZhai = 620;</code>
     *
     * <pre>
     * 长期负债 C19
     * </pre>
     */
    boolean hasChangQiFuZhai();
    /**
     * <code>optional int64 ChangQiFuZhai = 620;</code>
     *
     * <pre>
     * 长期负债 C19
     * </pre>
     */
    long getChangQiFuZhai();

    /**
     * <code>optional int64 ZongFuZhai = 621;</code>
     *
     * <pre>
     * 总负债 C20
     * </pre>
     */
    boolean hasZongFuZhai();
    /**
     * <code>optional int64 ZongFuZhai = 621;</code>
     *
     * <pre>
     * 总负债 C20
     * </pre>
     */
    long getZongFuZhai();

    /**
     * <code>optional int64 GuDongQuanYi = 622;</code>
     *
     * <pre>
     * 股东权益 C21
     * </pre>
     */
    boolean hasGuDongQuanYi();
    /**
     * <code>optional int64 GuDongQuanYi = 622;</code>
     *
     * <pre>
     * 股东权益 C21
     * </pre>
     */
    long getGuDongQuanYi();

    /**
     * <code>optional int64 ZiBenGongJiJin = 623;</code>
     *
     * <pre>
     * 资本公积金 C22
     * </pre>
     */
    boolean hasZiBenGongJiJin();
    /**
     * <code>optional int64 ZiBenGongJiJin = 623;</code>
     *
     * <pre>
     * 资本公积金 C22
     * </pre>
     */
    long getZiBenGongJiJin();

    /**
     * <code>optional int64 JingYingXianJinLiuLiang = 624;</code>
     *
     * <pre>
     * 经营现金流量 C23
     * </pre>
     */
    boolean hasJingYingXianJinLiuLiang();
    /**
     * <code>optional int64 JingYingXianJinLiuLiang = 624;</code>
     *
     * <pre>
     * 经营现金流量 C23
     * </pre>
     */
    long getJingYingXianJinLiuLiang();

    /**
     * <code>optional int64 TouZiXianJinLiuLiang = 625;</code>
     *
     * <pre>
     * 投资现金流量 C24
     * </pre>
     */
    boolean hasTouZiXianJinLiuLiang();
    /**
     * <code>optional int64 TouZiXianJinLiuLiang = 625;</code>
     *
     * <pre>
     * 投资现金流量 C24
     * </pre>
     */
    long getTouZiXianJinLiuLiang();

    /**
     * <code>optional int64 ChouZiXianJinLiuLiang = 626;</code>
     *
     * <pre>
     * 筹资现金流量 C25
     * </pre>
     */
    boolean hasChouZiXianJinLiuLiang();
    /**
     * <code>optional int64 ChouZiXianJinLiuLiang = 626;</code>
     *
     * <pre>
     * 筹资现金流量 C25
     * </pre>
     */
    long getChouZiXianJinLiuLiang();

    /**
     * <code>optional int64 XianJinZengJiaE = 627;</code>
     *
     * <pre>
     * 现金增加额 C26 
     * </pre>
     */
    boolean hasXianJinZengJiaE();
    /**
     * <code>optional int64 XianJinZengJiaE = 627;</code>
     *
     * <pre>
     * 现金增加额 C26 
     * </pre>
     */
    long getXianJinZengJiaE();

    /**
     * <code>optional int64 ZhuYingShouRu = 628;</code>
     *
     * <pre>
     * 主营收入 C27 
     * </pre>
     */
    boolean hasZhuYingShouRu();
    /**
     * <code>optional int64 ZhuYingShouRu = 628;</code>
     *
     * <pre>
     * 主营收入 C27 
     * </pre>
     */
    long getZhuYingShouRu();

    /**
     * <code>optional int64 ZhuYingLiRun = 629;</code>
     *
     * <pre>
     * 主营利润 C28
     * </pre>
     */
    boolean hasZhuYingLiRun();
    /**
     * <code>optional int64 ZhuYingLiRun = 629;</code>
     *
     * <pre>
     * 主营利润 C28
     * </pre>
     */
    long getZhuYingLiRun();

    /**
     * <code>optional int64 YingYeLiRun = 630;</code>
     *
     * <pre>
     * 营业利润 C29
     * </pre>
     */
    boolean hasYingYeLiRun();
    /**
     * <code>optional int64 YingYeLiRun = 630;</code>
     *
     * <pre>
     * 营业利润 C29
     * </pre>
     */
    long getYingYeLiRun();

    /**
     * <code>optional int64 TouZiShouYi = 631;</code>
     *
     * <pre>
     * 投资收益 C30
     * </pre>
     */
    boolean hasTouZiShouYi();
    /**
     * <code>optional int64 TouZiShouYi = 631;</code>
     *
     * <pre>
     * 投资收益 C30
     * </pre>
     */
    long getTouZiShouYi();

    /**
     * <code>optional int64 YingYeWaiShouZhi = 632;</code>
     *
     * <pre>
     * 营业外收支 C31
     * </pre>
     */
    boolean hasYingYeWaiShouZhi();
    /**
     * <code>optional int64 YingYeWaiShouZhi = 632;</code>
     *
     * <pre>
     * 营业外收支 C31
     * </pre>
     */
    long getYingYeWaiShouZhi();

    /**
     * <code>optional int64 LiRunZongE = 633;</code>
     *
     * <pre>
     * 利润总额 C32
     * </pre>
     */
    boolean hasLiRunZongE();
    /**
     * <code>optional int64 LiRunZongE = 633;</code>
     *
     * <pre>
     * 利润总额 C32
     * </pre>
     */
    long getLiRunZongE();

    /**
     * <code>optional int64 JingLiRun = 634;</code>
     *
     * <pre>
     * 净利润 C33
     * </pre>
     */
    boolean hasJingLiRun();
    /**
     * <code>optional int64 JingLiRun = 634;</code>
     *
     * <pre>
     * 净利润 C33
     * </pre>
     */
    long getJingLiRun();

    /**
     * <code>optional int64 WeiFenPeiLiRun = 635;</code>
     *
     * <pre>
     * 未分配利润 C34
     * </pre>
     */
    boolean hasWeiFenPeiLiRun();
    /**
     * <code>optional int64 WeiFenPeiLiRun = 635;</code>
     *
     * <pre>
     * 未分配利润 C34
     * </pre>
     */
    long getWeiFenPeiLiRun();

    /**
     * <code>optional int64 ZongGuBen = 636;</code>
     *
     * <pre>
     * 总股本 C1
     * </pre>
     */
    boolean hasZongGuBen();
    /**
     * <code>optional int64 ZongGuBen = 636;</code>
     *
     * <pre>
     * 总股本 C1
     * </pre>
     */
    long getZongGuBen();

    /**
     * <code>optional int64 WuXianShouGuHeJi = 637;</code>
     *
     * <pre>
     * 无限售股合计 C36
     * </pre>
     */
    boolean hasWuXianShouGuHeJi();
    /**
     * <code>optional int64 WuXianShouGuHeJi = 637;</code>
     *
     * <pre>
     * 无限售股合计 C36
     * </pre>
     */
    long getWuXianShouGuHeJi();

    /**
     * <code>optional int64 LiuTongAGu = 638;</code>
     *
     * <pre>
     * 流通A股 C37
     * </pre>
     */
    boolean hasLiuTongAGu();
    /**
     * <code>optional int64 LiuTongAGu = 638;</code>
     *
     * <pre>
     * 流通A股 C37
     * </pre>
     */
    long getLiuTongAGu();

    /**
     * <code>optional int64 LiuTongBGu = 639;</code>
     *
     * <pre>
     * 流通B股 C38
     * </pre>
     */
    boolean hasLiuTongBGu();
    /**
     * <code>optional int64 LiuTongBGu = 639;</code>
     *
     * <pre>
     * 流通B股 C38
     * </pre>
     */
    long getLiuTongBGu();

    /**
     * <code>optional int64 JingWaiShangShiGu = 640;</code>
     *
     * <pre>
     * 境外上市股 C39
     * </pre>
     */
    boolean hasJingWaiShangShiGu();
    /**
     * <code>optional int64 JingWaiShangShiGu = 640;</code>
     *
     * <pre>
     * 境外上市股 C39
     * </pre>
     */
    long getJingWaiShangShiGu();

    /**
     * <code>optional int64 QiTaLiuTongGu = 641;</code>
     *
     * <pre>
     * 其他流通股 C40
     * </pre>
     */
    boolean hasQiTaLiuTongGu();
    /**
     * <code>optional int64 QiTaLiuTongGu = 641;</code>
     *
     * <pre>
     * 其他流通股 C40
     * </pre>
     */
    long getQiTaLiuTongGu();

    /**
     * <code>optional int64 XianShouGuHeJi = 642;</code>
     *
     * <pre>
     * 限售股合计 C41
     * </pre>
     */
    boolean hasXianShouGuHeJi();
    /**
     * <code>optional int64 XianShouGuHeJi = 642;</code>
     *
     * <pre>
     * 限售股合计 C41
     * </pre>
     */
    long getXianShouGuHeJi();

    /**
     * <code>optional int64 GuoJiaChiGu = 643;</code>
     *
     * <pre>
     * 国家持股 C42
     * </pre>
     */
    boolean hasGuoJiaChiGu();
    /**
     * <code>optional int64 GuoJiaChiGu = 643;</code>
     *
     * <pre>
     * 国家持股 C42
     * </pre>
     */
    long getGuoJiaChiGu();

    /**
     * <code>optional int64 GuoYouFaRenGu = 644;</code>
     *
     * <pre>
     * 国有法人股 C43 
     * </pre>
     */
    boolean hasGuoYouFaRenGu();
    /**
     * <code>optional int64 GuoYouFaRenGu = 644;</code>
     *
     * <pre>
     * 国有法人股 C43 
     * </pre>
     */
    long getGuoYouFaRenGu();

    /**
     * <code>optional int64 JingNeiFaRenGu = 645;</code>
     *
     * <pre>
     * 境内法人股 C44
     * </pre>
     */
    boolean hasJingNeiFaRenGu();
    /**
     * <code>optional int64 JingNeiFaRenGu = 645;</code>
     *
     * <pre>
     * 境内法人股 C44
     * </pre>
     */
    long getJingNeiFaRenGu();

    /**
     * <code>optional int64 JingNeiZiRanRenGu = 646;</code>
     *
     * <pre>
     * 境内自然人股 C45
     * </pre>
     */
    boolean hasJingNeiZiRanRenGu();
    /**
     * <code>optional int64 JingNeiZiRanRenGu = 646;</code>
     *
     * <pre>
     * 境内自然人股 C45
     * </pre>
     */
    long getJingNeiZiRanRenGu();

    /**
     * <code>optional int64 QiTaFaQiRenGu = 647;</code>
     *
     * <pre>
     * 其他发起人股 C46
     * </pre>
     */
    boolean hasQiTaFaQiRenGu();
    /**
     * <code>optional int64 QiTaFaQiRenGu = 647;</code>
     *
     * <pre>
     * 其他发起人股 C46
     * </pre>
     */
    long getQiTaFaQiRenGu();

    /**
     * <code>optional int64 MuJiFaRenGu = 648;</code>
     *
     * <pre>
     * 募集法人股 C47
     * </pre>
     */
    boolean hasMuJiFaRenGu();
    /**
     * <code>optional int64 MuJiFaRenGu = 648;</code>
     *
     * <pre>
     * 募集法人股 C47
     * </pre>
     */
    long getMuJiFaRenGu();

    /**
     * <code>optional int64 JingWaiFaRenGu = 649;</code>
     *
     * <pre>
     * 境外法人股 C48
     * </pre>
     */
    boolean hasJingWaiFaRenGu();
    /**
     * <code>optional int64 JingWaiFaRenGu = 649;</code>
     *
     * <pre>
     * 境外法人股 C48
     * </pre>
     */
    long getJingWaiFaRenGu();

    /**
     * <code>optional int64 JingWaiZiRanRenGu = 650;</code>
     *
     * <pre>
     * 境外自然人股 C49
     * </pre>
     */
    boolean hasJingWaiZiRanRenGu();
    /**
     * <code>optional int64 JingWaiZiRanRenGu = 650;</code>
     *
     * <pre>
     * 境外自然人股 C49
     * </pre>
     */
    long getJingWaiZiRanRenGu();

    /**
     * <code>optional int64 YouXianGuHuoQiTa = 651;</code>
     *
     * <pre>
     * 优先股或其他 C50    
     * </pre>
     */
    boolean hasYouXianGuHuoQiTa();
    /**
     * <code>optional int64 YouXianGuHuoQiTa = 651;</code>
     *
     * <pre>
     * 优先股或其他 C50    
     * </pre>
     */
    long getYouXianGuHuoQiTa();
  }
  /**
   * Protobuf type {@code dzhyun.StkData}
   */
  public static final class StkData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dzhyun.StkData)
      StkDataOrBuilder {
    // Use StkData.newBuilder() to construct.
    private StkData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StkData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StkData defaultInstance;
    public static StkData getDefaultInstance() {
      return defaultInstance;
    }

    public StkData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StkData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      int mutable_bitField3_ = 0;
      int mutable_bitField4_ = 0;
      int mutable_bitField5_ = 0;
      int mutable_bitField6_ = 0;
      int mutable_bitField7_ = 0;
      int mutable_bitField8_ = 0;
      int mutable_bitField9_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              obj_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              jiaoYiDaiMa_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              zhongWenJianCheng_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              zuiXinJia_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              kaiPanJia_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              zuiGaoJia_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              zuiDiJia_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              zuoShou_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              junJia_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              zhangDie_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              zhangFu_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              zhenFu_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              chengJiaoLiang_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              xianShou_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              chengJiaoE_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              zongChengJiaoBiShu_ = input.readInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              meiBiChengJiaoGuShu_ = input.readInt64();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              huanShou_ = input.readInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              liangBi_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              neiPan_ = input.readInt64();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              waiPan_ = input.readInt64();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              zongMaiRu_ = input.readInt64();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              zongMaiChu_ = input.readInt64();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              zongMaiRuJunJia_ = input.readInt64();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              zongMaiChuJunJia_ = input.readInt64();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              weiTuoMaiRuJia1_ = input.readInt64();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              weiTuoMaiRuJia2_ = input.readInt64();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              weiTuoMaiRuJia3_ = input.readInt64();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              weiTuoMaiRuJia4_ = input.readInt64();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              weiTuoMaiRuJia5_ = input.readInt64();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              weiTuoMaiRuLiang1_ = input.readInt64();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              weiTuoMaiRuLiang2_ = input.readInt64();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              weiTuoMaiRuLiang3_ = input.readInt64();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              weiTuoMaiRuLiang4_ = input.readInt64();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              weiTuoMaiRuLiang5_ = input.readInt64();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              weiTuoMaiChuJia1_ = input.readInt64();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              weiTuoMaiChuJia2_ = input.readInt64();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              weiTuoMaiChuJia3_ = input.readInt64();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              weiTuoMaiChuJia4_ = input.readInt64();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              weiTuoMaiChuJia5_ = input.readInt64();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000100;
              weiTuoMaiChuLiang1_ = input.readInt64();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000200;
              weiTuoMaiChuLiang2_ = input.readInt64();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000400;
              weiTuoMaiChuLiang3_ = input.readInt64();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000800;
              weiTuoMaiChuLiang4_ = input.readInt64();
              break;
            }
            case 360: {
              bitField1_ |= 0x00001000;
              weiTuoMaiChuLiang5_ = input.readInt64();
              break;
            }
            case 368: {
              bitField1_ |= 0x00002000;
              weiBi_ = input.readInt64();
              break;
            }
            case 376: {
              bitField1_ |= 0x00004000;
              weiCha_ = input.readInt64();
              break;
            }
            case 384: {
              bitField1_ |= 0x00008000;
              zhangSu_ = input.readInt64();
              break;
            }
            case 392: {
              bitField1_ |= 0x00010000;
              junLiang5Ri_ = input.readInt64();
              break;
            }
            case 400: {
              bitField1_ |= 0x00020000;
              shangZhangJiaShu_ = input.readInt64();
              break;
            }
            case 408: {
              bitField1_ |= 0x00040000;
              xiaDieJiaShu_ = input.readInt64();
              break;
            }
            case 416: {
              bitField1_ |= 0x00080000;
              pingPanJiaShu_ = input.readInt64();
              break;
            }
            case 424: {
              bitField1_ |= 0x00100000;
              aGuShangZhangJiaShu_ = input.readInt64();
              break;
            }
            case 432: {
              bitField1_ |= 0x00200000;
              aGuXiaDieJiaShu_ = input.readInt64();
              break;
            }
            case 440: {
              bitField1_ |= 0x00400000;
              aGuPingPanJiaShu_ = input.readInt64();
              break;
            }
            case 448: {
              bitField1_ |= 0x00800000;
              aGuChengJiaoE_ = input.readInt64();
              break;
            }
            case 456: {
              bitField1_ |= 0x01000000;
              bGuShangZhangJiaShu_ = input.readInt64();
              break;
            }
            case 464: {
              bitField1_ |= 0x02000000;
              bGuXiaDieJiaShu_ = input.readInt64();
              break;
            }
            case 472: {
              bitField1_ |= 0x04000000;
              bGuPingPanJiaShu_ = input.readInt64();
              break;
            }
            case 480: {
              bitField1_ |= 0x08000000;
              bGuChengJiaoE_ = input.readInt64();
              break;
            }
            case 488: {
              bitField1_ |= 0x10000000;
              jiJinShangZhangJiaShu_ = input.readInt64();
              break;
            }
            case 496: {
              bitField1_ |= 0x20000000;
              jiJinXiaDieJiaShu_ = input.readInt64();
              break;
            }
            case 504: {
              bitField1_ |= 0x40000000;
              jiJinPingPanJiaShu_ = input.readInt64();
              break;
            }
            case 512: {
              bitField1_ |= 0x80000000;
              jiJinChengJiaoE_ = input.readInt64();
              break;
            }
            case 520: {
              bitField2_ |= 0x00000001;
              qiTaShangZhangJiaShu_ = input.readInt64();
              break;
            }
            case 528: {
              bitField2_ |= 0x00000002;
              qiTaXiaDieJiaShu_ = input.readInt64();
              break;
            }
            case 536: {
              bitField2_ |= 0x00000004;
              qiTaPingPanJiaShu_ = input.readInt64();
              break;
            }
            case 544: {
              bitField2_ |= 0x00000008;
              qiTaChengJiaoE_ = input.readInt64();
              break;
            }
            case 552: {
              bitField2_ |= 0x00000010;
              maiRuDanShu_ = input.readInt64();
              break;
            }
            case 560: {
              bitField2_ |= 0x00000020;
              maiChuDanShu_ = input.readInt64();
              break;
            }
            case 568: {
              bitField2_ |= 0x00000040;
              maiRuZhongDanBiLi_ = input.readInt64();
              break;
            }
            case 576: {
              bitField2_ |= 0x00000080;
              maiRuDaDanBiLi_ = input.readInt64();
              break;
            }
            case 584: {
              bitField2_ |= 0x00000100;
              maiRuTeDaDanBiLi_ = input.readInt64();
              break;
            }
            case 592: {
              bitField2_ |= 0x00000200;
              maiChuZhongDanBiLi_ = input.readInt64();
              break;
            }
            case 600: {
              bitField2_ |= 0x00000400;
              maiChuDaDanBiLi_ = input.readInt64();
              break;
            }
            case 608: {
              bitField2_ |= 0x00000800;
              maiChuTeDaDanBiLi_ = input.readInt64();
              break;
            }
            case 616: {
              bitField2_ |= 0x00001000;
              fenZhongZhangFu1_ = input.readInt64();
              break;
            }
            case 624: {
              bitField2_ |= 0x00002000;
              fenZhongZhangFu2_ = input.readInt64();
              break;
            }
            case 632: {
              bitField2_ |= 0x00004000;
              fenZhongZhangFu3_ = input.readInt64();
              break;
            }
            case 640: {
              bitField2_ |= 0x00008000;
              fenZhongZhangFu4_ = input.readInt64();
              break;
            }
            case 648: {
              bitField2_ |= 0x00010000;
              fenZhongZhangFu5_ = input.readInt64();
              break;
            }
            case 656: {
              bitField2_ |= 0x00020000;
              shiYingLv_ = input.readInt64();
              break;
            }
            case 664: {
              bitField2_ |= 0x00040000;
              zhangTing_ = input.readInt64();
              break;
            }
            case 672: {
              bitField2_ |= 0x00080000;
              dieTing_ = input.readInt64();
              break;
            }
            case 682: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField2_ |= 0x00100000;
              shiChangMingCheng_ = bs;
              break;
            }
            case 690: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField2_ |= 0x00200000;
              shiChangDuanMingCheng_ = bs;
              break;
            }
            case 696: {
              bitField2_ |= 0x00400000;
              jiGouChiHuoShu_ = input.readInt64();
              break;
            }
            case 704: {
              bitField2_ |= 0x00800000;
              jiGouTuHuoShu_ = input.readInt64();
              break;
            }
            case 712: {
              bitField2_ |= 0x01000000;
              jiGouChiHuoLiang_ = input.readInt64();
              break;
            }
            case 720: {
              bitField2_ |= 0x02000000;
              jiGouTuHuoLiang_ = input.readInt64();
              break;
            }
            case 728: {
              bitField2_ |= 0x04000000;
              jiGouChiHuoJunE_ = input.readInt64();
              break;
            }
            case 736: {
              bitField2_ |= 0x08000000;
              jiGouTuHuoJunE_ = input.readInt64();
              break;
            }
            case 744: {
              bitField2_ |= 0x10000000;
              meiShouGuShu_ = input.readInt64();
              break;
            }
            case 752: {
              bitField2_ |= 0x20000000;
              jiaoYiDanWei_ = input.readInt64();
              break;
            }
            case 760: {
              bitField2_ |= 0x40000000;
              shiXiaoLv_ = input.readInt64();
              break;
            }
            case 768: {
              bitField2_ |= 0x80000000;
              shiJian_ = input.readInt64();
              break;
            }
            case 776: {
              bitField3_ |= 0x00000001;
              shiJingLv_ = input.readInt64();
              break;
            }
            case 784: {
              bitField3_ |= 0x00000002;
              zongShiZhi_ = input.readInt64();
              break;
            }
            case 792: {
              bitField3_ |= 0x00000004;
              liuTongShiZhi_ = input.readInt64();
              break;
            }
            case 1600: {
              bitField3_ |= 0x00000008;
              mA1MinMA1_ = input.readInt64();
              break;
            }
            case 1608: {
              bitField3_ |= 0x00000010;
              mA1MinMA2_ = input.readInt64();
              break;
            }
            case 1616: {
              bitField3_ |= 0x00000020;
              mA1MinMA3_ = input.readInt64();
              break;
            }
            case 1624: {
              bitField3_ |= 0x00000040;
              mA1MinMA4_ = input.readInt64();
              break;
            }
            case 1632: {
              bitField3_ |= 0x00000080;
              mA1MinMA5_ = input.readInt64();
              break;
            }
            case 1640: {
              bitField3_ |= 0x00000100;
              mA1MinMA6_ = input.readInt64();
              break;
            }
            case 1648: {
              bitField3_ |= 0x00000200;
              mA5MinMA1_ = input.readInt64();
              break;
            }
            case 1656: {
              bitField3_ |= 0x00000400;
              mA5MinMA2_ = input.readInt64();
              break;
            }
            case 1664: {
              bitField3_ |= 0x00000800;
              mA5MinMA3_ = input.readInt64();
              break;
            }
            case 1672: {
              bitField3_ |= 0x00001000;
              mA5MinMA4_ = input.readInt64();
              break;
            }
            case 1680: {
              bitField3_ |= 0x00002000;
              mA5MinMA5_ = input.readInt64();
              break;
            }
            case 1688: {
              bitField3_ |= 0x00004000;
              mA5MinMA6_ = input.readInt64();
              break;
            }
            case 1696: {
              bitField3_ |= 0x00008000;
              mA1DayMA1_ = input.readInt64();
              break;
            }
            case 1704: {
              bitField3_ |= 0x00010000;
              mA1DayMA2_ = input.readInt64();
              break;
            }
            case 1712: {
              bitField3_ |= 0x00020000;
              mA1DayMA3_ = input.readInt64();
              break;
            }
            case 1720: {
              bitField3_ |= 0x00040000;
              mA1DayMA4_ = input.readInt64();
              break;
            }
            case 1728: {
              bitField3_ |= 0x00080000;
              mA1DayMA5_ = input.readInt64();
              break;
            }
            case 1736: {
              bitField3_ |= 0x00100000;
              mA1DayMA6_ = input.readInt64();
              break;
            }
            case 1744: {
              bitField3_ |= 0x00200000;
              bOLL1MinMID_ = input.readInt64();
              break;
            }
            case 1752: {
              bitField3_ |= 0x00400000;
              bOLL1MinUPPER_ = input.readInt64();
              break;
            }
            case 1760: {
              bitField3_ |= 0x00800000;
              bOLL1MinLOWER_ = input.readInt64();
              break;
            }
            case 1768: {
              bitField3_ |= 0x01000000;
              bOLL5MinMID_ = input.readInt64();
              break;
            }
            case 1776: {
              bitField3_ |= 0x02000000;
              bOLL5MinUPPER_ = input.readInt64();
              break;
            }
            case 1784: {
              bitField3_ |= 0x04000000;
              bOLL5MinLOWER_ = input.readInt64();
              break;
            }
            case 1792: {
              bitField3_ |= 0x08000000;
              bOLL1DayMID_ = input.readInt64();
              break;
            }
            case 1800: {
              bitField3_ |= 0x10000000;
              bOLL1DayUPPER_ = input.readInt64();
              break;
            }
            case 1808: {
              bitField3_ |= 0x20000000;
              bOLL1DayLOWER_ = input.readInt64();
              break;
            }
            case 1816: {
              bitField3_ |= 0x40000000;
              vOL1Min_ = input.readInt64();
              break;
            }
            case 1824: {
              bitField3_ |= 0x80000000;
              vOL1MinMA1_ = input.readInt64();
              break;
            }
            case 1832: {
              bitField4_ |= 0x00000001;
              vOL1MinMA2_ = input.readInt64();
              break;
            }
            case 1840: {
              bitField4_ |= 0x00000002;
              vOL1MinMA3_ = input.readInt64();
              break;
            }
            case 1848: {
              bitField4_ |= 0x00000004;
              vOL5Min_ = input.readInt64();
              break;
            }
            case 1856: {
              bitField4_ |= 0x00000008;
              vOL5MinMA1_ = input.readInt64();
              break;
            }
            case 1864: {
              bitField4_ |= 0x00000010;
              vOL5MinMA2_ = input.readInt64();
              break;
            }
            case 1872: {
              bitField4_ |= 0x00000020;
              vOL5MinMA3_ = input.readInt64();
              break;
            }
            case 1880: {
              bitField4_ |= 0x00000040;
              vOL1Day_ = input.readInt64();
              break;
            }
            case 1888: {
              bitField4_ |= 0x00000080;
              vOL1DayMA1_ = input.readInt64();
              break;
            }
            case 1896: {
              bitField4_ |= 0x00000100;
              vOL1DayMA2_ = input.readInt64();
              break;
            }
            case 1904: {
              bitField4_ |= 0x00000200;
              vOL1DayMA3_ = input.readInt64();
              break;
            }
            case 1912: {
              bitField4_ |= 0x00000400;
              aRBR1MinAR_ = input.readInt64();
              break;
            }
            case 1920: {
              bitField4_ |= 0x00000800;
              aRBR1MinBR_ = input.readInt64();
              break;
            }
            case 1928: {
              bitField4_ |= 0x00001000;
              aRBR5MinAR_ = input.readInt64();
              break;
            }
            case 1936: {
              bitField4_ |= 0x00002000;
              aRBR5MinBR_ = input.readInt64();
              break;
            }
            case 1944: {
              bitField4_ |= 0x00004000;
              aRBR1DayAR_ = input.readInt64();
              break;
            }
            case 1952: {
              bitField4_ |= 0x00008000;
              aRBR1DayBR_ = input.readInt64();
              break;
            }
            case 1960: {
              bitField4_ |= 0x00010000;
              bIAS1MinBIAS1_ = input.readInt64();
              break;
            }
            case 1968: {
              bitField4_ |= 0x00020000;
              bIAS1MinBIAS2_ = input.readInt64();
              break;
            }
            case 1976: {
              bitField4_ |= 0x00040000;
              bIAS1MinBIAS3_ = input.readInt64();
              break;
            }
            case 1984: {
              bitField4_ |= 0x00080000;
              bIAS5MinBIAS1_ = input.readInt64();
              break;
            }
            case 1992: {
              bitField4_ |= 0x00100000;
              bIAS5MinBIAS2_ = input.readInt64();
              break;
            }
            case 2000: {
              bitField4_ |= 0x00200000;
              bIAS5MinBIAS3_ = input.readInt64();
              break;
            }
            case 2008: {
              bitField4_ |= 0x00400000;
              bIAS1DayBIAS1_ = input.readInt64();
              break;
            }
            case 2016: {
              bitField4_ |= 0x00800000;
              bIAS1DayBIAS2_ = input.readInt64();
              break;
            }
            case 2024: {
              bitField4_ |= 0x01000000;
              bIAS1DayBIAS3_ = input.readInt64();
              break;
            }
            case 2032: {
              bitField4_ |= 0x02000000;
              cCI1Min_ = input.readInt64();
              break;
            }
            case 2040: {
              bitField4_ |= 0x04000000;
              cCI5Min_ = input.readInt64();
              break;
            }
            case 2048: {
              bitField4_ |= 0x08000000;
              cCI1Day_ = input.readInt64();
              break;
            }
            case 2056: {
              bitField4_ |= 0x10000000;
              cJBS1MinCJBS_ = input.readInt64();
              break;
            }
            case 2064: {
              bitField4_ |= 0x20000000;
              cJBS5MinCJBS_ = input.readInt64();
              break;
            }
            case 2072: {
              bitField4_ |= 0x40000000;
              cJBS1DayCJBS_ = input.readInt64();
              break;
            }
            case 2080: {
              bitField4_ |= 0x80000000;
              cR1MinCR_ = input.readInt64();
              break;
            }
            case 2088: {
              bitField5_ |= 0x00000001;
              cR1MinMA1_ = input.readInt64();
              break;
            }
            case 2096: {
              bitField5_ |= 0x00000002;
              cR1MinMA2_ = input.readInt64();
              break;
            }
            case 2104: {
              bitField5_ |= 0x00000004;
              cR1MinMA3_ = input.readInt64();
              break;
            }
            case 2112: {
              bitField5_ |= 0x00000008;
              cR5MinCR_ = input.readInt64();
              break;
            }
            case 2120: {
              bitField5_ |= 0x00000010;
              cR5MinMA1_ = input.readInt64();
              break;
            }
            case 2128: {
              bitField5_ |= 0x00000020;
              cR5MinMA2_ = input.readInt64();
              break;
            }
            case 2136: {
              bitField5_ |= 0x00000040;
              cR5MinMA3_ = input.readInt64();
              break;
            }
            case 2144: {
              bitField5_ |= 0x00000080;
              cR1DayCR_ = input.readInt64();
              break;
            }
            case 2152: {
              bitField5_ |= 0x00000100;
              cR1DayMA1_ = input.readInt64();
              break;
            }
            case 2160: {
              bitField5_ |= 0x00000200;
              cR1DayMA2_ = input.readInt64();
              break;
            }
            case 2168: {
              bitField5_ |= 0x00000400;
              cR1DayMA3_ = input.readInt64();
              break;
            }
            case 2176: {
              bitField5_ |= 0x00000800;
              dMA1MinDDD_ = input.readInt64();
              break;
            }
            case 2184: {
              bitField5_ |= 0x00001000;
              dMA1MinAMA_ = input.readInt64();
              break;
            }
            case 2192: {
              bitField5_ |= 0x00002000;
              dMA5MinDDD_ = input.readInt64();
              break;
            }
            case 2200: {
              bitField5_ |= 0x00004000;
              dMA5MinAMA_ = input.readInt64();
              break;
            }
            case 2208: {
              bitField5_ |= 0x00008000;
              dMA1DayDDD_ = input.readInt64();
              break;
            }
            case 2216: {
              bitField5_ |= 0x00010000;
              dMA1DayAMA_ = input.readInt64();
              break;
            }
            case 2224: {
              bitField5_ |= 0x00020000;
              dMI1MinPDI_ = input.readInt64();
              break;
            }
            case 2232: {
              bitField5_ |= 0x00040000;
              dMI1MinMDI_ = input.readInt64();
              break;
            }
            case 2240: {
              bitField5_ |= 0x00080000;
              dMI1MinADX_ = input.readInt64();
              break;
            }
            case 2248: {
              bitField5_ |= 0x00100000;
              dMI1MinADXR_ = input.readInt64();
              break;
            }
            case 2256: {
              bitField5_ |= 0x00200000;
              dMI5MinPDI_ = input.readInt64();
              break;
            }
            case 2264: {
              bitField5_ |= 0x00400000;
              dMI5MinMDI_ = input.readInt64();
              break;
            }
            case 2272: {
              bitField5_ |= 0x00800000;
              dMI5MinADX_ = input.readInt64();
              break;
            }
            case 2280: {
              bitField5_ |= 0x01000000;
              dMI5MinADXR_ = input.readInt64();
              break;
            }
            case 2288: {
              bitField5_ |= 0x02000000;
              dMI1DayPDI_ = input.readInt64();
              break;
            }
            case 2296: {
              bitField5_ |= 0x04000000;
              dMI1DayMDI_ = input.readInt64();
              break;
            }
            case 2304: {
              bitField5_ |= 0x08000000;
              dMI1DayADX_ = input.readInt64();
              break;
            }
            case 2312: {
              bitField5_ |= 0x10000000;
              dMI1DayADXR_ = input.readInt64();
              break;
            }
            case 2320: {
              bitField5_ |= 0x20000000;
              kDJ1MinK_ = input.readInt64();
              break;
            }
            case 2328: {
              bitField5_ |= 0x40000000;
              kDJ1MinD_ = input.readInt64();
              break;
            }
            case 2336: {
              bitField5_ |= 0x80000000;
              kDJ1MinJ_ = input.readInt64();
              break;
            }
            case 2344: {
              bitField6_ |= 0x00000001;
              kDJ5MinK_ = input.readInt64();
              break;
            }
            case 2352: {
              bitField6_ |= 0x00000002;
              kDJ5MinD_ = input.readInt64();
              break;
            }
            case 2360: {
              bitField6_ |= 0x00000004;
              kDJ5MinJ_ = input.readInt64();
              break;
            }
            case 2368: {
              bitField6_ |= 0x00000008;
              kDJ1DayK_ = input.readInt64();
              break;
            }
            case 2376: {
              bitField6_ |= 0x00000010;
              kDJ1DayD_ = input.readInt64();
              break;
            }
            case 2384: {
              bitField6_ |= 0x00000020;
              kDJ1DayJ_ = input.readInt64();
              break;
            }
            case 2392: {
              bitField6_ |= 0x00000040;
              mACD1MinDIFF_ = input.readInt64();
              break;
            }
            case 2400: {
              bitField6_ |= 0x00000080;
              mACD1MinDEA_ = input.readInt64();
              break;
            }
            case 2408: {
              bitField6_ |= 0x00000100;
              mACD1MinMACD_ = input.readInt64();
              break;
            }
            case 2416: {
              bitField6_ |= 0x00000200;
              mACD5MinDIFF_ = input.readInt64();
              break;
            }
            case 2424: {
              bitField6_ |= 0x00000400;
              mACD5MinDEA_ = input.readInt64();
              break;
            }
            case 2432: {
              bitField6_ |= 0x00000800;
              mACD5MinMACD_ = input.readInt64();
              break;
            }
            case 2440: {
              bitField6_ |= 0x00001000;
              mACD1DayDIFF_ = input.readInt64();
              break;
            }
            case 2448: {
              bitField6_ |= 0x00002000;
              mACD1DayDEA_ = input.readInt64();
              break;
            }
            case 2456: {
              bitField6_ |= 0x00004000;
              mACD1DayMACD_ = input.readInt64();
              break;
            }
            case 2464: {
              bitField6_ |= 0x00008000;
              oBV1Min_ = input.readInt64();
              break;
            }
            case 2472: {
              bitField6_ |= 0x00010000;
              oBV5Min_ = input.readInt64();
              break;
            }
            case 2480: {
              bitField6_ |= 0x00020000;
              oBV1Day_ = input.readInt64();
              break;
            }
            case 2488: {
              bitField6_ |= 0x00040000;
              pSY1Min_ = input.readInt64();
              break;
            }
            case 2496: {
              bitField6_ |= 0x00080000;
              pSY5Min_ = input.readInt64();
              break;
            }
            case 2504: {
              bitField6_ |= 0x00100000;
              pSY1Day_ = input.readInt64();
              break;
            }
            case 2512: {
              bitField6_ |= 0x00200000;
              rSI1MinRSI1_ = input.readInt64();
              break;
            }
            case 2520: {
              bitField6_ |= 0x00400000;
              rSI1MinRSI2_ = input.readInt64();
              break;
            }
            case 2528: {
              bitField6_ |= 0x00800000;
              rSI1MinRSI3_ = input.readInt64();
              break;
            }
            case 2536: {
              bitField6_ |= 0x01000000;
              rSI5MinRSI1_ = input.readInt64();
              break;
            }
            case 2544: {
              bitField6_ |= 0x02000000;
              rSI5MinRSI2_ = input.readInt64();
              break;
            }
            case 2552: {
              bitField6_ |= 0x04000000;
              rSI5MinRSI3_ = input.readInt64();
              break;
            }
            case 2560: {
              bitField6_ |= 0x08000000;
              rSI1DayRSI1_ = input.readInt64();
              break;
            }
            case 2568: {
              bitField6_ |= 0x10000000;
              rSI1DayRSI2_ = input.readInt64();
              break;
            }
            case 2576: {
              bitField6_ |= 0x20000000;
              rSI1DayRSI3_ = input.readInt64();
              break;
            }
            case 2584: {
              bitField6_ |= 0x40000000;
              wR1MinWR1_ = input.readInt64();
              break;
            }
            case 2592: {
              bitField6_ |= 0x80000000;
              wR1MinWR2_ = input.readInt64();
              break;
            }
            case 2600: {
              bitField7_ |= 0x00000001;
              wR5MinWR1_ = input.readInt64();
              break;
            }
            case 2608: {
              bitField7_ |= 0x00000002;
              wR5MinWR2_ = input.readInt64();
              break;
            }
            case 2616: {
              bitField7_ |= 0x00000004;
              wR1DayWR1_ = input.readInt64();
              break;
            }
            case 2624: {
              bitField7_ |= 0x00000008;
              wR1DayWR2_ = input.readInt64();
              break;
            }
            case 3200: {
              bitField7_ |= 0x00000010;
              leiXing_ = input.readInt64();
              break;
            }
            case 3208: {
              bitField7_ |= 0x00000020;
              ziLeiXing_ = input.readInt64();
              break;
            }
            case 3218: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField7_ |= 0x00000040;
              leiXingMingCheng_ = bs;
              break;
            }
            case 3224: {
              bitField7_ |= 0x00000080;
              chengJiaoLiangDanWei_ = input.readInt64();
              break;
            }
            case 4008: {
              bitField7_ |= 0x00000100;
              fJJJLeiXing_ = input.readInt64();
              break;
            }
            case 4016: {
              bitField7_ |= 0x00000200;
              zhengTiYiJia_ = input.readInt64();
              break;
            }
            case 4088: {
              bitField7_ |= 0x00004000;
              yinHanShouYi_ = input.readInt64();
              break;
            }
            case 4096: {
              bitField7_ |= 0x00008000;
              jiaGeGangGan_ = input.readInt64();
              break;
            }
            case 4408: {
              bitField7_ |= 0x00000400;
              mYiJia_ = input.readInt64();
              break;
            }
            case 4416: {
              bitField7_ |= 0x00000800;
              mShiShiJingZhi_ = input.readInt64();
              break;
            }
            case 4424: {
              bitField7_ |= 0x00001000;
              mShangZheXuZhang_ = input.readInt64();
              break;
            }
            case 4432: {
              bitField7_ |= 0x00002000;
              mXiaZheXuDie_ = input.readInt64();
              break;
            }
            case 4810: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField7_ |= 0x00010000;
              pinZhongObj_ = bs;
              break;
            }
            case 4818: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField7_ |= 0x00020000;
              baoGaoQi_ = bs;
              break;
            }
            case 4826: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField7_ |= 0x00040000;
              shangShiRiQi_ = bs;
              break;
            }
            case 4832: {
              bitField7_ |= 0x00080000;
              meiGuShouYi_ = input.readInt64();
              break;
            }
            case 4840: {
              bitField7_ |= 0x00100000;
              meiGuJingZiChan_ = input.readInt64();
              break;
            }
            case 4848: {
              bitField7_ |= 0x00200000;
              jingZiChanShouYiLv_ = input.readInt64();
              break;
            }
            case 4856: {
              bitField7_ |= 0x00400000;
              meiGuJingYingXianJin_ = input.readInt64();
              break;
            }
            case 4864: {
              bitField7_ |= 0x00800000;
              meiGuGongJiJin_ = input.readInt64();
              break;
            }
            case 4872: {
              bitField7_ |= 0x01000000;
              meiGuWeiFenPei_ = input.readInt64();
              break;
            }
            case 4880: {
              bitField7_ |= 0x02000000;
              guDongQuanYiBi_ = input.readInt64();
              break;
            }
            case 4888: {
              bitField7_ |= 0x04000000;
              jingLiRunTongBi_ = input.readInt64();
              break;
            }
            case 4896: {
              bitField7_ |= 0x08000000;
              zhuYingShouRuTongBi_ = input.readInt64();
              break;
            }
            case 4904: {
              bitField7_ |= 0x10000000;
              xiaoShouMaoLiLv_ = input.readInt64();
              break;
            }
            case 4912: {
              bitField7_ |= 0x20000000;
              tiaoZhengMeiGuJingZi_ = input.readInt64();
              break;
            }
            case 4920: {
              bitField7_ |= 0x40000000;
              zongZiChan_ = input.readInt64();
              break;
            }
            case 4928: {
              bitField7_ |= 0x80000000;
              liuDongZiChan_ = input.readInt64();
              break;
            }
            case 4936: {
              bitField8_ |= 0x00000001;
              guDingZiChan_ = input.readInt64();
              break;
            }
            case 4944: {
              bitField8_ |= 0x00000002;
              wuXingZiChan_ = input.readInt64();
              break;
            }
            case 4952: {
              bitField8_ |= 0x00000004;
              liuDongFuZhai_ = input.readInt64();
              break;
            }
            case 4960: {
              bitField8_ |= 0x00000008;
              changQiFuZhai_ = input.readInt64();
              break;
            }
            case 4968: {
              bitField8_ |= 0x00000010;
              zongFuZhai_ = input.readInt64();
              break;
            }
            case 4976: {
              bitField8_ |= 0x00000020;
              guDongQuanYi_ = input.readInt64();
              break;
            }
            case 4984: {
              bitField8_ |= 0x00000040;
              ziBenGongJiJin_ = input.readInt64();
              break;
            }
            case 4992: {
              bitField8_ |= 0x00000080;
              jingYingXianJinLiuLiang_ = input.readInt64();
              break;
            }
            case 5000: {
              bitField8_ |= 0x00000100;
              touZiXianJinLiuLiang_ = input.readInt64();
              break;
            }
            case 5008: {
              bitField8_ |= 0x00000200;
              chouZiXianJinLiuLiang_ = input.readInt64();
              break;
            }
            case 5016: {
              bitField8_ |= 0x00000400;
              xianJinZengJiaE_ = input.readInt64();
              break;
            }
            case 5024: {
              bitField8_ |= 0x00000800;
              zhuYingShouRu_ = input.readInt64();
              break;
            }
            case 5032: {
              bitField8_ |= 0x00001000;
              zhuYingLiRun_ = input.readInt64();
              break;
            }
            case 5040: {
              bitField8_ |= 0x00002000;
              yingYeLiRun_ = input.readInt64();
              break;
            }
            case 5048: {
              bitField8_ |= 0x00004000;
              touZiShouYi_ = input.readInt64();
              break;
            }
            case 5056: {
              bitField8_ |= 0x00008000;
              yingYeWaiShouZhi_ = input.readInt64();
              break;
            }
            case 5064: {
              bitField8_ |= 0x00010000;
              liRunZongE_ = input.readInt64();
              break;
            }
            case 5072: {
              bitField8_ |= 0x00020000;
              jingLiRun_ = input.readInt64();
              break;
            }
            case 5080: {
              bitField8_ |= 0x00040000;
              weiFenPeiLiRun_ = input.readInt64();
              break;
            }
            case 5088: {
              bitField8_ |= 0x00080000;
              zongGuBen_ = input.readInt64();
              break;
            }
            case 5096: {
              bitField8_ |= 0x00100000;
              wuXianShouGuHeJi_ = input.readInt64();
              break;
            }
            case 5104: {
              bitField8_ |= 0x00200000;
              liuTongAGu_ = input.readInt64();
              break;
            }
            case 5112: {
              bitField8_ |= 0x00400000;
              liuTongBGu_ = input.readInt64();
              break;
            }
            case 5120: {
              bitField8_ |= 0x00800000;
              jingWaiShangShiGu_ = input.readInt64();
              break;
            }
            case 5128: {
              bitField8_ |= 0x01000000;
              qiTaLiuTongGu_ = input.readInt64();
              break;
            }
            case 5136: {
              bitField8_ |= 0x02000000;
              xianShouGuHeJi_ = input.readInt64();
              break;
            }
            case 5144: {
              bitField8_ |= 0x04000000;
              guoJiaChiGu_ = input.readInt64();
              break;
            }
            case 5152: {
              bitField8_ |= 0x08000000;
              guoYouFaRenGu_ = input.readInt64();
              break;
            }
            case 5160: {
              bitField8_ |= 0x10000000;
              jingNeiFaRenGu_ = input.readInt64();
              break;
            }
            case 5168: {
              bitField8_ |= 0x20000000;
              jingNeiZiRanRenGu_ = input.readInt64();
              break;
            }
            case 5176: {
              bitField8_ |= 0x40000000;
              qiTaFaQiRenGu_ = input.readInt64();
              break;
            }
            case 5184: {
              bitField8_ |= 0x80000000;
              muJiFaRenGu_ = input.readInt64();
              break;
            }
            case 5192: {
              bitField9_ |= 0x00000001;
              jingWaiFaRenGu_ = input.readInt64();
              break;
            }
            case 5200: {
              bitField9_ |= 0x00000002;
              jingWaiZiRanRenGu_ = input.readInt64();
              break;
            }
            case 5208: {
              bitField9_ |= 0x00000004;
              youXianGuHuoQiTa_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dzhyun.proto.DzhyunStkdata.internal_static_dzhyun_StkData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dzhyun.proto.DzhyunStkdata.internal_static_dzhyun_StkData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dzhyun.proto.DzhyunStkdata.StkData.class, com.dzhyun.proto.DzhyunStkdata.StkData.Builder.class);
    }

    public static com.google.protobuf.Parser<StkData> PARSER =
        new com.google.protobuf.AbstractParser<StkData>() {
      public StkData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StkData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StkData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    private int bitField3_;
    private int bitField4_;
    private int bitField5_;
    private int bitField6_;
    private int bitField7_;
    private int bitField8_;
    private int bitField9_;
    public static final int OBJ_FIELD_NUMBER = 1;
    private java.lang.Object obj_;
    /**
     * <code>required string Obj = 1;</code>
     *
     * <pre>
     * 股票代码，如 SH600000 不推送
     * </pre>
     */
    public boolean hasObj() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string Obj = 1;</code>
     *
     * <pre>
     * 股票代码，如 SH600000 不推送
     * </pre>
     */
    public java.lang.String getObj() {
      java.lang.Object ref = obj_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          obj_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string Obj = 1;</code>
     *
     * <pre>
     * 股票代码，如 SH600000 不推送
     * </pre>
     */
    public com.google.protobuf.ByteString
        getObjBytes() {
      java.lang.Object ref = obj_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        obj_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JIAOYIDAIMA_FIELD_NUMBER = 2;
    private java.lang.Object jiaoYiDaiMa_;
    /**
     * <code>optional string JiaoYiDaiMa = 2;</code>
     *
     * <pre>
     * 股票标签，如 600000 不推送
     * </pre>
     */
    public boolean hasJiaoYiDaiMa() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string JiaoYiDaiMa = 2;</code>
     *
     * <pre>
     * 股票标签，如 600000 不推送
     * </pre>
     */
    public java.lang.String getJiaoYiDaiMa() {
      java.lang.Object ref = jiaoYiDaiMa_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          jiaoYiDaiMa_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string JiaoYiDaiMa = 2;</code>
     *
     * <pre>
     * 股票标签，如 600000 不推送
     * </pre>
     */
    public com.google.protobuf.ByteString
        getJiaoYiDaiMaBytes() {
      java.lang.Object ref = jiaoYiDaiMa_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jiaoYiDaiMa_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ZHONGWENJIANCHENG_FIELD_NUMBER = 3;
    private java.lang.Object zhongWenJianCheng_;
    /**
     * <code>optional string ZhongWenJianCheng = 3;</code>
     *
     * <pre>
     * 名称 不推送
     * </pre>
     */
    public boolean hasZhongWenJianCheng() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ZhongWenJianCheng = 3;</code>
     *
     * <pre>
     * 名称 不推送
     * </pre>
     */
    public java.lang.String getZhongWenJianCheng() {
      java.lang.Object ref = zhongWenJianCheng_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          zhongWenJianCheng_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ZhongWenJianCheng = 3;</code>
     *
     * <pre>
     * 名称 不推送
     * </pre>
     */
    public com.google.protobuf.ByteString
        getZhongWenJianChengBytes() {
      java.lang.Object ref = zhongWenJianCheng_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        zhongWenJianCheng_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ZUIXINJIA_FIELD_NUMBER = 4;
    private long zuiXinJia_;
    /**
     * <code>optional int64 ZuiXinJia = 4;</code>
     *
     * <pre>
     * 以下动态行情
     * </pre>
     */
    public boolean hasZuiXinJia() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 ZuiXinJia = 4;</code>
     *
     * <pre>
     * 以下动态行情
     * </pre>
     */
    public long getZuiXinJia() {
      return zuiXinJia_;
    }

    public static final int KAIPANJIA_FIELD_NUMBER = 5;
    private long kaiPanJia_;
    /**
     * <code>optional int64 KaiPanJia = 5;</code>
     *
     * <pre>
     * 开盘 元 推送
     * </pre>
     */
    public boolean hasKaiPanJia() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 KaiPanJia = 5;</code>
     *
     * <pre>
     * 开盘 元 推送
     * </pre>
     */
    public long getKaiPanJia() {
      return kaiPanJia_;
    }

    public static final int ZUIGAOJIA_FIELD_NUMBER = 6;
    private long zuiGaoJia_;
    /**
     * <code>optional int64 ZuiGaoJia = 6;</code>
     *
     * <pre>
     * 最高 元 推送
     * </pre>
     */
    public boolean hasZuiGaoJia() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 ZuiGaoJia = 6;</code>
     *
     * <pre>
     * 最高 元 推送
     * </pre>
     */
    public long getZuiGaoJia() {
      return zuiGaoJia_;
    }

    public static final int ZUIDIJIA_FIELD_NUMBER = 7;
    private long zuiDiJia_;
    /**
     * <code>optional int64 ZuiDiJia = 7;</code>
     *
     * <pre>
     * 最低 元 推送
     * </pre>
     */
    public boolean hasZuiDiJia() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 ZuiDiJia = 7;</code>
     *
     * <pre>
     * 最低 元 推送
     * </pre>
     */
    public long getZuiDiJia() {
      return zuiDiJia_;
    }

    public static final int ZUOSHOU_FIELD_NUMBER = 8;
    private long zuoShou_;
    /**
     * <code>optional int64 ZuoShou = 8;</code>
     *
     * <pre>
     * NUM 昨收 元 推送
     * </pre>
     */
    public boolean hasZuoShou() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 ZuoShou = 8;</code>
     *
     * <pre>
     * NUM 昨收 元 推送
     * </pre>
     */
    public long getZuoShou() {
      return zuoShou_;
    }

    public static final int JUNJIA_FIELD_NUMBER = 9;
    private long junJia_;
    /**
     * <code>optional int64 JunJia = 9;</code>
     *
     * <pre>
     * NUM 均价 元 推送
     * </pre>
     */
    public boolean hasJunJia() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 JunJia = 9;</code>
     *
     * <pre>
     * NUM 均价 元 推送
     * </pre>
     */
    public long getJunJia() {
      return junJia_;
    }

    public static final int ZHANGDIE_FIELD_NUMBER = 10;
    private long zhangDie_;
    /**
     * <code>optional int64 ZhangDie = 10;</code>
     *
     * <pre>
     * NUM 涨跌 元 推送
     * </pre>
     */
    public boolean hasZhangDie() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 ZhangDie = 10;</code>
     *
     * <pre>
     * NUM 涨跌 元 推送
     * </pre>
     */
    public long getZhangDie() {
      return zhangDie_;
    }

    public static final int ZHANGFU_FIELD_NUMBER = 11;
    private long zhangFu_;
    /**
     * <code>optional int64 ZhangFu = 11;</code>
     *
     * <pre>
     * NUM 涨幅 % 推送
     * </pre>
     */
    public boolean hasZhangFu() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 ZhangFu = 11;</code>
     *
     * <pre>
     * NUM 涨幅 % 推送
     * </pre>
     */
    public long getZhangFu() {
      return zhangFu_;
    }

    public static final int ZHENFU_FIELD_NUMBER = 12;
    private long zhenFu_;
    /**
     * <code>optional int64 ZhenFu = 12;</code>
     *
     * <pre>
     * NUM 振幅 % 推送
     * </pre>
     */
    public boolean hasZhenFu() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 ZhenFu = 12;</code>
     *
     * <pre>
     * NUM 振幅 % 推送
     * </pre>
     */
    public long getZhenFu() {
      return zhenFu_;
    }

    public static final int CHENGJIAOLIANG_FIELD_NUMBER = 13;
    private long chengJiaoLiang_;
    /**
     * <code>optional int64 ChengJiaoLiang = 13;</code>
     *
     * <pre>
     * NUM 总手 手 推送（总手-总成交量，单位股）
     * </pre>
     */
    public boolean hasChengJiaoLiang() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 ChengJiaoLiang = 13;</code>
     *
     * <pre>
     * NUM 总手 手 推送（总手-总成交量，单位股）
     * </pre>
     */
    public long getChengJiaoLiang() {
      return chengJiaoLiang_;
    }

    public static final int XIANSHOU_FIELD_NUMBER = 14;
    private long xianShou_;
    /**
     * <code>optional int64 XianShou = 14;</code>
     *
     * <pre>
     * NUM 现手 手 推送（现手-最新一笔交量，单位股）
     * </pre>
     */
    public boolean hasXianShou() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 XianShou = 14;</code>
     *
     * <pre>
     * NUM 现手 手 推送（现手-最新一笔交量，单位股）
     * </pre>
     */
    public long getXianShou() {
      return xianShou_;
    }

    public static final int CHENGJIAOE_FIELD_NUMBER = 15;
    private long chengJiaoE_;
    /**
     * <code>optional int64 ChengJiaoE = 15;</code>
     *
     * <pre>
     * NUM 成交额 万元 推送
     * </pre>
     */
    public boolean hasChengJiaoE() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 ChengJiaoE = 15;</code>
     *
     * <pre>
     * NUM 成交额 万元 推送
     * </pre>
     */
    public long getChengJiaoE() {
      return chengJiaoE_;
    }

    public static final int ZONGCHENGJIAOBISHU_FIELD_NUMBER = 16;
    private long zongChengJiaoBiShu_;
    /**
     * <code>optional int64 ZongChengJiaoBiShu = 16;</code>
     *
     * <pre>
     * 总成交笔数
     * </pre>
     */
    public boolean hasZongChengJiaoBiShu() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 ZongChengJiaoBiShu = 16;</code>
     *
     * <pre>
     * 总成交笔数
     * </pre>
     */
    public long getZongChengJiaoBiShu() {
      return zongChengJiaoBiShu_;
    }

    public static final int MEIBICHENGJIAOGUSHU_FIELD_NUMBER = 17;
    private long meiBiChengJiaoGuShu_;
    /**
     * <code>optional int64 MeiBiChengJiaoGuShu = 17;</code>
     *
     * <pre>
     * 每笔成交股数
     * </pre>
     */
    public boolean hasMeiBiChengJiaoGuShu() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 MeiBiChengJiaoGuShu = 17;</code>
     *
     * <pre>
     * 每笔成交股数
     * </pre>
     */
    public long getMeiBiChengJiaoGuShu() {
      return meiBiChengJiaoGuShu_;
    }

    public static final int HUANSHOU_FIELD_NUMBER = 18;
    private long huanShou_;
    /**
     * <code>optional int64 HuanShou = 18;</code>
     *
     * <pre>
     * 换手,千分比
     * </pre>
     */
    public boolean hasHuanShou() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 HuanShou = 18;</code>
     *
     * <pre>
     * 换手,千分比
     * </pre>
     */
    public long getHuanShou() {
      return huanShou_;
    }

    public static final int LIANGBI_FIELD_NUMBER = 19;
    private long liangBi_;
    /**
     * <code>optional int64 LiangBi = 19;</code>
     *
     * <pre>
     * 量比,千分比
     * </pre>
     */
    public boolean hasLiangBi() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 LiangBi = 19;</code>
     *
     * <pre>
     * 量比,千分比
     * </pre>
     */
    public long getLiangBi() {
      return liangBi_;
    }

    public static final int NEIPAN_FIELD_NUMBER = 20;
    private long neiPan_;
    /**
     * <code>optional int64 NeiPan = 20;</code>
     *
     * <pre>
     * NUM 内盘 手 推送
     * </pre>
     */
    public boolean hasNeiPan() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 NeiPan = 20;</code>
     *
     * <pre>
     * NUM 内盘 手 推送
     * </pre>
     */
    public long getNeiPan() {
      return neiPan_;
    }

    public static final int WAIPAN_FIELD_NUMBER = 21;
    private long waiPan_;
    /**
     * <code>optional int64 WaiPan = 21;</code>
     *
     * <pre>
     * NUM 外盘 手 推送
     * </pre>
     */
    public boolean hasWaiPan() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 WaiPan = 21;</code>
     *
     * <pre>
     * NUM 外盘 手 推送
     * </pre>
     */
    public long getWaiPan() {
      return waiPan_;
    }

    public static final int ZONGMAIRU_FIELD_NUMBER = 22;
    private long zongMaiRu_;
    /**
     * <code>optional int64 ZongMaiRu = 22;</code>
     *
     * <pre>
     * 以下L2
     * </pre>
     */
    public boolean hasZongMaiRu() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 ZongMaiRu = 22;</code>
     *
     * <pre>
     * 以下L2
     * </pre>
     */
    public long getZongMaiRu() {
      return zongMaiRu_;
    }

    public static final int ZONGMAICHU_FIELD_NUMBER = 23;
    private long zongMaiChu_;
    /**
     * <code>optional int64 ZongMaiChu = 23;</code>
     *
     * <pre>
     * 总卖
     * </pre>
     */
    public boolean hasZongMaiChu() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 ZongMaiChu = 23;</code>
     *
     * <pre>
     * 总卖
     * </pre>
     */
    public long getZongMaiChu() {
      return zongMaiChu_;
    }

    public static final int ZONGMAIRUJUNJIA_FIELD_NUMBER = 24;
    private long zongMaiRuJunJia_;
    /**
     * <code>optional int64 ZongMaiRuJunJia = 24;</code>
     *
     * <pre>
     * 总买均价
     * </pre>
     */
    public boolean hasZongMaiRuJunJia() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 ZongMaiRuJunJia = 24;</code>
     *
     * <pre>
     * 总买均价
     * </pre>
     */
    public long getZongMaiRuJunJia() {
      return zongMaiRuJunJia_;
    }

    public static final int ZONGMAICHUJUNJIA_FIELD_NUMBER = 25;
    private long zongMaiChuJunJia_;
    /**
     * <code>optional int64 ZongMaiChuJunJia = 25;</code>
     *
     * <pre>
     * 总卖均价
     * </pre>
     */
    public boolean hasZongMaiChuJunJia() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 ZongMaiChuJunJia = 25;</code>
     *
     * <pre>
     * 总卖均价
     * </pre>
     */
    public long getZongMaiChuJunJia() {
      return zongMaiChuJunJia_;
    }

    public static final int WEITUOMAIRUJIA1_FIELD_NUMBER = 26;
    private long weiTuoMaiRuJia1_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia1 = 26;</code>
     *
     * <pre>
     * 以下买卖盘
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia1() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia1 = 26;</code>
     *
     * <pre>
     * 以下买卖盘
     * </pre>
     */
    public long getWeiTuoMaiRuJia1() {
      return weiTuoMaiRuJia1_;
    }

    public static final int WEITUOMAIRUJIA2_FIELD_NUMBER = 27;
    private long weiTuoMaiRuJia2_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia2 = 27;</code>
     *
     * <pre>
     * 买二价
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia2() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia2 = 27;</code>
     *
     * <pre>
     * 买二价
     * </pre>
     */
    public long getWeiTuoMaiRuJia2() {
      return weiTuoMaiRuJia2_;
    }

    public static final int WEITUOMAIRUJIA3_FIELD_NUMBER = 28;
    private long weiTuoMaiRuJia3_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia3 = 28;</code>
     *
     * <pre>
     * 买三价
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia3() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia3 = 28;</code>
     *
     * <pre>
     * 买三价
     * </pre>
     */
    public long getWeiTuoMaiRuJia3() {
      return weiTuoMaiRuJia3_;
    }

    public static final int WEITUOMAIRUJIA4_FIELD_NUMBER = 29;
    private long weiTuoMaiRuJia4_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia4 = 29;</code>
     *
     * <pre>
     * 买四价
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia4() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia4 = 29;</code>
     *
     * <pre>
     * 买四价
     * </pre>
     */
    public long getWeiTuoMaiRuJia4() {
      return weiTuoMaiRuJia4_;
    }

    public static final int WEITUOMAIRUJIA5_FIELD_NUMBER = 30;
    private long weiTuoMaiRuJia5_;
    /**
     * <code>optional int64 WeiTuoMaiRuJia5 = 30;</code>
     *
     * <pre>
     * 买五价
     * </pre>
     */
    public boolean hasWeiTuoMaiRuJia5() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuJia5 = 30;</code>
     *
     * <pre>
     * 买五价
     * </pre>
     */
    public long getWeiTuoMaiRuJia5() {
      return weiTuoMaiRuJia5_;
    }

    public static final int WEITUOMAIRULIANG1_FIELD_NUMBER = 31;
    private long weiTuoMaiRuLiang1_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang1 = 31;</code>
     *
     * <pre>
     * 买一量
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang1() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang1 = 31;</code>
     *
     * <pre>
     * 买一量
     * </pre>
     */
    public long getWeiTuoMaiRuLiang1() {
      return weiTuoMaiRuLiang1_;
    }

    public static final int WEITUOMAIRULIANG2_FIELD_NUMBER = 32;
    private long weiTuoMaiRuLiang2_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang2 = 32;</code>
     *
     * <pre>
     * 买二量
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang2() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang2 = 32;</code>
     *
     * <pre>
     * 买二量
     * </pre>
     */
    public long getWeiTuoMaiRuLiang2() {
      return weiTuoMaiRuLiang2_;
    }

    public static final int WEITUOMAIRULIANG3_FIELD_NUMBER = 33;
    private long weiTuoMaiRuLiang3_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang3 = 33;</code>
     *
     * <pre>
     * 买三量
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang3() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang3 = 33;</code>
     *
     * <pre>
     * 买三量
     * </pre>
     */
    public long getWeiTuoMaiRuLiang3() {
      return weiTuoMaiRuLiang3_;
    }

    public static final int WEITUOMAIRULIANG4_FIELD_NUMBER = 34;
    private long weiTuoMaiRuLiang4_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang4 = 34;</code>
     *
     * <pre>
     * 买四量
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang4() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang4 = 34;</code>
     *
     * <pre>
     * 买四量
     * </pre>
     */
    public long getWeiTuoMaiRuLiang4() {
      return weiTuoMaiRuLiang4_;
    }

    public static final int WEITUOMAIRULIANG5_FIELD_NUMBER = 35;
    private long weiTuoMaiRuLiang5_;
    /**
     * <code>optional int64 WeiTuoMaiRuLiang5 = 35;</code>
     *
     * <pre>
     * 买五量
     * </pre>
     */
    public boolean hasWeiTuoMaiRuLiang5() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 WeiTuoMaiRuLiang5 = 35;</code>
     *
     * <pre>
     * 买五量
     * </pre>
     */
    public long getWeiTuoMaiRuLiang5() {
      return weiTuoMaiRuLiang5_;
    }

    public static final int WEITUOMAICHUJIA1_FIELD_NUMBER = 36;
    private long weiTuoMaiChuJia1_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia1 = 36;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia1() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia1 = 36;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public long getWeiTuoMaiChuJia1() {
      return weiTuoMaiChuJia1_;
    }

    public static final int WEITUOMAICHUJIA2_FIELD_NUMBER = 37;
    private long weiTuoMaiChuJia2_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia2 = 37;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia2() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia2 = 37;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public long getWeiTuoMaiChuJia2() {
      return weiTuoMaiChuJia2_;
    }

    public static final int WEITUOMAICHUJIA3_FIELD_NUMBER = 38;
    private long weiTuoMaiChuJia3_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia3 = 38;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia3() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia3 = 38;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public long getWeiTuoMaiChuJia3() {
      return weiTuoMaiChuJia3_;
    }

    public static final int WEITUOMAICHUJIA4_FIELD_NUMBER = 39;
    private long weiTuoMaiChuJia4_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia4 = 39;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia4() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia4 = 39;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public long getWeiTuoMaiChuJia4() {
      return weiTuoMaiChuJia4_;
    }

    public static final int WEITUOMAICHUJIA5_FIELD_NUMBER = 40;
    private long weiTuoMaiChuJia5_;
    /**
     * <code>optional int64 WeiTuoMaiChuJia5 = 40;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public boolean hasWeiTuoMaiChuJia5() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuJia5 = 40;</code>
     *
     * <pre>
     * 卖一价
     * </pre>
     */
    public long getWeiTuoMaiChuJia5() {
      return weiTuoMaiChuJia5_;
    }

    public static final int WEITUOMAICHULIANG1_FIELD_NUMBER = 41;
    private long weiTuoMaiChuLiang1_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang1 = 41;</code>
     *
     * <pre>
     * 卖一量
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang1() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang1 = 41;</code>
     *
     * <pre>
     * 卖一量
     * </pre>
     */
    public long getWeiTuoMaiChuLiang1() {
      return weiTuoMaiChuLiang1_;
    }

    public static final int WEITUOMAICHULIANG2_FIELD_NUMBER = 42;
    private long weiTuoMaiChuLiang2_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang2 = 42;</code>
     *
     * <pre>
     * 卖二量
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang2() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang2 = 42;</code>
     *
     * <pre>
     * 卖二量
     * </pre>
     */
    public long getWeiTuoMaiChuLiang2() {
      return weiTuoMaiChuLiang2_;
    }

    public static final int WEITUOMAICHULIANG3_FIELD_NUMBER = 43;
    private long weiTuoMaiChuLiang3_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang3 = 43;</code>
     *
     * <pre>
     * 卖三量
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang3() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang3 = 43;</code>
     *
     * <pre>
     * 卖三量
     * </pre>
     */
    public long getWeiTuoMaiChuLiang3() {
      return weiTuoMaiChuLiang3_;
    }

    public static final int WEITUOMAICHULIANG4_FIELD_NUMBER = 44;
    private long weiTuoMaiChuLiang4_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang4 = 44;</code>
     *
     * <pre>
     * 卖四量
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang4() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang4 = 44;</code>
     *
     * <pre>
     * 卖四量
     * </pre>
     */
    public long getWeiTuoMaiChuLiang4() {
      return weiTuoMaiChuLiang4_;
    }

    public static final int WEITUOMAICHULIANG5_FIELD_NUMBER = 45;
    private long weiTuoMaiChuLiang5_;
    /**
     * <code>optional int64 WeiTuoMaiChuLiang5 = 45;</code>
     *
     * <pre>
     * 卖五量
     * </pre>
     */
    public boolean hasWeiTuoMaiChuLiang5() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 WeiTuoMaiChuLiang5 = 45;</code>
     *
     * <pre>
     * 卖五量
     * </pre>
     */
    public long getWeiTuoMaiChuLiang5() {
      return weiTuoMaiChuLiang5_;
    }

    public static final int WEIBI_FIELD_NUMBER = 46;
    private long weiBi_;
    /**
     * <code>optional int64 WeiBi = 46;</code>
     *
     * <pre>
     * 需要计算
     * </pre>
     */
    public boolean hasWeiBi() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 WeiBi = 46;</code>
     *
     * <pre>
     * 需要计算
     * </pre>
     */
    public long getWeiBi() {
      return weiBi_;
    }

    public static final int WEICHA_FIELD_NUMBER = 47;
    private long weiCha_;
    /**
     * <code>optional int64 WeiCha = 47;</code>
     *
     * <pre>
     * 委差
     * </pre>
     */
    public boolean hasWeiCha() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 WeiCha = 47;</code>
     *
     * <pre>
     * 委差
     * </pre>
     */
    public long getWeiCha() {
      return weiCha_;
    }

    public static final int ZHANGSU_FIELD_NUMBER = 48;
    private long zhangSu_;
    /**
     * <code>optional int64 ZhangSu = 48;</code>
     *
     * <pre>
     * 涨速
     * </pre>
     */
    public boolean hasZhangSu() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 ZhangSu = 48;</code>
     *
     * <pre>
     * 涨速
     * </pre>
     */
    public long getZhangSu() {
      return zhangSu_;
    }

    public static final int JUNLIANG5RI_FIELD_NUMBER = 49;
    private long junLiang5Ri_;
    /**
     * <code>optional int64 JunLiang5Ri = 49;</code>
     *
     * <pre>
     * 5日均量
     * </pre>
     */
    public boolean hasJunLiang5Ri() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 JunLiang5Ri = 49;</code>
     *
     * <pre>
     * 5日均量
     * </pre>
     */
    public long getJunLiang5Ri() {
      return junLiang5Ri_;
    }

    public static final int SHANGZHANGJIASHU_FIELD_NUMBER = 50;
    private long shangZhangJiaShu_;
    /**
     * <code>optional int64 ShangZhangJiaShu = 50;</code>
     *
     * <pre>
     * 所在市场的上涨家数
     * </pre>
     */
    public boolean hasShangZhangJiaShu() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 ShangZhangJiaShu = 50;</code>
     *
     * <pre>
     * 所在市场的上涨家数
     * </pre>
     */
    public long getShangZhangJiaShu() {
      return shangZhangJiaShu_;
    }

    public static final int XIADIEJIASHU_FIELD_NUMBER = 51;
    private long xiaDieJiaShu_;
    /**
     * <code>optional int64 XiaDieJiaShu = 51;</code>
     *
     * <pre>
     * 所在市场的下跌家数
     * </pre>
     */
    public boolean hasXiaDieJiaShu() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 XiaDieJiaShu = 51;</code>
     *
     * <pre>
     * 所在市场的下跌家数
     * </pre>
     */
    public long getXiaDieJiaShu() {
      return xiaDieJiaShu_;
    }

    public static final int PINGPANJIASHU_FIELD_NUMBER = 52;
    private long pingPanJiaShu_;
    /**
     * <code>optional int64 PingPanJiaShu = 52;</code>
     *
     * <pre>
     * 所在市场的平盘家数
     * </pre>
     */
    public boolean hasPingPanJiaShu() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 PingPanJiaShu = 52;</code>
     *
     * <pre>
     * 所在市场的平盘家数
     * </pre>
     */
    public long getPingPanJiaShu() {
      return pingPanJiaShu_;
    }

    public static final int AGUSHANGZHANGJIASHU_FIELD_NUMBER = 53;
    private long aGuShangZhangJiaShu_;
    /**
     * <code>optional int64 AGuShangZhangJiaShu = 53;</code>
     *
     * <pre>
     * 所在市场的A股上涨家数
     * </pre>
     */
    public boolean hasAGuShangZhangJiaShu() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 AGuShangZhangJiaShu = 53;</code>
     *
     * <pre>
     * 所在市场的A股上涨家数
     * </pre>
     */
    public long getAGuShangZhangJiaShu() {
      return aGuShangZhangJiaShu_;
    }

    public static final int AGUXIADIEJIASHU_FIELD_NUMBER = 54;
    private long aGuXiaDieJiaShu_;
    /**
     * <code>optional int64 AGuXiaDieJiaShu = 54;</code>
     *
     * <pre>
     * 所在市场的A股下跌家数
     * </pre>
     */
    public boolean hasAGuXiaDieJiaShu() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 AGuXiaDieJiaShu = 54;</code>
     *
     * <pre>
     * 所在市场的A股下跌家数
     * </pre>
     */
    public long getAGuXiaDieJiaShu() {
      return aGuXiaDieJiaShu_;
    }

    public static final int AGUPINGPANJIASHU_FIELD_NUMBER = 55;
    private long aGuPingPanJiaShu_;
    /**
     * <code>optional int64 AGuPingPanJiaShu = 55;</code>
     *
     * <pre>
     * 所在市场的A股平盘家数
     * </pre>
     */
    public boolean hasAGuPingPanJiaShu() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 AGuPingPanJiaShu = 55;</code>
     *
     * <pre>
     * 所在市场的A股平盘家数
     * </pre>
     */
    public long getAGuPingPanJiaShu() {
      return aGuPingPanJiaShu_;
    }

    public static final int AGUCHENGJIAOE_FIELD_NUMBER = 56;
    private long aGuChengJiaoE_;
    /**
     * <code>optional int64 AGuChengJiaoE = 56;</code>
     *
     * <pre>
     * 所在市场的A股成交额(亿)
     * </pre>
     */
    public boolean hasAGuChengJiaoE() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 AGuChengJiaoE = 56;</code>
     *
     * <pre>
     * 所在市场的A股成交额(亿)
     * </pre>
     */
    public long getAGuChengJiaoE() {
      return aGuChengJiaoE_;
    }

    public static final int BGUSHANGZHANGJIASHU_FIELD_NUMBER = 57;
    private long bGuShangZhangJiaShu_;
    /**
     * <code>optional int64 BGuShangZhangJiaShu = 57;</code>
     *
     * <pre>
     * 所在市场的B股上涨家数
     * </pre>
     */
    public boolean hasBGuShangZhangJiaShu() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 BGuShangZhangJiaShu = 57;</code>
     *
     * <pre>
     * 所在市场的B股上涨家数
     * </pre>
     */
    public long getBGuShangZhangJiaShu() {
      return bGuShangZhangJiaShu_;
    }

    public static final int BGUXIADIEJIASHU_FIELD_NUMBER = 58;
    private long bGuXiaDieJiaShu_;
    /**
     * <code>optional int64 BGuXiaDieJiaShu = 58;</code>
     *
     * <pre>
     * 所在市场的B股下跌家数
     * </pre>
     */
    public boolean hasBGuXiaDieJiaShu() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 BGuXiaDieJiaShu = 58;</code>
     *
     * <pre>
     * 所在市场的B股下跌家数
     * </pre>
     */
    public long getBGuXiaDieJiaShu() {
      return bGuXiaDieJiaShu_;
    }

    public static final int BGUPINGPANJIASHU_FIELD_NUMBER = 59;
    private long bGuPingPanJiaShu_;
    /**
     * <code>optional int64 BGuPingPanJiaShu = 59;</code>
     *
     * <pre>
     * 所在市场的B股平盘家数
     * </pre>
     */
    public boolean hasBGuPingPanJiaShu() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 BGuPingPanJiaShu = 59;</code>
     *
     * <pre>
     * 所在市场的B股平盘家数
     * </pre>
     */
    public long getBGuPingPanJiaShu() {
      return bGuPingPanJiaShu_;
    }

    public static final int BGUCHENGJIAOE_FIELD_NUMBER = 60;
    private long bGuChengJiaoE_;
    /**
     * <code>optional int64 BGuChengJiaoE = 60;</code>
     *
     * <pre>
     * 所在市场的B股成交额(亿)
     * </pre>
     */
    public boolean hasBGuChengJiaoE() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 BGuChengJiaoE = 60;</code>
     *
     * <pre>
     * 所在市场的B股成交额(亿)
     * </pre>
     */
    public long getBGuChengJiaoE() {
      return bGuChengJiaoE_;
    }

    public static final int JIJINSHANGZHANGJIASHU_FIELD_NUMBER = 61;
    private long jiJinShangZhangJiaShu_;
    /**
     * <code>optional int64 JiJinShangZhangJiaShu = 61;</code>
     *
     * <pre>
     * 所在市场的基金上涨家数
     * </pre>
     */
    public boolean hasJiJinShangZhangJiaShu() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 JiJinShangZhangJiaShu = 61;</code>
     *
     * <pre>
     * 所在市场的基金上涨家数
     * </pre>
     */
    public long getJiJinShangZhangJiaShu() {
      return jiJinShangZhangJiaShu_;
    }

    public static final int JIJINXIADIEJIASHU_FIELD_NUMBER = 62;
    private long jiJinXiaDieJiaShu_;
    /**
     * <code>optional int64 JiJinXiaDieJiaShu = 62;</code>
     *
     * <pre>
     * 所在市场的基金下跌家数
     * </pre>
     */
    public boolean hasJiJinXiaDieJiaShu() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 JiJinXiaDieJiaShu = 62;</code>
     *
     * <pre>
     * 所在市场的基金下跌家数
     * </pre>
     */
    public long getJiJinXiaDieJiaShu() {
      return jiJinXiaDieJiaShu_;
    }

    public static final int JIJINPINGPANJIASHU_FIELD_NUMBER = 63;
    private long jiJinPingPanJiaShu_;
    /**
     * <code>optional int64 JiJinPingPanJiaShu = 63;</code>
     *
     * <pre>
     * 所在市场的基金平盘家数
     * </pre>
     */
    public boolean hasJiJinPingPanJiaShu() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 JiJinPingPanJiaShu = 63;</code>
     *
     * <pre>
     * 所在市场的基金平盘家数
     * </pre>
     */
    public long getJiJinPingPanJiaShu() {
      return jiJinPingPanJiaShu_;
    }

    public static final int JIJINCHENGJIAOE_FIELD_NUMBER = 64;
    private long jiJinChengJiaoE_;
    /**
     * <code>optional int64 JiJinChengJiaoE = 64;</code>
     *
     * <pre>
     * 所在市场的基金成交额(亿)
     * </pre>
     */
    public boolean hasJiJinChengJiaoE() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 JiJinChengJiaoE = 64;</code>
     *
     * <pre>
     * 所在市场的基金成交额(亿)
     * </pre>
     */
    public long getJiJinChengJiaoE() {
      return jiJinChengJiaoE_;
    }

    public static final int QITASHANGZHANGJIASHU_FIELD_NUMBER = 65;
    private long qiTaShangZhangJiaShu_;
    /**
     * <code>optional int64 QiTaShangZhangJiaShu = 65;</code>
     *
     * <pre>
     * 所在市场的其他上涨家数
     * </pre>
     */
    public boolean hasQiTaShangZhangJiaShu() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 QiTaShangZhangJiaShu = 65;</code>
     *
     * <pre>
     * 所在市场的其他上涨家数
     * </pre>
     */
    public long getQiTaShangZhangJiaShu() {
      return qiTaShangZhangJiaShu_;
    }

    public static final int QITAXIADIEJIASHU_FIELD_NUMBER = 66;
    private long qiTaXiaDieJiaShu_;
    /**
     * <code>optional int64 QiTaXiaDieJiaShu = 66;</code>
     *
     * <pre>
     * 所在市场的其他下跌家数
     * </pre>
     */
    public boolean hasQiTaXiaDieJiaShu() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 QiTaXiaDieJiaShu = 66;</code>
     *
     * <pre>
     * 所在市场的其他下跌家数
     * </pre>
     */
    public long getQiTaXiaDieJiaShu() {
      return qiTaXiaDieJiaShu_;
    }

    public static final int QITAPINGPANJIASHU_FIELD_NUMBER = 67;
    private long qiTaPingPanJiaShu_;
    /**
     * <code>optional int64 QiTaPingPanJiaShu = 67;</code>
     *
     * <pre>
     * 所在市场的其他平盘家数
     * </pre>
     */
    public boolean hasQiTaPingPanJiaShu() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 QiTaPingPanJiaShu = 67;</code>
     *
     * <pre>
     * 所在市场的其他平盘家数
     * </pre>
     */
    public long getQiTaPingPanJiaShu() {
      return qiTaPingPanJiaShu_;
    }

    public static final int QITACHENGJIAOE_FIELD_NUMBER = 68;
    private long qiTaChengJiaoE_;
    /**
     * <code>optional int64 QiTaChengJiaoE = 68;</code>
     *
     * <pre>
     * 所在市场的其他成交额(亿)
     * </pre>
     */
    public boolean hasQiTaChengJiaoE() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 QiTaChengJiaoE = 68;</code>
     *
     * <pre>
     * 所在市场的其他成交额(亿)
     * </pre>
     */
    public long getQiTaChengJiaoE() {
      return qiTaChengJiaoE_;
    }

    public static final int MAIRUDANSHU_FIELD_NUMBER = 69;
    private long maiRuDanShu_;
    /**
     * <code>optional int64 MaiRuDanShu = 69;</code>
     *
     * <pre>
     * 买入单数
     * </pre>
     */
    public boolean hasMaiRuDanShu() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 MaiRuDanShu = 69;</code>
     *
     * <pre>
     * 买入单数
     * </pre>
     */
    public long getMaiRuDanShu() {
      return maiRuDanShu_;
    }

    public static final int MAICHUDANSHU_FIELD_NUMBER = 70;
    private long maiChuDanShu_;
    /**
     * <code>optional int64 MaiChuDanShu = 70;</code>
     *
     * <pre>
     * 卖出单数
     * </pre>
     */
    public boolean hasMaiChuDanShu() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 MaiChuDanShu = 70;</code>
     *
     * <pre>
     * 卖出单数
     * </pre>
     */
    public long getMaiChuDanShu() {
      return maiChuDanShu_;
    }

    public static final int MAIRUZHONGDANBILI_FIELD_NUMBER = 71;
    private long maiRuZhongDanBiLi_;
    /**
     * <code>optional int64 MaiRuZhongDanBiLi = 71;</code>
     *
     * <pre>
     * 买入中单比例
     * </pre>
     */
    public boolean hasMaiRuZhongDanBiLi() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 MaiRuZhongDanBiLi = 71;</code>
     *
     * <pre>
     * 买入中单比例
     * </pre>
     */
    public long getMaiRuZhongDanBiLi() {
      return maiRuZhongDanBiLi_;
    }

    public static final int MAIRUDADANBILI_FIELD_NUMBER = 72;
    private long maiRuDaDanBiLi_;
    /**
     * <code>optional int64 MaiRuDaDanBiLi = 72;</code>
     *
     * <pre>
     * 买入大单比例
     * </pre>
     */
    public boolean hasMaiRuDaDanBiLi() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 MaiRuDaDanBiLi = 72;</code>
     *
     * <pre>
     * 买入大单比例
     * </pre>
     */
    public long getMaiRuDaDanBiLi() {
      return maiRuDaDanBiLi_;
    }

    public static final int MAIRUTEDADANBILI_FIELD_NUMBER = 73;
    private long maiRuTeDaDanBiLi_;
    /**
     * <code>optional int64 MaiRuTeDaDanBiLi = 73;</code>
     *
     * <pre>
     * 买入特大单比例
     * </pre>
     */
    public boolean hasMaiRuTeDaDanBiLi() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 MaiRuTeDaDanBiLi = 73;</code>
     *
     * <pre>
     * 买入特大单比例
     * </pre>
     */
    public long getMaiRuTeDaDanBiLi() {
      return maiRuTeDaDanBiLi_;
    }

    public static final int MAICHUZHONGDANBILI_FIELD_NUMBER = 74;
    private long maiChuZhongDanBiLi_;
    /**
     * <code>optional int64 MaiChuZhongDanBiLi = 74;</code>
     *
     * <pre>
     * 卖出中单比例
     * </pre>
     */
    public boolean hasMaiChuZhongDanBiLi() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 MaiChuZhongDanBiLi = 74;</code>
     *
     * <pre>
     * 卖出中单比例
     * </pre>
     */
    public long getMaiChuZhongDanBiLi() {
      return maiChuZhongDanBiLi_;
    }

    public static final int MAICHUDADANBILI_FIELD_NUMBER = 75;
    private long maiChuDaDanBiLi_;
    /**
     * <code>optional int64 MaiChuDaDanBiLi = 75;</code>
     *
     * <pre>
     * 卖出大单比例
     * </pre>
     */
    public boolean hasMaiChuDaDanBiLi() {
      return ((bitField2_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 MaiChuDaDanBiLi = 75;</code>
     *
     * <pre>
     * 卖出大单比例
     * </pre>
     */
    public long getMaiChuDaDanBiLi() {
      return maiChuDaDanBiLi_;
    }

    public static final int MAICHUTEDADANBILI_FIELD_NUMBER = 76;
    private long maiChuTeDaDanBiLi_;
    /**
     * <code>optional int64 MaiChuTeDaDanBiLi = 76;</code>
     *
     * <pre>
     * 卖出特大单比例
     * </pre>
     */
    public boolean hasMaiChuTeDaDanBiLi() {
      return ((bitField2_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 MaiChuTeDaDanBiLi = 76;</code>
     *
     * <pre>
     * 卖出特大单比例
     * </pre>
     */
    public long getMaiChuTeDaDanBiLi() {
      return maiChuTeDaDanBiLi_;
    }

    public static final int FENZHONGZHANGFU1_FIELD_NUMBER = 77;
    private long fenZhongZhangFu1_;
    /**
     * <code>optional int64 FenZhongZhangFu1 = 77;</code>
     *
     * <pre>
     * 1分钟涨幅
     * </pre>
     */
    public boolean hasFenZhongZhangFu1() {
      return ((bitField2_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 FenZhongZhangFu1 = 77;</code>
     *
     * <pre>
     * 1分钟涨幅
     * </pre>
     */
    public long getFenZhongZhangFu1() {
      return fenZhongZhangFu1_;
    }

    public static final int FENZHONGZHANGFU2_FIELD_NUMBER = 78;
    private long fenZhongZhangFu2_;
    /**
     * <code>optional int64 FenZhongZhangFu2 = 78;</code>
     *
     * <pre>
     * 2分钟涨幅
     * </pre>
     */
    public boolean hasFenZhongZhangFu2() {
      return ((bitField2_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 FenZhongZhangFu2 = 78;</code>
     *
     * <pre>
     * 2分钟涨幅
     * </pre>
     */
    public long getFenZhongZhangFu2() {
      return fenZhongZhangFu2_;
    }

    public static final int FENZHONGZHANGFU3_FIELD_NUMBER = 79;
    private long fenZhongZhangFu3_;
    /**
     * <code>optional int64 FenZhongZhangFu3 = 79;</code>
     *
     * <pre>
     * 3分钟涨幅
     * </pre>
     */
    public boolean hasFenZhongZhangFu3() {
      return ((bitField2_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 FenZhongZhangFu3 = 79;</code>
     *
     * <pre>
     * 3分钟涨幅
     * </pre>
     */
    public long getFenZhongZhangFu3() {
      return fenZhongZhangFu3_;
    }

    public static final int FENZHONGZHANGFU4_FIELD_NUMBER = 80;
    private long fenZhongZhangFu4_;
    /**
     * <code>optional int64 FenZhongZhangFu4 = 80;</code>
     *
     * <pre>
     * 4分钟涨幅
     * </pre>
     */
    public boolean hasFenZhongZhangFu4() {
      return ((bitField2_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 FenZhongZhangFu4 = 80;</code>
     *
     * <pre>
     * 4分钟涨幅
     * </pre>
     */
    public long getFenZhongZhangFu4() {
      return fenZhongZhangFu4_;
    }

    public static final int FENZHONGZHANGFU5_FIELD_NUMBER = 81;
    private long fenZhongZhangFu5_;
    /**
     * <code>optional int64 FenZhongZhangFu5 = 81;</code>
     *
     * <pre>
     * 5分钟涨幅
     * </pre>
     */
    public boolean hasFenZhongZhangFu5() {
      return ((bitField2_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 FenZhongZhangFu5 = 81;</code>
     *
     * <pre>
     * 5分钟涨幅
     * </pre>
     */
    public long getFenZhongZhangFu5() {
      return fenZhongZhangFu5_;
    }

    public static final int SHIYINGLV_FIELD_NUMBER = 82;
    private long shiYingLv_;
    /**
     * <code>optional int64 ShiYingLv = 82;</code>
     *
     * <pre>
     * 市盈率
     * </pre>
     */
    public boolean hasShiYingLv() {
      return ((bitField2_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 ShiYingLv = 82;</code>
     *
     * <pre>
     * 市盈率
     * </pre>
     */
    public long getShiYingLv() {
      return shiYingLv_;
    }

    public static final int ZHANGTING_FIELD_NUMBER = 83;
    private long zhangTing_;
    /**
     * <code>optional int64 ZhangTing = 83;</code>
     *
     * <pre>
     * 涨停
     * </pre>
     */
    public boolean hasZhangTing() {
      return ((bitField2_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 ZhangTing = 83;</code>
     *
     * <pre>
     * 涨停
     * </pre>
     */
    public long getZhangTing() {
      return zhangTing_;
    }

    public static final int DIETING_FIELD_NUMBER = 84;
    private long dieTing_;
    /**
     * <code>optional int64 DieTing = 84;</code>
     *
     * <pre>
     * 跌停
     * </pre>
     */
    public boolean hasDieTing() {
      return ((bitField2_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 DieTing = 84;</code>
     *
     * <pre>
     * 跌停
     * </pre>
     */
    public long getDieTing() {
      return dieTing_;
    }

    public static final int SHICHANGMINGCHENG_FIELD_NUMBER = 85;
    private java.lang.Object shiChangMingCheng_;
    /**
     * <code>optional string ShiChangMingCheng = 85;</code>
     *
     * <pre>
     * 所在市场的市场名称
     * </pre>
     */
    public boolean hasShiChangMingCheng() {
      return ((bitField2_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional string ShiChangMingCheng = 85;</code>
     *
     * <pre>
     * 所在市场的市场名称
     * </pre>
     */
    public java.lang.String getShiChangMingCheng() {
      java.lang.Object ref = shiChangMingCheng_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shiChangMingCheng_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ShiChangMingCheng = 85;</code>
     *
     * <pre>
     * 所在市场的市场名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getShiChangMingChengBytes() {
      java.lang.Object ref = shiChangMingCheng_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shiChangMingCheng_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHICHANGDUANMINGCHENG_FIELD_NUMBER = 86;
    private java.lang.Object shiChangDuanMingCheng_;
    /**
     * <code>optional string ShiChangDuanMingCheng = 86;</code>
     *
     * <pre>
     * 所在市场的市场短名称
     * </pre>
     */
    public boolean hasShiChangDuanMingCheng() {
      return ((bitField2_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string ShiChangDuanMingCheng = 86;</code>
     *
     * <pre>
     * 所在市场的市场短名称
     * </pre>
     */
    public java.lang.String getShiChangDuanMingCheng() {
      java.lang.Object ref = shiChangDuanMingCheng_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shiChangDuanMingCheng_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ShiChangDuanMingCheng = 86;</code>
     *
     * <pre>
     * 所在市场的市场短名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getShiChangDuanMingChengBytes() {
      java.lang.Object ref = shiChangDuanMingCheng_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shiChangDuanMingCheng_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JIGOUCHIHUOSHU_FIELD_NUMBER = 87;
    private long jiGouChiHuoShu_;
    /**
     * <code>optional int64 JiGouChiHuoShu = 87;</code>
     *
     * <pre>
     * 机构吃货数
     * </pre>
     */
    public boolean hasJiGouChiHuoShu() {
      return ((bitField2_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 JiGouChiHuoShu = 87;</code>
     *
     * <pre>
     * 机构吃货数
     * </pre>
     */
    public long getJiGouChiHuoShu() {
      return jiGouChiHuoShu_;
    }

    public static final int JIGOUTUHUOSHU_FIELD_NUMBER = 88;
    private long jiGouTuHuoShu_;
    /**
     * <code>optional int64 JiGouTuHuoShu = 88;</code>
     *
     * <pre>
     * 机构吐货数
     * </pre>
     */
    public boolean hasJiGouTuHuoShu() {
      return ((bitField2_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 JiGouTuHuoShu = 88;</code>
     *
     * <pre>
     * 机构吐货数
     * </pre>
     */
    public long getJiGouTuHuoShu() {
      return jiGouTuHuoShu_;
    }

    public static final int JIGOUCHIHUOLIANG_FIELD_NUMBER = 89;
    private long jiGouChiHuoLiang_;
    /**
     * <code>optional int64 JiGouChiHuoLiang = 89;</code>
     *
     * <pre>
     * 机构吃货量
     * </pre>
     */
    public boolean hasJiGouChiHuoLiang() {
      return ((bitField2_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 JiGouChiHuoLiang = 89;</code>
     *
     * <pre>
     * 机构吃货量
     * </pre>
     */
    public long getJiGouChiHuoLiang() {
      return jiGouChiHuoLiang_;
    }

    public static final int JIGOUTUHUOLIANG_FIELD_NUMBER = 90;
    private long jiGouTuHuoLiang_;
    /**
     * <code>optional int64 JiGouTuHuoLiang = 90;</code>
     *
     * <pre>
     * 机构吐货量
     * </pre>
     */
    public boolean hasJiGouTuHuoLiang() {
      return ((bitField2_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 JiGouTuHuoLiang = 90;</code>
     *
     * <pre>
     * 机构吐货量
     * </pre>
     */
    public long getJiGouTuHuoLiang() {
      return jiGouTuHuoLiang_;
    }

    public static final int JIGOUCHIHUOJUNE_FIELD_NUMBER = 91;
    private long jiGouChiHuoJunE_;
    /**
     * <code>optional int64 JiGouChiHuoJunE = 91;</code>
     *
     * <pre>
     * 机构吃货均额
     * </pre>
     */
    public boolean hasJiGouChiHuoJunE() {
      return ((bitField2_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 JiGouChiHuoJunE = 91;</code>
     *
     * <pre>
     * 机构吃货均额
     * </pre>
     */
    public long getJiGouChiHuoJunE() {
      return jiGouChiHuoJunE_;
    }

    public static final int JIGOUTUHUOJUNE_FIELD_NUMBER = 92;
    private long jiGouTuHuoJunE_;
    /**
     * <code>optional int64 JiGouTuHuoJunE = 92;</code>
     *
     * <pre>
     * 机构吐货均额
     * </pre>
     */
    public boolean hasJiGouTuHuoJunE() {
      return ((bitField2_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 JiGouTuHuoJunE = 92;</code>
     *
     * <pre>
     * 机构吐货均额
     * </pre>
     */
    public long getJiGouTuHuoJunE() {
      return jiGouTuHuoJunE_;
    }

    public static final int MEISHOUGUSHU_FIELD_NUMBER = 93;
    private long meiShouGuShu_;
    /**
     * <code>optional int64 MeiShouGuShu = 93;</code>
     *
     * <pre>
     * 每手股数
     * </pre>
     */
    public boolean hasMeiShouGuShu() {
      return ((bitField2_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 MeiShouGuShu = 93;</code>
     *
     * <pre>
     * 每手股数
     * </pre>
     */
    public long getMeiShouGuShu() {
      return meiShouGuShu_;
    }

    public static final int JIAOYIDANWEI_FIELD_NUMBER = 94;
    private long jiaoYiDanWei_;
    /**
     * <code>optional int64 JiaoYiDanWei = 94;</code>
     *
     * <pre>
     * 交易单位
     * </pre>
     */
    public boolean hasJiaoYiDanWei() {
      return ((bitField2_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 JiaoYiDanWei = 94;</code>
     *
     * <pre>
     * 交易单位
     * </pre>
     */
    public long getJiaoYiDanWei() {
      return jiaoYiDanWei_;
    }

    public static final int SHIXIAOLV_FIELD_NUMBER = 95;
    private long shiXiaoLv_;
    /**
     * <code>optional int64 ShiXiaoLv = 95;</code>
     *
     * <pre>
     * 市销率
     * </pre>
     */
    public boolean hasShiXiaoLv() {
      return ((bitField2_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 ShiXiaoLv = 95;</code>
     *
     * <pre>
     * 市销率
     * </pre>
     */
    public long getShiXiaoLv() {
      return shiXiaoLv_;
    }

    public static final int SHIJIAN_FIELD_NUMBER = 96;
    private long shiJian_;
    /**
     * <code>optional int64 ShiJian = 96;</code>
     *
     * <pre>
     * 时间
     * </pre>
     */
    public boolean hasShiJian() {
      return ((bitField2_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 ShiJian = 96;</code>
     *
     * <pre>
     * 时间
     * </pre>
     */
    public long getShiJian() {
      return shiJian_;
    }

    public static final int SHIJINGLV_FIELD_NUMBER = 97;
    private long shiJingLv_;
    /**
     * <code>optional int64 ShiJingLv = 97;</code>
     *
     * <pre>
     * 市净率
     * </pre>
     */
    public boolean hasShiJingLv() {
      return ((bitField3_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 ShiJingLv = 97;</code>
     *
     * <pre>
     * 市净率
     * </pre>
     */
    public long getShiJingLv() {
      return shiJingLv_;
    }

    public static final int ZONGSHIZHI_FIELD_NUMBER = 98;
    private long zongShiZhi_;
    /**
     * <code>optional int64 ZongShiZhi = 98;</code>
     *
     * <pre>
     * 总市值
     * </pre>
     */
    public boolean hasZongShiZhi() {
      return ((bitField3_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 ZongShiZhi = 98;</code>
     *
     * <pre>
     * 总市值
     * </pre>
     */
    public long getZongShiZhi() {
      return zongShiZhi_;
    }

    public static final int LIUTONGSHIZHI_FIELD_NUMBER = 99;
    private long liuTongShiZhi_;
    /**
     * <code>optional int64 LiuTongShiZhi = 99;</code>
     *
     * <pre>
     * 流通市值
     * </pre>
     */
    public boolean hasLiuTongShiZhi() {
      return ((bitField3_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 LiuTongShiZhi = 99;</code>
     *
     * <pre>
     * 流通市值
     * </pre>
     */
    public long getLiuTongShiZhi() {
      return liuTongShiZhi_;
    }

    public static final int MA1MINMA1_FIELD_NUMBER = 200;
    private long mA1MinMA1_;
    /**
     * <code>optional int64 MA1minMA1 = 200;</code>
     *
     * <pre>
     * 指标相关字段
     * MA
     * </pre>
     */
    public boolean hasMA1MinMA1() {
      return ((bitField3_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 MA1minMA1 = 200;</code>
     *
     * <pre>
     * 指标相关字段
     * MA
     * </pre>
     */
    public long getMA1MinMA1() {
      return mA1MinMA1_;
    }

    public static final int MA1MINMA2_FIELD_NUMBER = 201;
    private long mA1MinMA2_;
    /**
     * <code>optional int64 MA1minMA2 = 201;</code>
     *
     * <pre>
     * MA + 1min + MA2
     * </pre>
     */
    public boolean hasMA1MinMA2() {
      return ((bitField3_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 MA1minMA2 = 201;</code>
     *
     * <pre>
     * MA + 1min + MA2
     * </pre>
     */
    public long getMA1MinMA2() {
      return mA1MinMA2_;
    }

    public static final int MA1MINMA3_FIELD_NUMBER = 202;
    private long mA1MinMA3_;
    /**
     * <code>optional int64 MA1minMA3 = 202;</code>
     *
     * <pre>
     * MA + 1min + MA3
     * </pre>
     */
    public boolean hasMA1MinMA3() {
      return ((bitField3_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 MA1minMA3 = 202;</code>
     *
     * <pre>
     * MA + 1min + MA3
     * </pre>
     */
    public long getMA1MinMA3() {
      return mA1MinMA3_;
    }

    public static final int MA1MINMA4_FIELD_NUMBER = 203;
    private long mA1MinMA4_;
    /**
     * <code>optional int64 MA1minMA4 = 203;</code>
     *
     * <pre>
     * MA + 1min + MA4
     * </pre>
     */
    public boolean hasMA1MinMA4() {
      return ((bitField3_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 MA1minMA4 = 203;</code>
     *
     * <pre>
     * MA + 1min + MA4
     * </pre>
     */
    public long getMA1MinMA4() {
      return mA1MinMA4_;
    }

    public static final int MA1MINMA5_FIELD_NUMBER = 204;
    private long mA1MinMA5_;
    /**
     * <code>optional int64 MA1minMA5 = 204;</code>
     *
     * <pre>
     * MA + 1min + MA5
     * </pre>
     */
    public boolean hasMA1MinMA5() {
      return ((bitField3_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 MA1minMA5 = 204;</code>
     *
     * <pre>
     * MA + 1min + MA5
     * </pre>
     */
    public long getMA1MinMA5() {
      return mA1MinMA5_;
    }

    public static final int MA1MINMA6_FIELD_NUMBER = 205;
    private long mA1MinMA6_;
    /**
     * <code>optional int64 MA1minMA6 = 205;</code>
     *
     * <pre>
     * MA + 1min + MA6
     * </pre>
     */
    public boolean hasMA1MinMA6() {
      return ((bitField3_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 MA1minMA6 = 205;</code>
     *
     * <pre>
     * MA + 1min + MA6
     * </pre>
     */
    public long getMA1MinMA6() {
      return mA1MinMA6_;
    }

    public static final int MA5MINMA1_FIELD_NUMBER = 206;
    private long mA5MinMA1_;
    /**
     * <code>optional int64 MA5minMA1 = 206;</code>
     *
     * <pre>
     * MA + 5min + MA1
     * </pre>
     */
    public boolean hasMA5MinMA1() {
      return ((bitField3_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 MA5minMA1 = 206;</code>
     *
     * <pre>
     * MA + 5min + MA1
     * </pre>
     */
    public long getMA5MinMA1() {
      return mA5MinMA1_;
    }

    public static final int MA5MINMA2_FIELD_NUMBER = 207;
    private long mA5MinMA2_;
    /**
     * <code>optional int64 MA5minMA2 = 207;</code>
     *
     * <pre>
     * MA + 5min + MA2
     * </pre>
     */
    public boolean hasMA5MinMA2() {
      return ((bitField3_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 MA5minMA2 = 207;</code>
     *
     * <pre>
     * MA + 5min + MA2
     * </pre>
     */
    public long getMA5MinMA2() {
      return mA5MinMA2_;
    }

    public static final int MA5MINMA3_FIELD_NUMBER = 208;
    private long mA5MinMA3_;
    /**
     * <code>optional int64 MA5minMA3 = 208;</code>
     *
     * <pre>
     * MA + 5min + MA3
     * </pre>
     */
    public boolean hasMA5MinMA3() {
      return ((bitField3_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 MA5minMA3 = 208;</code>
     *
     * <pre>
     * MA + 5min + MA3
     * </pre>
     */
    public long getMA5MinMA3() {
      return mA5MinMA3_;
    }

    public static final int MA5MINMA4_FIELD_NUMBER = 209;
    private long mA5MinMA4_;
    /**
     * <code>optional int64 MA5minMA4 = 209;</code>
     *
     * <pre>
     * MA + 5min + MA4
     * </pre>
     */
    public boolean hasMA5MinMA4() {
      return ((bitField3_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 MA5minMA4 = 209;</code>
     *
     * <pre>
     * MA + 5min + MA4
     * </pre>
     */
    public long getMA5MinMA4() {
      return mA5MinMA4_;
    }

    public static final int MA5MINMA5_FIELD_NUMBER = 210;
    private long mA5MinMA5_;
    /**
     * <code>optional int64 MA5minMA5 = 210;</code>
     *
     * <pre>
     * MA + 5min + MA5
     * </pre>
     */
    public boolean hasMA5MinMA5() {
      return ((bitField3_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 MA5minMA5 = 210;</code>
     *
     * <pre>
     * MA + 5min + MA5
     * </pre>
     */
    public long getMA5MinMA5() {
      return mA5MinMA5_;
    }

    public static final int MA5MINMA6_FIELD_NUMBER = 211;
    private long mA5MinMA6_;
    /**
     * <code>optional int64 MA5minMA6 = 211;</code>
     *
     * <pre>
     * MA + 5min + MA6
     * </pre>
     */
    public boolean hasMA5MinMA6() {
      return ((bitField3_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 MA5minMA6 = 211;</code>
     *
     * <pre>
     * MA + 5min + MA6
     * </pre>
     */
    public long getMA5MinMA6() {
      return mA5MinMA6_;
    }

    public static final int MA1DAYMA1_FIELD_NUMBER = 212;
    private long mA1DayMA1_;
    /**
     * <code>optional int64 MA1dayMA1 = 212;</code>
     *
     * <pre>
     * MA + 1day + MA1
     * </pre>
     */
    public boolean hasMA1DayMA1() {
      return ((bitField3_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 MA1dayMA1 = 212;</code>
     *
     * <pre>
     * MA + 1day + MA1
     * </pre>
     */
    public long getMA1DayMA1() {
      return mA1DayMA1_;
    }

    public static final int MA1DAYMA2_FIELD_NUMBER = 213;
    private long mA1DayMA2_;
    /**
     * <code>optional int64 MA1dayMA2 = 213;</code>
     *
     * <pre>
     * MA + 1day + MA2
     * </pre>
     */
    public boolean hasMA1DayMA2() {
      return ((bitField3_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 MA1dayMA2 = 213;</code>
     *
     * <pre>
     * MA + 1day + MA2
     * </pre>
     */
    public long getMA1DayMA2() {
      return mA1DayMA2_;
    }

    public static final int MA1DAYMA3_FIELD_NUMBER = 214;
    private long mA1DayMA3_;
    /**
     * <code>optional int64 MA1dayMA3 = 214;</code>
     *
     * <pre>
     * MA + 1day + MA3
     * </pre>
     */
    public boolean hasMA1DayMA3() {
      return ((bitField3_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 MA1dayMA3 = 214;</code>
     *
     * <pre>
     * MA + 1day + MA3
     * </pre>
     */
    public long getMA1DayMA3() {
      return mA1DayMA3_;
    }

    public static final int MA1DAYMA4_FIELD_NUMBER = 215;
    private long mA1DayMA4_;
    /**
     * <code>optional int64 MA1dayMA4 = 215;</code>
     *
     * <pre>
     * MA + 1day + MA4
     * </pre>
     */
    public boolean hasMA1DayMA4() {
      return ((bitField3_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 MA1dayMA4 = 215;</code>
     *
     * <pre>
     * MA + 1day + MA4
     * </pre>
     */
    public long getMA1DayMA4() {
      return mA1DayMA4_;
    }

    public static final int MA1DAYMA5_FIELD_NUMBER = 216;
    private long mA1DayMA5_;
    /**
     * <code>optional int64 MA1dayMA5 = 216;</code>
     *
     * <pre>
     * MA + 1day + MA5
     * </pre>
     */
    public boolean hasMA1DayMA5() {
      return ((bitField3_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 MA1dayMA5 = 216;</code>
     *
     * <pre>
     * MA + 1day + MA5
     * </pre>
     */
    public long getMA1DayMA5() {
      return mA1DayMA5_;
    }

    public static final int MA1DAYMA6_FIELD_NUMBER = 217;
    private long mA1DayMA6_;
    /**
     * <code>optional int64 MA1dayMA6 = 217;</code>
     *
     * <pre>
     * MA + 1day + MA6
     * </pre>
     */
    public boolean hasMA1DayMA6() {
      return ((bitField3_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 MA1dayMA6 = 217;</code>
     *
     * <pre>
     * MA + 1day + MA6
     * </pre>
     */
    public long getMA1DayMA6() {
      return mA1DayMA6_;
    }

    public static final int BOLL1MINMID_FIELD_NUMBER = 218;
    private long bOLL1MinMID_;
    /**
     * <code>optional int64 BOLL1minMID = 218;</code>
     *
     * <pre>
     * BOLL
     * </pre>
     */
    public boolean hasBOLL1MinMID() {
      return ((bitField3_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 BOLL1minMID = 218;</code>
     *
     * <pre>
     * BOLL
     * </pre>
     */
    public long getBOLL1MinMID() {
      return bOLL1MinMID_;
    }

    public static final int BOLL1MINUPPER_FIELD_NUMBER = 219;
    private long bOLL1MinUPPER_;
    /**
     * <code>optional int64 BOLL1minUPPER = 219;</code>
     *
     * <pre>
     * BOLL + 1min + UPPER
     * </pre>
     */
    public boolean hasBOLL1MinUPPER() {
      return ((bitField3_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 BOLL1minUPPER = 219;</code>
     *
     * <pre>
     * BOLL + 1min + UPPER
     * </pre>
     */
    public long getBOLL1MinUPPER() {
      return bOLL1MinUPPER_;
    }

    public static final int BOLL1MINLOWER_FIELD_NUMBER = 220;
    private long bOLL1MinLOWER_;
    /**
     * <code>optional int64 BOLL1minLOWER = 220;</code>
     *
     * <pre>
     * BOLL + 1min + LOWER
     * </pre>
     */
    public boolean hasBOLL1MinLOWER() {
      return ((bitField3_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 BOLL1minLOWER = 220;</code>
     *
     * <pre>
     * BOLL + 1min + LOWER
     * </pre>
     */
    public long getBOLL1MinLOWER() {
      return bOLL1MinLOWER_;
    }

    public static final int BOLL5MINMID_FIELD_NUMBER = 221;
    private long bOLL5MinMID_;
    /**
     * <code>optional int64 BOLL5minMID = 221;</code>
     *
     * <pre>
     * BOLL + 5min + MID
     * </pre>
     */
    public boolean hasBOLL5MinMID() {
      return ((bitField3_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 BOLL5minMID = 221;</code>
     *
     * <pre>
     * BOLL + 5min + MID
     * </pre>
     */
    public long getBOLL5MinMID() {
      return bOLL5MinMID_;
    }

    public static final int BOLL5MINUPPER_FIELD_NUMBER = 222;
    private long bOLL5MinUPPER_;
    /**
     * <code>optional int64 BOLL5minUPPER = 222;</code>
     *
     * <pre>
     * BOLL + 5min + UPPER
     * </pre>
     */
    public boolean hasBOLL5MinUPPER() {
      return ((bitField3_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 BOLL5minUPPER = 222;</code>
     *
     * <pre>
     * BOLL + 5min + UPPER
     * </pre>
     */
    public long getBOLL5MinUPPER() {
      return bOLL5MinUPPER_;
    }

    public static final int BOLL5MINLOWER_FIELD_NUMBER = 223;
    private long bOLL5MinLOWER_;
    /**
     * <code>optional int64 BOLL5minLOWER = 223;</code>
     *
     * <pre>
     * BOLL + 5min + LOWER
     * </pre>
     */
    public boolean hasBOLL5MinLOWER() {
      return ((bitField3_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 BOLL5minLOWER = 223;</code>
     *
     * <pre>
     * BOLL + 5min + LOWER
     * </pre>
     */
    public long getBOLL5MinLOWER() {
      return bOLL5MinLOWER_;
    }

    public static final int BOLL1DAYMID_FIELD_NUMBER = 224;
    private long bOLL1DayMID_;
    /**
     * <code>optional int64 BOLL1dayMID = 224;</code>
     *
     * <pre>
     * BOLL + 5min + MID
     * </pre>
     */
    public boolean hasBOLL1DayMID() {
      return ((bitField3_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 BOLL1dayMID = 224;</code>
     *
     * <pre>
     * BOLL + 5min + MID
     * </pre>
     */
    public long getBOLL1DayMID() {
      return bOLL1DayMID_;
    }

    public static final int BOLL1DAYUPPER_FIELD_NUMBER = 225;
    private long bOLL1DayUPPER_;
    /**
     * <code>optional int64 BOLL1dayUPPER = 225;</code>
     *
     * <pre>
     * BOLL + 5min + UPPER
     * </pre>
     */
    public boolean hasBOLL1DayUPPER() {
      return ((bitField3_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 BOLL1dayUPPER = 225;</code>
     *
     * <pre>
     * BOLL + 5min + UPPER
     * </pre>
     */
    public long getBOLL1DayUPPER() {
      return bOLL1DayUPPER_;
    }

    public static final int BOLL1DAYLOWER_FIELD_NUMBER = 226;
    private long bOLL1DayLOWER_;
    /**
     * <code>optional int64 BOLL1dayLOWER = 226;</code>
     *
     * <pre>
     * BOLL + 5min + LOWER
     * </pre>
     */
    public boolean hasBOLL1DayLOWER() {
      return ((bitField3_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 BOLL1dayLOWER = 226;</code>
     *
     * <pre>
     * BOLL + 5min + LOWER
     * </pre>
     */
    public long getBOLL1DayLOWER() {
      return bOLL1DayLOWER_;
    }

    public static final int VOL1MIN_FIELD_NUMBER = 227;
    private long vOL1Min_;
    /**
     * <code>optional int64 VOL1min = 227;</code>
     *
     * <pre>
     * VOL
     * </pre>
     */
    public boolean hasVOL1Min() {
      return ((bitField3_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 VOL1min = 227;</code>
     *
     * <pre>
     * VOL
     * </pre>
     */
    public long getVOL1Min() {
      return vOL1Min_;
    }

    public static final int VOL1MINMA1_FIELD_NUMBER = 228;
    private long vOL1MinMA1_;
    /**
     * <code>optional int64 VOL1minMA1 = 228;</code>
     *
     * <pre>
     * VOL + 1min + MA1
     * </pre>
     */
    public boolean hasVOL1MinMA1() {
      return ((bitField3_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 VOL1minMA1 = 228;</code>
     *
     * <pre>
     * VOL + 1min + MA1
     * </pre>
     */
    public long getVOL1MinMA1() {
      return vOL1MinMA1_;
    }

    public static final int VOL1MINMA2_FIELD_NUMBER = 229;
    private long vOL1MinMA2_;
    /**
     * <code>optional int64 VOL1minMA2 = 229;</code>
     *
     * <pre>
     * VOL + 1min + MA2
     * </pre>
     */
    public boolean hasVOL1MinMA2() {
      return ((bitField4_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 VOL1minMA2 = 229;</code>
     *
     * <pre>
     * VOL + 1min + MA2
     * </pre>
     */
    public long getVOL1MinMA2() {
      return vOL1MinMA2_;
    }

    public static final int VOL1MINMA3_FIELD_NUMBER = 230;
    private long vOL1MinMA3_;
    /**
     * <code>optional int64 VOL1minMA3 = 230;</code>
     *
     * <pre>
     * VOL + 1min + MA3
     * </pre>
     */
    public boolean hasVOL1MinMA3() {
      return ((bitField4_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 VOL1minMA3 = 230;</code>
     *
     * <pre>
     * VOL + 1min + MA3
     * </pre>
     */
    public long getVOL1MinMA3() {
      return vOL1MinMA3_;
    }

    public static final int VOL5MIN_FIELD_NUMBER = 231;
    private long vOL5Min_;
    /**
     * <code>optional int64 VOL5min = 231;</code>
     *
     * <pre>
     * VOL + 5min + _
     * </pre>
     */
    public boolean hasVOL5Min() {
      return ((bitField4_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 VOL5min = 231;</code>
     *
     * <pre>
     * VOL + 5min + _
     * </pre>
     */
    public long getVOL5Min() {
      return vOL5Min_;
    }

    public static final int VOL5MINMA1_FIELD_NUMBER = 232;
    private long vOL5MinMA1_;
    /**
     * <code>optional int64 VOL5minMA1 = 232;</code>
     *
     * <pre>
     * VOL + 5min + MA1
     * </pre>
     */
    public boolean hasVOL5MinMA1() {
      return ((bitField4_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 VOL5minMA1 = 232;</code>
     *
     * <pre>
     * VOL + 5min + MA1
     * </pre>
     */
    public long getVOL5MinMA1() {
      return vOL5MinMA1_;
    }

    public static final int VOL5MINMA2_FIELD_NUMBER = 233;
    private long vOL5MinMA2_;
    /**
     * <code>optional int64 VOL5minMA2 = 233;</code>
     *
     * <pre>
     * VOL + 5min + MA2
     * </pre>
     */
    public boolean hasVOL5MinMA2() {
      return ((bitField4_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 VOL5minMA2 = 233;</code>
     *
     * <pre>
     * VOL + 5min + MA2
     * </pre>
     */
    public long getVOL5MinMA2() {
      return vOL5MinMA2_;
    }

    public static final int VOL5MINMA3_FIELD_NUMBER = 234;
    private long vOL5MinMA3_;
    /**
     * <code>optional int64 VOL5minMA3 = 234;</code>
     *
     * <pre>
     * VOL + 5min + MA3
     * </pre>
     */
    public boolean hasVOL5MinMA3() {
      return ((bitField4_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 VOL5minMA3 = 234;</code>
     *
     * <pre>
     * VOL + 5min + MA3
     * </pre>
     */
    public long getVOL5MinMA3() {
      return vOL5MinMA3_;
    }

    public static final int VOL1DAY_FIELD_NUMBER = 235;
    private long vOL1Day_;
    /**
     * <code>optional int64 VOL1day = 235;</code>
     *
     * <pre>
     * VOL + 1day + _
     * </pre>
     */
    public boolean hasVOL1Day() {
      return ((bitField4_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 VOL1day = 235;</code>
     *
     * <pre>
     * VOL + 1day + _
     * </pre>
     */
    public long getVOL1Day() {
      return vOL1Day_;
    }

    public static final int VOL1DAYMA1_FIELD_NUMBER = 236;
    private long vOL1DayMA1_;
    /**
     * <code>optional int64 VOL1dayMA1 = 236;</code>
     *
     * <pre>
     * VOL + 1day + MA1
     * </pre>
     */
    public boolean hasVOL1DayMA1() {
      return ((bitField4_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 VOL1dayMA1 = 236;</code>
     *
     * <pre>
     * VOL + 1day + MA1
     * </pre>
     */
    public long getVOL1DayMA1() {
      return vOL1DayMA1_;
    }

    public static final int VOL1DAYMA2_FIELD_NUMBER = 237;
    private long vOL1DayMA2_;
    /**
     * <code>optional int64 VOL1dayMA2 = 237;</code>
     *
     * <pre>
     * VOL + 1day + MA2
     * </pre>
     */
    public boolean hasVOL1DayMA2() {
      return ((bitField4_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 VOL1dayMA2 = 237;</code>
     *
     * <pre>
     * VOL + 1day + MA2
     * </pre>
     */
    public long getVOL1DayMA2() {
      return vOL1DayMA2_;
    }

    public static final int VOL1DAYMA3_FIELD_NUMBER = 238;
    private long vOL1DayMA3_;
    /**
     * <code>optional int64 VOL1dayMA3 = 238;</code>
     *
     * <pre>
     * VOL + 1day + MA3
     * </pre>
     */
    public boolean hasVOL1DayMA3() {
      return ((bitField4_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 VOL1dayMA3 = 238;</code>
     *
     * <pre>
     * VOL + 1day + MA3
     * </pre>
     */
    public long getVOL1DayMA3() {
      return vOL1DayMA3_;
    }

    public static final int ARBR1MINAR_FIELD_NUMBER = 239;
    private long aRBR1MinAR_;
    /**
     * <code>optional int64 ARBR1minAR = 239;</code>
     *
     * <pre>
     * ARBR
     * </pre>
     */
    public boolean hasARBR1MinAR() {
      return ((bitField4_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 ARBR1minAR = 239;</code>
     *
     * <pre>
     * ARBR
     * </pre>
     */
    public long getARBR1MinAR() {
      return aRBR1MinAR_;
    }

    public static final int ARBR1MINBR_FIELD_NUMBER = 240;
    private long aRBR1MinBR_;
    /**
     * <code>optional int64 ARBR1minBR = 240;</code>
     *
     * <pre>
     * ARBR + 1min + BR
     * </pre>
     */
    public boolean hasARBR1MinBR() {
      return ((bitField4_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 ARBR1minBR = 240;</code>
     *
     * <pre>
     * ARBR + 1min + BR
     * </pre>
     */
    public long getARBR1MinBR() {
      return aRBR1MinBR_;
    }

    public static final int ARBR5MINAR_FIELD_NUMBER = 241;
    private long aRBR5MinAR_;
    /**
     * <code>optional int64 ARBR5minAR = 241;</code>
     *
     * <pre>
     * ARBR + 5min + AR
     * </pre>
     */
    public boolean hasARBR5MinAR() {
      return ((bitField4_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 ARBR5minAR = 241;</code>
     *
     * <pre>
     * ARBR + 5min + AR
     * </pre>
     */
    public long getARBR5MinAR() {
      return aRBR5MinAR_;
    }

    public static final int ARBR5MINBR_FIELD_NUMBER = 242;
    private long aRBR5MinBR_;
    /**
     * <code>optional int64 ARBR5minBR = 242;</code>
     *
     * <pre>
     * ARBR + 5min + BR
     * </pre>
     */
    public boolean hasARBR5MinBR() {
      return ((bitField4_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 ARBR5minBR = 242;</code>
     *
     * <pre>
     * ARBR + 5min + BR
     * </pre>
     */
    public long getARBR5MinBR() {
      return aRBR5MinBR_;
    }

    public static final int ARBR1DAYAR_FIELD_NUMBER = 243;
    private long aRBR1DayAR_;
    /**
     * <code>optional int64 ARBR1dayAR = 243;</code>
     *
     * <pre>
     * ARBR + 1day + AR
     * </pre>
     */
    public boolean hasARBR1DayAR() {
      return ((bitField4_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 ARBR1dayAR = 243;</code>
     *
     * <pre>
     * ARBR + 1day + AR
     * </pre>
     */
    public long getARBR1DayAR() {
      return aRBR1DayAR_;
    }

    public static final int ARBR1DAYBR_FIELD_NUMBER = 244;
    private long aRBR1DayBR_;
    /**
     * <code>optional int64 ARBR1dayBR = 244;</code>
     *
     * <pre>
     * ARBR + 1day + BR
     * </pre>
     */
    public boolean hasARBR1DayBR() {
      return ((bitField4_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 ARBR1dayBR = 244;</code>
     *
     * <pre>
     * ARBR + 1day + BR
     * </pre>
     */
    public long getARBR1DayBR() {
      return aRBR1DayBR_;
    }

    public static final int BIAS1MINBIAS1_FIELD_NUMBER = 245;
    private long bIAS1MinBIAS1_;
    /**
     * <code>optional int64 BIAS1minBIAS1 = 245;</code>
     *
     * <pre>
     * BIAS
     * </pre>
     */
    public boolean hasBIAS1MinBIAS1() {
      return ((bitField4_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 BIAS1minBIAS1 = 245;</code>
     *
     * <pre>
     * BIAS
     * </pre>
     */
    public long getBIAS1MinBIAS1() {
      return bIAS1MinBIAS1_;
    }

    public static final int BIAS1MINBIAS2_FIELD_NUMBER = 246;
    private long bIAS1MinBIAS2_;
    /**
     * <code>optional int64 BIAS1minBIAS2 = 246;</code>
     *
     * <pre>
     * BIAS + 1min + BIAS2
     * </pre>
     */
    public boolean hasBIAS1MinBIAS2() {
      return ((bitField4_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 BIAS1minBIAS2 = 246;</code>
     *
     * <pre>
     * BIAS + 1min + BIAS2
     * </pre>
     */
    public long getBIAS1MinBIAS2() {
      return bIAS1MinBIAS2_;
    }

    public static final int BIAS1MINBIAS3_FIELD_NUMBER = 247;
    private long bIAS1MinBIAS3_;
    /**
     * <code>optional int64 BIAS1minBIAS3 = 247;</code>
     *
     * <pre>
     * BIAS + 1min + BIAS3
     * </pre>
     */
    public boolean hasBIAS1MinBIAS3() {
      return ((bitField4_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 BIAS1minBIAS3 = 247;</code>
     *
     * <pre>
     * BIAS + 1min + BIAS3
     * </pre>
     */
    public long getBIAS1MinBIAS3() {
      return bIAS1MinBIAS3_;
    }

    public static final int BIAS5MINBIAS1_FIELD_NUMBER = 248;
    private long bIAS5MinBIAS1_;
    /**
     * <code>optional int64 BIAS5minBIAS1 = 248;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS1
     * </pre>
     */
    public boolean hasBIAS5MinBIAS1() {
      return ((bitField4_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 BIAS5minBIAS1 = 248;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS1
     * </pre>
     */
    public long getBIAS5MinBIAS1() {
      return bIAS5MinBIAS1_;
    }

    public static final int BIAS5MINBIAS2_FIELD_NUMBER = 249;
    private long bIAS5MinBIAS2_;
    /**
     * <code>optional int64 BIAS5minBIAS2 = 249;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS2
     * </pre>
     */
    public boolean hasBIAS5MinBIAS2() {
      return ((bitField4_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 BIAS5minBIAS2 = 249;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS2
     * </pre>
     */
    public long getBIAS5MinBIAS2() {
      return bIAS5MinBIAS2_;
    }

    public static final int BIAS5MINBIAS3_FIELD_NUMBER = 250;
    private long bIAS5MinBIAS3_;
    /**
     * <code>optional int64 BIAS5minBIAS3 = 250;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS3
     * </pre>
     */
    public boolean hasBIAS5MinBIAS3() {
      return ((bitField4_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 BIAS5minBIAS3 = 250;</code>
     *
     * <pre>
     * BIAS + 5min + BIAS3
     * </pre>
     */
    public long getBIAS5MinBIAS3() {
      return bIAS5MinBIAS3_;
    }

    public static final int BIAS1DAYBIAS1_FIELD_NUMBER = 251;
    private long bIAS1DayBIAS1_;
    /**
     * <code>optional int64 BIAS1dayBIAS1 = 251;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS1
     * </pre>
     */
    public boolean hasBIAS1DayBIAS1() {
      return ((bitField4_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 BIAS1dayBIAS1 = 251;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS1
     * </pre>
     */
    public long getBIAS1DayBIAS1() {
      return bIAS1DayBIAS1_;
    }

    public static final int BIAS1DAYBIAS2_FIELD_NUMBER = 252;
    private long bIAS1DayBIAS2_;
    /**
     * <code>optional int64 BIAS1dayBIAS2 = 252;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS2
     * </pre>
     */
    public boolean hasBIAS1DayBIAS2() {
      return ((bitField4_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 BIAS1dayBIAS2 = 252;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS2
     * </pre>
     */
    public long getBIAS1DayBIAS2() {
      return bIAS1DayBIAS2_;
    }

    public static final int BIAS1DAYBIAS3_FIELD_NUMBER = 253;
    private long bIAS1DayBIAS3_;
    /**
     * <code>optional int64 BIAS1dayBIAS3 = 253;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS3
     * </pre>
     */
    public boolean hasBIAS1DayBIAS3() {
      return ((bitField4_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 BIAS1dayBIAS3 = 253;</code>
     *
     * <pre>
     * BIAS + 1day + BIAS3
     * </pre>
     */
    public long getBIAS1DayBIAS3() {
      return bIAS1DayBIAS3_;
    }

    public static final int CCI1MIN_FIELD_NUMBER = 254;
    private long cCI1Min_;
    /**
     * <code>optional int64 CCI1min = 254;</code>
     *
     * <pre>
     * CCI
     * </pre>
     */
    public boolean hasCCI1Min() {
      return ((bitField4_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 CCI1min = 254;</code>
     *
     * <pre>
     * CCI
     * </pre>
     */
    public long getCCI1Min() {
      return cCI1Min_;
    }

    public static final int CCI5MIN_FIELD_NUMBER = 255;
    private long cCI5Min_;
    /**
     * <code>optional int64 CCI5min = 255;</code>
     *
     * <pre>
     * CCI + 5min + _
     * </pre>
     */
    public boolean hasCCI5Min() {
      return ((bitField4_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 CCI5min = 255;</code>
     *
     * <pre>
     * CCI + 5min + _
     * </pre>
     */
    public long getCCI5Min() {
      return cCI5Min_;
    }

    public static final int CCI1DAY_FIELD_NUMBER = 256;
    private long cCI1Day_;
    /**
     * <code>optional int64 CCI1day = 256;</code>
     *
     * <pre>
     * CCI + 1day + _
     * </pre>
     */
    public boolean hasCCI1Day() {
      return ((bitField4_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 CCI1day = 256;</code>
     *
     * <pre>
     * CCI + 1day + _
     * </pre>
     */
    public long getCCI1Day() {
      return cCI1Day_;
    }

    public static final int CJBS1MINCJBS_FIELD_NUMBER = 257;
    private long cJBS1MinCJBS_;
    /**
     * <code>optional int64 CJBS1minCJBS = 257;</code>
     *
     * <pre>
     * CJBS
     * </pre>
     */
    public boolean hasCJBS1MinCJBS() {
      return ((bitField4_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 CJBS1minCJBS = 257;</code>
     *
     * <pre>
     * CJBS
     * </pre>
     */
    public long getCJBS1MinCJBS() {
      return cJBS1MinCJBS_;
    }

    public static final int CJBS5MINCJBS_FIELD_NUMBER = 258;
    private long cJBS5MinCJBS_;
    /**
     * <code>optional int64 CJBS5minCJBS = 258;</code>
     *
     * <pre>
     * CJBS + 5min + CJBS
     * </pre>
     */
    public boolean hasCJBS5MinCJBS() {
      return ((bitField4_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 CJBS5minCJBS = 258;</code>
     *
     * <pre>
     * CJBS + 5min + CJBS
     * </pre>
     */
    public long getCJBS5MinCJBS() {
      return cJBS5MinCJBS_;
    }

    public static final int CJBS1DAYCJBS_FIELD_NUMBER = 259;
    private long cJBS1DayCJBS_;
    /**
     * <code>optional int64 CJBS1dayCJBS = 259;</code>
     *
     * <pre>
     * CJBS + 1day + CJBS
     * </pre>
     */
    public boolean hasCJBS1DayCJBS() {
      return ((bitField4_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 CJBS1dayCJBS = 259;</code>
     *
     * <pre>
     * CJBS + 1day + CJBS
     * </pre>
     */
    public long getCJBS1DayCJBS() {
      return cJBS1DayCJBS_;
    }

    public static final int CR1MINCR_FIELD_NUMBER = 260;
    private long cR1MinCR_;
    /**
     * <code>optional int64 CR1minCR = 260;</code>
     *
     * <pre>
     * CR
     * </pre>
     */
    public boolean hasCR1MinCR() {
      return ((bitField4_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 CR1minCR = 260;</code>
     *
     * <pre>
     * CR
     * </pre>
     */
    public long getCR1MinCR() {
      return cR1MinCR_;
    }

    public static final int CR1MINMA1_FIELD_NUMBER = 261;
    private long cR1MinMA1_;
    /**
     * <code>optional int64 CR1minMA1 = 261;</code>
     *
     * <pre>
     * CR + 1min + MA1
     * </pre>
     */
    public boolean hasCR1MinMA1() {
      return ((bitField5_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 CR1minMA1 = 261;</code>
     *
     * <pre>
     * CR + 1min + MA1
     * </pre>
     */
    public long getCR1MinMA1() {
      return cR1MinMA1_;
    }

    public static final int CR1MINMA2_FIELD_NUMBER = 262;
    private long cR1MinMA2_;
    /**
     * <code>optional int64 CR1minMA2 = 262;</code>
     *
     * <pre>
     * CR + 1min + MA2
     * </pre>
     */
    public boolean hasCR1MinMA2() {
      return ((bitField5_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 CR1minMA2 = 262;</code>
     *
     * <pre>
     * CR + 1min + MA2
     * </pre>
     */
    public long getCR1MinMA2() {
      return cR1MinMA2_;
    }

    public static final int CR1MINMA3_FIELD_NUMBER = 263;
    private long cR1MinMA3_;
    /**
     * <code>optional int64 CR1minMA3 = 263;</code>
     *
     * <pre>
     * CR + 1min + MA3
     * </pre>
     */
    public boolean hasCR1MinMA3() {
      return ((bitField5_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 CR1minMA3 = 263;</code>
     *
     * <pre>
     * CR + 1min + MA3
     * </pre>
     */
    public long getCR1MinMA3() {
      return cR1MinMA3_;
    }

    public static final int CR5MINCR_FIELD_NUMBER = 264;
    private long cR5MinCR_;
    /**
     * <code>optional int64 CR5minCR = 264;</code>
     *
     * <pre>
     * CR + 5min + CR
     * </pre>
     */
    public boolean hasCR5MinCR() {
      return ((bitField5_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 CR5minCR = 264;</code>
     *
     * <pre>
     * CR + 5min + CR
     * </pre>
     */
    public long getCR5MinCR() {
      return cR5MinCR_;
    }

    public static final int CR5MINMA1_FIELD_NUMBER = 265;
    private long cR5MinMA1_;
    /**
     * <code>optional int64 CR5minMA1 = 265;</code>
     *
     * <pre>
     * CR + 5min + MA1
     * </pre>
     */
    public boolean hasCR5MinMA1() {
      return ((bitField5_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 CR5minMA1 = 265;</code>
     *
     * <pre>
     * CR + 5min + MA1
     * </pre>
     */
    public long getCR5MinMA1() {
      return cR5MinMA1_;
    }

    public static final int CR5MINMA2_FIELD_NUMBER = 266;
    private long cR5MinMA2_;
    /**
     * <code>optional int64 CR5minMA2 = 266;</code>
     *
     * <pre>
     * CR + 5min + MA2
     * </pre>
     */
    public boolean hasCR5MinMA2() {
      return ((bitField5_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 CR5minMA2 = 266;</code>
     *
     * <pre>
     * CR + 5min + MA2
     * </pre>
     */
    public long getCR5MinMA2() {
      return cR5MinMA2_;
    }

    public static final int CR5MINMA3_FIELD_NUMBER = 267;
    private long cR5MinMA3_;
    /**
     * <code>optional int64 CR5minMA3 = 267;</code>
     *
     * <pre>
     * CR + 5min + MA3
     * </pre>
     */
    public boolean hasCR5MinMA3() {
      return ((bitField5_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 CR5minMA3 = 267;</code>
     *
     * <pre>
     * CR + 5min + MA3
     * </pre>
     */
    public long getCR5MinMA3() {
      return cR5MinMA3_;
    }

    public static final int CR1DAYCR_FIELD_NUMBER = 268;
    private long cR1DayCR_;
    /**
     * <code>optional int64 CR1dayCR = 268;</code>
     *
     * <pre>
     * CR + 1day + CR
     * </pre>
     */
    public boolean hasCR1DayCR() {
      return ((bitField5_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 CR1dayCR = 268;</code>
     *
     * <pre>
     * CR + 1day + CR
     * </pre>
     */
    public long getCR1DayCR() {
      return cR1DayCR_;
    }

    public static final int CR1DAYMA1_FIELD_NUMBER = 269;
    private long cR1DayMA1_;
    /**
     * <code>optional int64 CR1dayMA1 = 269;</code>
     *
     * <pre>
     * CR + 1day + MA1
     * </pre>
     */
    public boolean hasCR1DayMA1() {
      return ((bitField5_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 CR1dayMA1 = 269;</code>
     *
     * <pre>
     * CR + 1day + MA1
     * </pre>
     */
    public long getCR1DayMA1() {
      return cR1DayMA1_;
    }

    public static final int CR1DAYMA2_FIELD_NUMBER = 270;
    private long cR1DayMA2_;
    /**
     * <code>optional int64 CR1dayMA2 = 270;</code>
     *
     * <pre>
     * CR + 1day + MA2
     * </pre>
     */
    public boolean hasCR1DayMA2() {
      return ((bitField5_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 CR1dayMA2 = 270;</code>
     *
     * <pre>
     * CR + 1day + MA2
     * </pre>
     */
    public long getCR1DayMA2() {
      return cR1DayMA2_;
    }

    public static final int CR1DAYMA3_FIELD_NUMBER = 271;
    private long cR1DayMA3_;
    /**
     * <code>optional int64 CR1dayMA3 = 271;</code>
     *
     * <pre>
     * CR + 1day + MA3
     * </pre>
     */
    public boolean hasCR1DayMA3() {
      return ((bitField5_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 CR1dayMA3 = 271;</code>
     *
     * <pre>
     * CR + 1day + MA3
     * </pre>
     */
    public long getCR1DayMA3() {
      return cR1DayMA3_;
    }

    public static final int DMA1MINDDD_FIELD_NUMBER = 272;
    private long dMA1MinDDD_;
    /**
     * <code>optional int64 DMA1minDDD = 272;</code>
     *
     * <pre>
     * DMA
     * </pre>
     */
    public boolean hasDMA1MinDDD() {
      return ((bitField5_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 DMA1minDDD = 272;</code>
     *
     * <pre>
     * DMA
     * </pre>
     */
    public long getDMA1MinDDD() {
      return dMA1MinDDD_;
    }

    public static final int DMA1MINAMA_FIELD_NUMBER = 273;
    private long dMA1MinAMA_;
    /**
     * <code>optional int64 DMA1minAMA = 273;</code>
     *
     * <pre>
     * DMA + 1min + AMA
     * </pre>
     */
    public boolean hasDMA1MinAMA() {
      return ((bitField5_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 DMA1minAMA = 273;</code>
     *
     * <pre>
     * DMA + 1min + AMA
     * </pre>
     */
    public long getDMA1MinAMA() {
      return dMA1MinAMA_;
    }

    public static final int DMA5MINDDD_FIELD_NUMBER = 274;
    private long dMA5MinDDD_;
    /**
     * <code>optional int64 DMA5minDDD = 274;</code>
     *
     * <pre>
     * DMA + 5min + DDD
     * </pre>
     */
    public boolean hasDMA5MinDDD() {
      return ((bitField5_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 DMA5minDDD = 274;</code>
     *
     * <pre>
     * DMA + 5min + DDD
     * </pre>
     */
    public long getDMA5MinDDD() {
      return dMA5MinDDD_;
    }

    public static final int DMA5MINAMA_FIELD_NUMBER = 275;
    private long dMA5MinAMA_;
    /**
     * <code>optional int64 DMA5minAMA = 275;</code>
     *
     * <pre>
     * DMA + 5min + AMA
     * </pre>
     */
    public boolean hasDMA5MinAMA() {
      return ((bitField5_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 DMA5minAMA = 275;</code>
     *
     * <pre>
     * DMA + 5min + AMA
     * </pre>
     */
    public long getDMA5MinAMA() {
      return dMA5MinAMA_;
    }

    public static final int DMA1DAYDDD_FIELD_NUMBER = 276;
    private long dMA1DayDDD_;
    /**
     * <code>optional int64 DMA1dayDDD = 276;</code>
     *
     * <pre>
     * DMA + 1day + DDD
     * </pre>
     */
    public boolean hasDMA1DayDDD() {
      return ((bitField5_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 DMA1dayDDD = 276;</code>
     *
     * <pre>
     * DMA + 1day + DDD
     * </pre>
     */
    public long getDMA1DayDDD() {
      return dMA1DayDDD_;
    }

    public static final int DMA1DAYAMA_FIELD_NUMBER = 277;
    private long dMA1DayAMA_;
    /**
     * <code>optional int64 DMA1dayAMA = 277;</code>
     *
     * <pre>
     * DMA + 1day + AMA
     * </pre>
     */
    public boolean hasDMA1DayAMA() {
      return ((bitField5_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 DMA1dayAMA = 277;</code>
     *
     * <pre>
     * DMA + 1day + AMA
     * </pre>
     */
    public long getDMA1DayAMA() {
      return dMA1DayAMA_;
    }

    public static final int DMI1MINPDI_FIELD_NUMBER = 278;
    private long dMI1MinPDI_;
    /**
     * <code>optional int64 DMI1minPDI = 278;</code>
     *
     * <pre>
     * DMI
     * </pre>
     */
    public boolean hasDMI1MinPDI() {
      return ((bitField5_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 DMI1minPDI = 278;</code>
     *
     * <pre>
     * DMI
     * </pre>
     */
    public long getDMI1MinPDI() {
      return dMI1MinPDI_;
    }

    public static final int DMI1MINMDI_FIELD_NUMBER = 279;
    private long dMI1MinMDI_;
    /**
     * <code>optional int64 DMI1minMDI = 279;</code>
     *
     * <pre>
     * DMI + 1min + MDI
     * </pre>
     */
    public boolean hasDMI1MinMDI() {
      return ((bitField5_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 DMI1minMDI = 279;</code>
     *
     * <pre>
     * DMI + 1min + MDI
     * </pre>
     */
    public long getDMI1MinMDI() {
      return dMI1MinMDI_;
    }

    public static final int DMI1MINADX_FIELD_NUMBER = 280;
    private long dMI1MinADX_;
    /**
     * <code>optional int64 DMI1minADX = 280;</code>
     *
     * <pre>
     * DMI + 1min + ADX
     * </pre>
     */
    public boolean hasDMI1MinADX() {
      return ((bitField5_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 DMI1minADX = 280;</code>
     *
     * <pre>
     * DMI + 1min + ADX
     * </pre>
     */
    public long getDMI1MinADX() {
      return dMI1MinADX_;
    }

    public static final int DMI1MINADXR_FIELD_NUMBER = 281;
    private long dMI1MinADXR_;
    /**
     * <code>optional int64 DMI1minADXR = 281;</code>
     *
     * <pre>
     * DMI + 1min + ADXR
     * </pre>
     */
    public boolean hasDMI1MinADXR() {
      return ((bitField5_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 DMI1minADXR = 281;</code>
     *
     * <pre>
     * DMI + 1min + ADXR
     * </pre>
     */
    public long getDMI1MinADXR() {
      return dMI1MinADXR_;
    }

    public static final int DMI5MINPDI_FIELD_NUMBER = 282;
    private long dMI5MinPDI_;
    /**
     * <code>optional int64 DMI5minPDI = 282;</code>
     *
     * <pre>
     * DMI + 5min + PDI
     * </pre>
     */
    public boolean hasDMI5MinPDI() {
      return ((bitField5_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 DMI5minPDI = 282;</code>
     *
     * <pre>
     * DMI + 5min + PDI
     * </pre>
     */
    public long getDMI5MinPDI() {
      return dMI5MinPDI_;
    }

    public static final int DMI5MINMDI_FIELD_NUMBER = 283;
    private long dMI5MinMDI_;
    /**
     * <code>optional int64 DMI5minMDI = 283;</code>
     *
     * <pre>
     * DMI + 5min + MDI
     * </pre>
     */
    public boolean hasDMI5MinMDI() {
      return ((bitField5_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 DMI5minMDI = 283;</code>
     *
     * <pre>
     * DMI + 5min + MDI
     * </pre>
     */
    public long getDMI5MinMDI() {
      return dMI5MinMDI_;
    }

    public static final int DMI5MINADX_FIELD_NUMBER = 284;
    private long dMI5MinADX_;
    /**
     * <code>optional int64 DMI5minADX = 284;</code>
     *
     * <pre>
     * DMI + 5min + ADX
     * </pre>
     */
    public boolean hasDMI5MinADX() {
      return ((bitField5_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 DMI5minADX = 284;</code>
     *
     * <pre>
     * DMI + 5min + ADX
     * </pre>
     */
    public long getDMI5MinADX() {
      return dMI5MinADX_;
    }

    public static final int DMI5MINADXR_FIELD_NUMBER = 285;
    private long dMI5MinADXR_;
    /**
     * <code>optional int64 DMI5minADXR = 285;</code>
     *
     * <pre>
     * DMI + 5min + ADXR
     * </pre>
     */
    public boolean hasDMI5MinADXR() {
      return ((bitField5_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 DMI5minADXR = 285;</code>
     *
     * <pre>
     * DMI + 5min + ADXR
     * </pre>
     */
    public long getDMI5MinADXR() {
      return dMI5MinADXR_;
    }

    public static final int DMI1DAYPDI_FIELD_NUMBER = 286;
    private long dMI1DayPDI_;
    /**
     * <code>optional int64 DMI1dayPDI = 286;</code>
     *
     * <pre>
     * DMI + 1day + PDI
     * </pre>
     */
    public boolean hasDMI1DayPDI() {
      return ((bitField5_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 DMI1dayPDI = 286;</code>
     *
     * <pre>
     * DMI + 1day + PDI
     * </pre>
     */
    public long getDMI1DayPDI() {
      return dMI1DayPDI_;
    }

    public static final int DMI1DAYMDI_FIELD_NUMBER = 287;
    private long dMI1DayMDI_;
    /**
     * <code>optional int64 DMI1dayMDI = 287;</code>
     *
     * <pre>
     * DMI + 1day + MDI
     * </pre>
     */
    public boolean hasDMI1DayMDI() {
      return ((bitField5_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 DMI1dayMDI = 287;</code>
     *
     * <pre>
     * DMI + 1day + MDI
     * </pre>
     */
    public long getDMI1DayMDI() {
      return dMI1DayMDI_;
    }

    public static final int DMI1DAYADX_FIELD_NUMBER = 288;
    private long dMI1DayADX_;
    /**
     * <code>optional int64 DMI1dayADX = 288;</code>
     *
     * <pre>
     * DMI + 1day + ADX
     * </pre>
     */
    public boolean hasDMI1DayADX() {
      return ((bitField5_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 DMI1dayADX = 288;</code>
     *
     * <pre>
     * DMI + 1day + ADX
     * </pre>
     */
    public long getDMI1DayADX() {
      return dMI1DayADX_;
    }

    public static final int DMI1DAYADXR_FIELD_NUMBER = 289;
    private long dMI1DayADXR_;
    /**
     * <code>optional int64 DMI1dayADXR = 289;</code>
     *
     * <pre>
     * DMI + 1day + ADXR
     * </pre>
     */
    public boolean hasDMI1DayADXR() {
      return ((bitField5_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 DMI1dayADXR = 289;</code>
     *
     * <pre>
     * DMI + 1day + ADXR
     * </pre>
     */
    public long getDMI1DayADXR() {
      return dMI1DayADXR_;
    }

    public static final int KDJ1MINK_FIELD_NUMBER = 290;
    private long kDJ1MinK_;
    /**
     * <code>optional int64 KDJ1minK = 290;</code>
     *
     * <pre>
     * KDJ
     * </pre>
     */
    public boolean hasKDJ1MinK() {
      return ((bitField5_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 KDJ1minK = 290;</code>
     *
     * <pre>
     * KDJ
     * </pre>
     */
    public long getKDJ1MinK() {
      return kDJ1MinK_;
    }

    public static final int KDJ1MIND_FIELD_NUMBER = 291;
    private long kDJ1MinD_;
    /**
     * <code>optional int64 KDJ1minD = 291;</code>
     *
     * <pre>
     * KDJ + 1min + D
     * </pre>
     */
    public boolean hasKDJ1MinD() {
      return ((bitField5_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 KDJ1minD = 291;</code>
     *
     * <pre>
     * KDJ + 1min + D
     * </pre>
     */
    public long getKDJ1MinD() {
      return kDJ1MinD_;
    }

    public static final int KDJ1MINJ_FIELD_NUMBER = 292;
    private long kDJ1MinJ_;
    /**
     * <code>optional int64 KDJ1minJ = 292;</code>
     *
     * <pre>
     * KDJ + 1min + J
     * </pre>
     */
    public boolean hasKDJ1MinJ() {
      return ((bitField5_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 KDJ1minJ = 292;</code>
     *
     * <pre>
     * KDJ + 1min + J
     * </pre>
     */
    public long getKDJ1MinJ() {
      return kDJ1MinJ_;
    }

    public static final int KDJ5MINK_FIELD_NUMBER = 293;
    private long kDJ5MinK_;
    /**
     * <code>optional int64 KDJ5minK = 293;</code>
     *
     * <pre>
     * KDJ + 5min + K
     * </pre>
     */
    public boolean hasKDJ5MinK() {
      return ((bitField6_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 KDJ5minK = 293;</code>
     *
     * <pre>
     * KDJ + 5min + K
     * </pre>
     */
    public long getKDJ5MinK() {
      return kDJ5MinK_;
    }

    public static final int KDJ5MIND_FIELD_NUMBER = 294;
    private long kDJ5MinD_;
    /**
     * <code>optional int64 KDJ5minD = 294;</code>
     *
     * <pre>
     * KDJ + 5min + D
     * </pre>
     */
    public boolean hasKDJ5MinD() {
      return ((bitField6_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 KDJ5minD = 294;</code>
     *
     * <pre>
     * KDJ + 5min + D
     * </pre>
     */
    public long getKDJ5MinD() {
      return kDJ5MinD_;
    }

    public static final int KDJ5MINJ_FIELD_NUMBER = 295;
    private long kDJ5MinJ_;
    /**
     * <code>optional int64 KDJ5minJ = 295;</code>
     *
     * <pre>
     * KDJ + 5min + J
     * </pre>
     */
    public boolean hasKDJ5MinJ() {
      return ((bitField6_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 KDJ5minJ = 295;</code>
     *
     * <pre>
     * KDJ + 5min + J
     * </pre>
     */
    public long getKDJ5MinJ() {
      return kDJ5MinJ_;
    }

    public static final int KDJ1DAYK_FIELD_NUMBER = 296;
    private long kDJ1DayK_;
    /**
     * <code>optional int64 KDJ1dayK = 296;</code>
     *
     * <pre>
     * KDJ + 1day + K
     * </pre>
     */
    public boolean hasKDJ1DayK() {
      return ((bitField6_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 KDJ1dayK = 296;</code>
     *
     * <pre>
     * KDJ + 1day + K
     * </pre>
     */
    public long getKDJ1DayK() {
      return kDJ1DayK_;
    }

    public static final int KDJ1DAYD_FIELD_NUMBER = 297;
    private long kDJ1DayD_;
    /**
     * <code>optional int64 KDJ1dayD = 297;</code>
     *
     * <pre>
     * KDJ + 1day + D
     * </pre>
     */
    public boolean hasKDJ1DayD() {
      return ((bitField6_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 KDJ1dayD = 297;</code>
     *
     * <pre>
     * KDJ + 1day + D
     * </pre>
     */
    public long getKDJ1DayD() {
      return kDJ1DayD_;
    }

    public static final int KDJ1DAYJ_FIELD_NUMBER = 298;
    private long kDJ1DayJ_;
    /**
     * <code>optional int64 KDJ1dayJ = 298;</code>
     *
     * <pre>
     * KDJ + 1day + J
     * </pre>
     */
    public boolean hasKDJ1DayJ() {
      return ((bitField6_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 KDJ1dayJ = 298;</code>
     *
     * <pre>
     * KDJ + 1day + J
     * </pre>
     */
    public long getKDJ1DayJ() {
      return kDJ1DayJ_;
    }

    public static final int MACD1MINDIFF_FIELD_NUMBER = 299;
    private long mACD1MinDIFF_;
    /**
     * <code>optional int64 MACD1minDIFF = 299;</code>
     *
     * <pre>
     * MACD
     * </pre>
     */
    public boolean hasMACD1MinDIFF() {
      return ((bitField6_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 MACD1minDIFF = 299;</code>
     *
     * <pre>
     * MACD
     * </pre>
     */
    public long getMACD1MinDIFF() {
      return mACD1MinDIFF_;
    }

    public static final int MACD1MINDEA_FIELD_NUMBER = 300;
    private long mACD1MinDEA_;
    /**
     * <code>optional int64 MACD1minDEA = 300;</code>
     *
     * <pre>
     * MACD + 1min + DEA
     * </pre>
     */
    public boolean hasMACD1MinDEA() {
      return ((bitField6_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 MACD1minDEA = 300;</code>
     *
     * <pre>
     * MACD + 1min + DEA
     * </pre>
     */
    public long getMACD1MinDEA() {
      return mACD1MinDEA_;
    }

    public static final int MACD1MINMACD_FIELD_NUMBER = 301;
    private long mACD1MinMACD_;
    /**
     * <code>optional int64 MACD1minMACD = 301;</code>
     *
     * <pre>
     * MACD + 1min + MACD
     * </pre>
     */
    public boolean hasMACD1MinMACD() {
      return ((bitField6_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 MACD1minMACD = 301;</code>
     *
     * <pre>
     * MACD + 1min + MACD
     * </pre>
     */
    public long getMACD1MinMACD() {
      return mACD1MinMACD_;
    }

    public static final int MACD5MINDIFF_FIELD_NUMBER = 302;
    private long mACD5MinDIFF_;
    /**
     * <code>optional int64 MACD5minDIFF = 302;</code>
     *
     * <pre>
     * MACD + 5min + DIFF
     * </pre>
     */
    public boolean hasMACD5MinDIFF() {
      return ((bitField6_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 MACD5minDIFF = 302;</code>
     *
     * <pre>
     * MACD + 5min + DIFF
     * </pre>
     */
    public long getMACD5MinDIFF() {
      return mACD5MinDIFF_;
    }

    public static final int MACD5MINDEA_FIELD_NUMBER = 303;
    private long mACD5MinDEA_;
    /**
     * <code>optional int64 MACD5minDEA = 303;</code>
     *
     * <pre>
     * MACD + 5min + DEA
     * </pre>
     */
    public boolean hasMACD5MinDEA() {
      return ((bitField6_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 MACD5minDEA = 303;</code>
     *
     * <pre>
     * MACD + 5min + DEA
     * </pre>
     */
    public long getMACD5MinDEA() {
      return mACD5MinDEA_;
    }

    public static final int MACD5MINMACD_FIELD_NUMBER = 304;
    private long mACD5MinMACD_;
    /**
     * <code>optional int64 MACD5minMACD = 304;</code>
     *
     * <pre>
     * MACD + 5min + MACD
     * </pre>
     */
    public boolean hasMACD5MinMACD() {
      return ((bitField6_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 MACD5minMACD = 304;</code>
     *
     * <pre>
     * MACD + 5min + MACD
     * </pre>
     */
    public long getMACD5MinMACD() {
      return mACD5MinMACD_;
    }

    public static final int MACD1DAYDIFF_FIELD_NUMBER = 305;
    private long mACD1DayDIFF_;
    /**
     * <code>optional int64 MACD1dayDIFF = 305;</code>
     *
     * <pre>
     * MACD + 1day + DIFF
     * </pre>
     */
    public boolean hasMACD1DayDIFF() {
      return ((bitField6_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 MACD1dayDIFF = 305;</code>
     *
     * <pre>
     * MACD + 1day + DIFF
     * </pre>
     */
    public long getMACD1DayDIFF() {
      return mACD1DayDIFF_;
    }

    public static final int MACD1DAYDEA_FIELD_NUMBER = 306;
    private long mACD1DayDEA_;
    /**
     * <code>optional int64 MACD1dayDEA = 306;</code>
     *
     * <pre>
     * MACD + 1day + DEA
     * </pre>
     */
    public boolean hasMACD1DayDEA() {
      return ((bitField6_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 MACD1dayDEA = 306;</code>
     *
     * <pre>
     * MACD + 1day + DEA
     * </pre>
     */
    public long getMACD1DayDEA() {
      return mACD1DayDEA_;
    }

    public static final int MACD1DAYMACD_FIELD_NUMBER = 307;
    private long mACD1DayMACD_;
    /**
     * <code>optional int64 MACD1dayMACD = 307;</code>
     *
     * <pre>
     * MACD + 1day + MACD
     * </pre>
     */
    public boolean hasMACD1DayMACD() {
      return ((bitField6_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 MACD1dayMACD = 307;</code>
     *
     * <pre>
     * MACD + 1day + MACD
     * </pre>
     */
    public long getMACD1DayMACD() {
      return mACD1DayMACD_;
    }

    public static final int OBV1MIN_FIELD_NUMBER = 308;
    private long oBV1Min_;
    /**
     * <code>optional int64 OBV1min = 308;</code>
     *
     * <pre>
     * OBV
     * </pre>
     */
    public boolean hasOBV1Min() {
      return ((bitField6_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 OBV1min = 308;</code>
     *
     * <pre>
     * OBV
     * </pre>
     */
    public long getOBV1Min() {
      return oBV1Min_;
    }

    public static final int OBV5MIN_FIELD_NUMBER = 309;
    private long oBV5Min_;
    /**
     * <code>optional int64 OBV5min = 309;</code>
     *
     * <pre>
     * OBV + 5min + _
     * </pre>
     */
    public boolean hasOBV5Min() {
      return ((bitField6_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 OBV5min = 309;</code>
     *
     * <pre>
     * OBV + 5min + _
     * </pre>
     */
    public long getOBV5Min() {
      return oBV5Min_;
    }

    public static final int OBV1DAY_FIELD_NUMBER = 310;
    private long oBV1Day_;
    /**
     * <code>optional int64 OBV1day = 310;</code>
     *
     * <pre>
     * OBV + 1day + _
     * </pre>
     */
    public boolean hasOBV1Day() {
      return ((bitField6_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 OBV1day = 310;</code>
     *
     * <pre>
     * OBV + 1day + _
     * </pre>
     */
    public long getOBV1Day() {
      return oBV1Day_;
    }

    public static final int PSY1MIN_FIELD_NUMBER = 311;
    private long pSY1Min_;
    /**
     * <code>optional int64 PSY1min = 311;</code>
     *
     * <pre>
     * PSY
     * </pre>
     */
    public boolean hasPSY1Min() {
      return ((bitField6_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 PSY1min = 311;</code>
     *
     * <pre>
     * PSY
     * </pre>
     */
    public long getPSY1Min() {
      return pSY1Min_;
    }

    public static final int PSY5MIN_FIELD_NUMBER = 312;
    private long pSY5Min_;
    /**
     * <code>optional int64 PSY5min = 312;</code>
     *
     * <pre>
     * PSY + 5min + _
     * </pre>
     */
    public boolean hasPSY5Min() {
      return ((bitField6_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 PSY5min = 312;</code>
     *
     * <pre>
     * PSY + 5min + _
     * </pre>
     */
    public long getPSY5Min() {
      return pSY5Min_;
    }

    public static final int PSY1DAY_FIELD_NUMBER = 313;
    private long pSY1Day_;
    /**
     * <code>optional int64 PSY1day = 313;</code>
     *
     * <pre>
     * PSY + 1day + _
     * </pre>
     */
    public boolean hasPSY1Day() {
      return ((bitField6_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 PSY1day = 313;</code>
     *
     * <pre>
     * PSY + 1day + _
     * </pre>
     */
    public long getPSY1Day() {
      return pSY1Day_;
    }

    public static final int RSI1MINRSI1_FIELD_NUMBER = 314;
    private long rSI1MinRSI1_;
    /**
     * <code>optional int64 RSI1minRSI1 = 314;</code>
     *
     * <pre>
     * RSI
     * </pre>
     */
    public boolean hasRSI1MinRSI1() {
      return ((bitField6_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 RSI1minRSI1 = 314;</code>
     *
     * <pre>
     * RSI
     * </pre>
     */
    public long getRSI1MinRSI1() {
      return rSI1MinRSI1_;
    }

    public static final int RSI1MINRSI2_FIELD_NUMBER = 315;
    private long rSI1MinRSI2_;
    /**
     * <code>optional int64 RSI1minRSI2 = 315;</code>
     *
     * <pre>
     * RSI + 1min + RSI2
     * </pre>
     */
    public boolean hasRSI1MinRSI2() {
      return ((bitField6_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 RSI1minRSI2 = 315;</code>
     *
     * <pre>
     * RSI + 1min + RSI2
     * </pre>
     */
    public long getRSI1MinRSI2() {
      return rSI1MinRSI2_;
    }

    public static final int RSI1MINRSI3_FIELD_NUMBER = 316;
    private long rSI1MinRSI3_;
    /**
     * <code>optional int64 RSI1minRSI3 = 316;</code>
     *
     * <pre>
     * RSI + 1min + RSI3
     * </pre>
     */
    public boolean hasRSI1MinRSI3() {
      return ((bitField6_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 RSI1minRSI3 = 316;</code>
     *
     * <pre>
     * RSI + 1min + RSI3
     * </pre>
     */
    public long getRSI1MinRSI3() {
      return rSI1MinRSI3_;
    }

    public static final int RSI5MINRSI1_FIELD_NUMBER = 317;
    private long rSI5MinRSI1_;
    /**
     * <code>optional int64 RSI5minRSI1 = 317;</code>
     *
     * <pre>
     * RSI + 5min + RSI1
     * </pre>
     */
    public boolean hasRSI5MinRSI1() {
      return ((bitField6_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 RSI5minRSI1 = 317;</code>
     *
     * <pre>
     * RSI + 5min + RSI1
     * </pre>
     */
    public long getRSI5MinRSI1() {
      return rSI5MinRSI1_;
    }

    public static final int RSI5MINRSI2_FIELD_NUMBER = 318;
    private long rSI5MinRSI2_;
    /**
     * <code>optional int64 RSI5minRSI2 = 318;</code>
     *
     * <pre>
     * RSI + 5min + RSI2
     * </pre>
     */
    public boolean hasRSI5MinRSI2() {
      return ((bitField6_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 RSI5minRSI2 = 318;</code>
     *
     * <pre>
     * RSI + 5min + RSI2
     * </pre>
     */
    public long getRSI5MinRSI2() {
      return rSI5MinRSI2_;
    }

    public static final int RSI5MINRSI3_FIELD_NUMBER = 319;
    private long rSI5MinRSI3_;
    /**
     * <code>optional int64 RSI5minRSI3 = 319;</code>
     *
     * <pre>
     * RSI + 5min + RSI3
     * </pre>
     */
    public boolean hasRSI5MinRSI3() {
      return ((bitField6_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 RSI5minRSI3 = 319;</code>
     *
     * <pre>
     * RSI + 5min + RSI3
     * </pre>
     */
    public long getRSI5MinRSI3() {
      return rSI5MinRSI3_;
    }

    public static final int RSI1DAYRSI1_FIELD_NUMBER = 320;
    private long rSI1DayRSI1_;
    /**
     * <code>optional int64 RSI1dayRSI1 = 320;</code>
     *
     * <pre>
     * RSI + 1day + RSI1
     * </pre>
     */
    public boolean hasRSI1DayRSI1() {
      return ((bitField6_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 RSI1dayRSI1 = 320;</code>
     *
     * <pre>
     * RSI + 1day + RSI1
     * </pre>
     */
    public long getRSI1DayRSI1() {
      return rSI1DayRSI1_;
    }

    public static final int RSI1DAYRSI2_FIELD_NUMBER = 321;
    private long rSI1DayRSI2_;
    /**
     * <code>optional int64 RSI1dayRSI2 = 321;</code>
     *
     * <pre>
     * RSI + 1day + RSI2
     * </pre>
     */
    public boolean hasRSI1DayRSI2() {
      return ((bitField6_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 RSI1dayRSI2 = 321;</code>
     *
     * <pre>
     * RSI + 1day + RSI2
     * </pre>
     */
    public long getRSI1DayRSI2() {
      return rSI1DayRSI2_;
    }

    public static final int RSI1DAYRSI3_FIELD_NUMBER = 322;
    private long rSI1DayRSI3_;
    /**
     * <code>optional int64 RSI1dayRSI3 = 322;</code>
     *
     * <pre>
     * RSI + 1day + RSI3
     * </pre>
     */
    public boolean hasRSI1DayRSI3() {
      return ((bitField6_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 RSI1dayRSI3 = 322;</code>
     *
     * <pre>
     * RSI + 1day + RSI3
     * </pre>
     */
    public long getRSI1DayRSI3() {
      return rSI1DayRSI3_;
    }

    public static final int WR1MINWR1_FIELD_NUMBER = 323;
    private long wR1MinWR1_;
    /**
     * <code>optional int64 WR1minWR1 = 323;</code>
     *
     * <pre>
     * WR
     * </pre>
     */
    public boolean hasWR1MinWR1() {
      return ((bitField6_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 WR1minWR1 = 323;</code>
     *
     * <pre>
     * WR
     * </pre>
     */
    public long getWR1MinWR1() {
      return wR1MinWR1_;
    }

    public static final int WR1MINWR2_FIELD_NUMBER = 324;
    private long wR1MinWR2_;
    /**
     * <code>optional int64 WR1minWR2 = 324;</code>
     *
     * <pre>
     * WR + 1min + WR2
     * </pre>
     */
    public boolean hasWR1MinWR2() {
      return ((bitField6_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 WR1minWR2 = 324;</code>
     *
     * <pre>
     * WR + 1min + WR2
     * </pre>
     */
    public long getWR1MinWR2() {
      return wR1MinWR2_;
    }

    public static final int WR5MINWR1_FIELD_NUMBER = 325;
    private long wR5MinWR1_;
    /**
     * <code>optional int64 WR5minWR1 = 325;</code>
     *
     * <pre>
     * WR + 5min + WR1
     * </pre>
     */
    public boolean hasWR5MinWR1() {
      return ((bitField7_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 WR5minWR1 = 325;</code>
     *
     * <pre>
     * WR + 5min + WR1
     * </pre>
     */
    public long getWR5MinWR1() {
      return wR5MinWR1_;
    }

    public static final int WR5MINWR2_FIELD_NUMBER = 326;
    private long wR5MinWR2_;
    /**
     * <code>optional int64 WR5minWR2 = 326;</code>
     *
     * <pre>
     * WR + 5min + WR2
     * </pre>
     */
    public boolean hasWR5MinWR2() {
      return ((bitField7_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 WR5minWR2 = 326;</code>
     *
     * <pre>
     * WR + 5min + WR2
     * </pre>
     */
    public long getWR5MinWR2() {
      return wR5MinWR2_;
    }

    public static final int WR1DAYWR1_FIELD_NUMBER = 327;
    private long wR1DayWR1_;
    /**
     * <code>optional int64 WR1dayWR1 = 327;</code>
     *
     * <pre>
     * WR + 1day + WR1
     * </pre>
     */
    public boolean hasWR1DayWR1() {
      return ((bitField7_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 WR1dayWR1 = 327;</code>
     *
     * <pre>
     * WR + 1day + WR1
     * </pre>
     */
    public long getWR1DayWR1() {
      return wR1DayWR1_;
    }

    public static final int WR1DAYWR2_FIELD_NUMBER = 328;
    private long wR1DayWR2_;
    /**
     * <code>optional int64 WR1dayWR2 = 328;</code>
     *
     * <pre>
     * WR + 1day + WR2
     * </pre>
     */
    public boolean hasWR1DayWR2() {
      return ((bitField7_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 WR1dayWR2 = 328;</code>
     *
     * <pre>
     * WR + 1day + WR2
     * </pre>
     */
    public long getWR1DayWR2() {
      return wR1DayWR2_;
    }

    public static final int LEIXING_FIELD_NUMBER = 400;
    private long leiXing_;
    /**
     * <code>optional int64 LeiXing = 400;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    public boolean hasLeiXing() {
      return ((bitField7_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 LeiXing = 400;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    public long getLeiXing() {
      return leiXing_;
    }

    public static final int ZILEIXING_FIELD_NUMBER = 401;
    private long ziLeiXing_;
    /**
     * <code>optional int64 ZiLeiXing = 401;</code>
     *
     * <pre>
     * 子类型
     * </pre>
     */
    public boolean hasZiLeiXing() {
      return ((bitField7_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 ZiLeiXing = 401;</code>
     *
     * <pre>
     * 子类型
     * </pre>
     */
    public long getZiLeiXing() {
      return ziLeiXing_;
    }

    public static final int LEIXINGMINGCHENG_FIELD_NUMBER = 402;
    private java.lang.Object leiXingMingCheng_;
    /**
     * <code>optional string LeiXingMingCheng = 402;</code>
     *
     * <pre>
     * 类型名称
     * </pre>
     */
    public boolean hasLeiXingMingCheng() {
      return ((bitField7_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string LeiXingMingCheng = 402;</code>
     *
     * <pre>
     * 类型名称
     * </pre>
     */
    public java.lang.String getLeiXingMingCheng() {
      java.lang.Object ref = leiXingMingCheng_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          leiXingMingCheng_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string LeiXingMingCheng = 402;</code>
     *
     * <pre>
     * 类型名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLeiXingMingChengBytes() {
      java.lang.Object ref = leiXingMingCheng_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        leiXingMingCheng_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHENGJIAOLIANGDANWEI_FIELD_NUMBER = 403;
    private long chengJiaoLiangDanWei_;
    /**
     * <code>optional int64 ChengJiaoLiangDanWei = 403;</code>
     *
     * <pre>
     * 成交量单位
     * </pre>
     */
    public boolean hasChengJiaoLiangDanWei() {
      return ((bitField7_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 ChengJiaoLiangDanWei = 403;</code>
     *
     * <pre>
     * 成交量单位
     * </pre>
     */
    public long getChengJiaoLiangDanWei() {
      return chengJiaoLiangDanWei_;
    }

    public static final int FJJJLEIXING_FIELD_NUMBER = 501;
    private long fJJJLeiXing_;
    /**
     * <code>optional int64 FJJJLeiXing = 501;</code>
     *
     * <pre>
     * 分级基金
     * </pre>
     */
    public boolean hasFJJJLeiXing() {
      return ((bitField7_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 FJJJLeiXing = 501;</code>
     *
     * <pre>
     * 分级基金
     * </pre>
     */
    public long getFJJJLeiXing() {
      return fJJJLeiXing_;
    }

    public static final int ZHENGTIYIJIA_FIELD_NUMBER = 502;
    private long zhengTiYiJia_;
    /**
     * <code>optional int64 ZhengTiYiJia = 502;</code>
     *
     * <pre>
     * 整体溢价
     * </pre>
     */
    public boolean hasZhengTiYiJia() {
      return ((bitField7_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 ZhengTiYiJia = 502;</code>
     *
     * <pre>
     * 整体溢价
     * </pre>
     */
    public long getZhengTiYiJia() {
      return zhengTiYiJia_;
    }

    public static final int MYIJIA_FIELD_NUMBER = 551;
    private long mYiJia_;
    /**
     * <code>optional int64 MYiJia = 551;</code>
     *
     * <pre>
     *母基金溢价
     * </pre>
     */
    public boolean hasMYiJia() {
      return ((bitField7_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 MYiJia = 551;</code>
     *
     * <pre>
     *母基金溢价
     * </pre>
     */
    public long getMYiJia() {
      return mYiJia_;
    }

    public static final int MSHISHIJINGZHI_FIELD_NUMBER = 552;
    private long mShiShiJingZhi_;
    /**
     * <code>optional int64 MShiShiJingZhi = 552;</code>
     *
     * <pre>
     * 母基金实时净值
     * </pre>
     */
    public boolean hasMShiShiJingZhi() {
      return ((bitField7_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 MShiShiJingZhi = 552;</code>
     *
     * <pre>
     * 母基金实时净值
     * </pre>
     */
    public long getMShiShiJingZhi() {
      return mShiShiJingZhi_;
    }

    public static final int MSHANGZHEXUZHANG_FIELD_NUMBER = 553;
    private long mShangZheXuZhang_;
    /**
     * <code>optional int64 MShangZheXuZhang = 553;</code>
     *
     * <pre>
     * 上折母基需涨
     * </pre>
     */
    public boolean hasMShangZheXuZhang() {
      return ((bitField7_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 MShangZheXuZhang = 553;</code>
     *
     * <pre>
     * 上折母基需涨
     * </pre>
     */
    public long getMShangZheXuZhang() {
      return mShangZheXuZhang_;
    }

    public static final int MXIAZHEXUDIE_FIELD_NUMBER = 554;
    private long mXiaZheXuDie_;
    /**
     * <code>optional int64 MXiaZheXuDie = 554;</code>
     *
     * <pre>
     * 下折母基需跌
     * </pre>
     */
    public boolean hasMXiaZheXuDie() {
      return ((bitField7_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 MXiaZheXuDie = 554;</code>
     *
     * <pre>
     * 下折母基需跌
     * </pre>
     */
    public long getMXiaZheXuDie() {
      return mXiaZheXuDie_;
    }

    public static final int YINHANSHOUYI_FIELD_NUMBER = 511;
    private long yinHanShouYi_;
    /**
     * <code>optional int64 YinHanShouYi = 511;</code>
     *
     * <pre>
     * 隐含收益，仅A基金
     * </pre>
     */
    public boolean hasYinHanShouYi() {
      return ((bitField7_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 YinHanShouYi = 511;</code>
     *
     * <pre>
     * 隐含收益，仅A基金
     * </pre>
     */
    public long getYinHanShouYi() {
      return yinHanShouYi_;
    }

    public static final int JIAGEGANGGAN_FIELD_NUMBER = 512;
    private long jiaGeGangGan_;
    /**
     * <code>optional int64 JiaGeGangGan = 512;</code>
     *
     * <pre>
     * 价格杠杆，仅B基金
     * </pre>
     */
    public boolean hasJiaGeGangGan() {
      return ((bitField7_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 JiaGeGangGan = 512;</code>
     *
     * <pre>
     * 价格杠杆，仅B基金
     * </pre>
     */
    public long getJiaGeGangGan() {
      return jiaGeGangGan_;
    }

    public static final int PINZHONGOBJ_FIELD_NUMBER = 601;
    private java.lang.Object pinZhongObj_;
    /**
     * <code>optional string PinZhongObj = 601;</code>
     *
     * <pre>
     *财务数据
     * </pre>
     */
    public boolean hasPinZhongObj() {
      return ((bitField7_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string PinZhongObj = 601;</code>
     *
     * <pre>
     *财务数据
     * </pre>
     */
    public java.lang.String getPinZhongObj() {
      java.lang.Object ref = pinZhongObj_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pinZhongObj_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string PinZhongObj = 601;</code>
     *
     * <pre>
     *财务数据
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPinZhongObjBytes() {
      java.lang.Object ref = pinZhongObj_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pinZhongObj_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BAOGAOQI_FIELD_NUMBER = 602;
    private java.lang.Object baoGaoQi_;
    /**
     * <code>optional string BaoGaoQi = 602;</code>
     *
     * <pre>
     * 报告期YYYYMMDDttmmss EndDate
     * </pre>
     */
    public boolean hasBaoGaoQi() {
      return ((bitField7_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string BaoGaoQi = 602;</code>
     *
     * <pre>
     * 报告期YYYYMMDDttmmss EndDate
     * </pre>
     */
    public java.lang.String getBaoGaoQi() {
      java.lang.Object ref = baoGaoQi_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          baoGaoQi_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string BaoGaoQi = 602;</code>
     *
     * <pre>
     * 报告期YYYYMMDDttmmss EndDate
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBaoGaoQiBytes() {
      java.lang.Object ref = baoGaoQi_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        baoGaoQi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHANGSHIRIQI_FIELD_NUMBER = 603;
    private java.lang.Object shangShiRiQi_;
    /**
     * <code>optional string ShangShiRiQi = 603;</code>
     *
     * <pre>
     * 上市日期YYYYMMDDttmmss C35
     * </pre>
     */
    public boolean hasShangShiRiQi() {
      return ((bitField7_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string ShangShiRiQi = 603;</code>
     *
     * <pre>
     * 上市日期YYYYMMDDttmmss C35
     * </pre>
     */
    public java.lang.String getShangShiRiQi() {
      java.lang.Object ref = shangShiRiQi_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shangShiRiQi_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ShangShiRiQi = 603;</code>
     *
     * <pre>
     * 上市日期YYYYMMDDttmmss C35
     * </pre>
     */
    public com.google.protobuf.ByteString
        getShangShiRiQiBytes() {
      java.lang.Object ref = shangShiRiQi_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shangShiRiQi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MEIGUSHOUYI_FIELD_NUMBER = 604;
    private long meiGuShouYi_;
    /**
     * <code>optional int64 MeiGuShouYi = 604;</code>
     *
     * <pre>
     * 每股收益 C3   
     * </pre>
     */
    public boolean hasMeiGuShouYi() {
      return ((bitField7_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 MeiGuShouYi = 604;</code>
     *
     * <pre>
     * 每股收益 C3   
     * </pre>
     */
    public long getMeiGuShouYi() {
      return meiGuShouYi_;
    }

    public static final int MEIGUJINGZICHAN_FIELD_NUMBER = 605;
    private long meiGuJingZiChan_;
    /**
     * <code>optional int64 MeiGuJingZiChan = 605;</code>
     *
     * <pre>
     * 每股净资产 C4
     * </pre>
     */
    public boolean hasMeiGuJingZiChan() {
      return ((bitField7_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 MeiGuJingZiChan = 605;</code>
     *
     * <pre>
     * 每股净资产 C4
     * </pre>
     */
    public long getMeiGuJingZiChan() {
      return meiGuJingZiChan_;
    }

    public static final int JINGZICHANSHOUYILV_FIELD_NUMBER = 606;
    private long jingZiChanShouYiLv_;
    /**
     * <code>optional int64 JingZiChanShouYiLv = 606;</code>
     *
     * <pre>
     * 净资产收益率 C5
     * </pre>
     */
    public boolean hasJingZiChanShouYiLv() {
      return ((bitField7_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 JingZiChanShouYiLv = 606;</code>
     *
     * <pre>
     * 净资产收益率 C5
     * </pre>
     */
    public long getJingZiChanShouYiLv() {
      return jingZiChanShouYiLv_;
    }

    public static final int MEIGUJINGYINGXIANJIN_FIELD_NUMBER = 607;
    private long meiGuJingYingXianJin_;
    /**
     * <code>optional int64 MeiGuJingYingXianJin = 607;</code>
     *
     * <pre>
     * 每股经营现金 C6
     * </pre>
     */
    public boolean hasMeiGuJingYingXianJin() {
      return ((bitField7_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 MeiGuJingYingXianJin = 607;</code>
     *
     * <pre>
     * 每股经营现金 C6
     * </pre>
     */
    public long getMeiGuJingYingXianJin() {
      return meiGuJingYingXianJin_;
    }

    public static final int MEIGUGONGJIJIN_FIELD_NUMBER = 608;
    private long meiGuGongJiJin_;
    /**
     * <code>optional int64 MeiGuGongJiJin = 608;</code>
     *
     * <pre>
     * 每股公积金 C7
     * </pre>
     */
    public boolean hasMeiGuGongJiJin() {
      return ((bitField7_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 MeiGuGongJiJin = 608;</code>
     *
     * <pre>
     * 每股公积金 C7
     * </pre>
     */
    public long getMeiGuGongJiJin() {
      return meiGuGongJiJin_;
    }

    public static final int MEIGUWEIFENPEI_FIELD_NUMBER = 609;
    private long meiGuWeiFenPei_;
    /**
     * <code>optional int64 MeiGuWeiFenPei = 609;</code>
     *
     * <pre>
     * 每股未分配 C8   
     * </pre>
     */
    public boolean hasMeiGuWeiFenPei() {
      return ((bitField7_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 MeiGuWeiFenPei = 609;</code>
     *
     * <pre>
     * 每股未分配 C8   
     * </pre>
     */
    public long getMeiGuWeiFenPei() {
      return meiGuWeiFenPei_;
    }

    public static final int GUDONGQUANYIBI_FIELD_NUMBER = 610;
    private long guDongQuanYiBi_;
    /**
     * <code>optional int64 GuDongQuanYiBi = 610;</code>
     *
     * <pre>
     * 股东权益比 C9
     * </pre>
     */
    public boolean hasGuDongQuanYiBi() {
      return ((bitField7_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 GuDongQuanYiBi = 610;</code>
     *
     * <pre>
     * 股东权益比 C9
     * </pre>
     */
    public long getGuDongQuanYiBi() {
      return guDongQuanYiBi_;
    }

    public static final int JINGLIRUNTONGBI_FIELD_NUMBER = 611;
    private long jingLiRunTongBi_;
    /**
     * <code>optional int64 JingLiRunTongBi = 611;</code>
     *
     * <pre>
     * 净利润同比 C10  
     * </pre>
     */
    public boolean hasJingLiRunTongBi() {
      return ((bitField7_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 JingLiRunTongBi = 611;</code>
     *
     * <pre>
     * 净利润同比 C10  
     * </pre>
     */
    public long getJingLiRunTongBi() {
      return jingLiRunTongBi_;
    }

    public static final int ZHUYINGSHOURUTONGBI_FIELD_NUMBER = 612;
    private long zhuYingShouRuTongBi_;
    /**
     * <code>optional int64 ZhuYingShouRuTongBi = 612;</code>
     *
     * <pre>
     * 主营收入同比 C11  
     * </pre>
     */
    public boolean hasZhuYingShouRuTongBi() {
      return ((bitField7_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 ZhuYingShouRuTongBi = 612;</code>
     *
     * <pre>
     * 主营收入同比 C11  
     * </pre>
     */
    public long getZhuYingShouRuTongBi() {
      return zhuYingShouRuTongBi_;
    }

    public static final int XIAOSHOUMAOLILV_FIELD_NUMBER = 613;
    private long xiaoShouMaoLiLv_;
    /**
     * <code>optional int64 XiaoShouMaoLiLv = 613;</code>
     *
     * <pre>
     * 销售毛利率 C12
     * </pre>
     */
    public boolean hasXiaoShouMaoLiLv() {
      return ((bitField7_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 XiaoShouMaoLiLv = 613;</code>
     *
     * <pre>
     * 销售毛利率 C12
     * </pre>
     */
    public long getXiaoShouMaoLiLv() {
      return xiaoShouMaoLiLv_;
    }

    public static final int TIAOZHENGMEIGUJINGZI_FIELD_NUMBER = 614;
    private long tiaoZhengMeiGuJingZi_;
    /**
     * <code>optional int64 TiaoZhengMeiGuJingZi = 614;</code>
     *
     * <pre>
     * 调整每股净资 C13 
     * </pre>
     */
    public boolean hasTiaoZhengMeiGuJingZi() {
      return ((bitField7_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 TiaoZhengMeiGuJingZi = 614;</code>
     *
     * <pre>
     * 调整每股净资 C13 
     * </pre>
     */
    public long getTiaoZhengMeiGuJingZi() {
      return tiaoZhengMeiGuJingZi_;
    }

    public static final int ZONGZICHAN_FIELD_NUMBER = 615;
    private long zongZiChan_;
    /**
     * <code>optional int64 ZongZiChan = 615;</code>
     *
     * <pre>
     * 总资产 C14   
     * </pre>
     */
    public boolean hasZongZiChan() {
      return ((bitField7_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 ZongZiChan = 615;</code>
     *
     * <pre>
     * 总资产 C14   
     * </pre>
     */
    public long getZongZiChan() {
      return zongZiChan_;
    }

    public static final int LIUDONGZICHAN_FIELD_NUMBER = 616;
    private long liuDongZiChan_;
    /**
     * <code>optional int64 LiuDongZiChan = 616;</code>
     *
     * <pre>
     * 流动资产 C15
     * </pre>
     */
    public boolean hasLiuDongZiChan() {
      return ((bitField7_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 LiuDongZiChan = 616;</code>
     *
     * <pre>
     * 流动资产 C15
     * </pre>
     */
    public long getLiuDongZiChan() {
      return liuDongZiChan_;
    }

    public static final int GUDINGZICHAN_FIELD_NUMBER = 617;
    private long guDingZiChan_;
    /**
     * <code>optional int64 GuDingZiChan = 617;</code>
     *
     * <pre>
     * 固定资产 C16
     * </pre>
     */
    public boolean hasGuDingZiChan() {
      return ((bitField8_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 GuDingZiChan = 617;</code>
     *
     * <pre>
     * 固定资产 C16
     * </pre>
     */
    public long getGuDingZiChan() {
      return guDingZiChan_;
    }

    public static final int WUXINGZICHAN_FIELD_NUMBER = 618;
    private long wuXingZiChan_;
    /**
     * <code>optional int64 WuXingZiChan = 618;</code>
     *
     * <pre>
     * 无形资产 C17   
     * </pre>
     */
    public boolean hasWuXingZiChan() {
      return ((bitField8_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 WuXingZiChan = 618;</code>
     *
     * <pre>
     * 无形资产 C17   
     * </pre>
     */
    public long getWuXingZiChan() {
      return wuXingZiChan_;
    }

    public static final int LIUDONGFUZHAI_FIELD_NUMBER = 619;
    private long liuDongFuZhai_;
    /**
     * <code>optional int64 LiuDongFuZhai = 619;</code>
     *
     * <pre>
     * 流动负债 C18
     * </pre>
     */
    public boolean hasLiuDongFuZhai() {
      return ((bitField8_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 LiuDongFuZhai = 619;</code>
     *
     * <pre>
     * 流动负债 C18
     * </pre>
     */
    public long getLiuDongFuZhai() {
      return liuDongFuZhai_;
    }

    public static final int CHANGQIFUZHAI_FIELD_NUMBER = 620;
    private long changQiFuZhai_;
    /**
     * <code>optional int64 ChangQiFuZhai = 620;</code>
     *
     * <pre>
     * 长期负债 C19
     * </pre>
     */
    public boolean hasChangQiFuZhai() {
      return ((bitField8_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 ChangQiFuZhai = 620;</code>
     *
     * <pre>
     * 长期负债 C19
     * </pre>
     */
    public long getChangQiFuZhai() {
      return changQiFuZhai_;
    }

    public static final int ZONGFUZHAI_FIELD_NUMBER = 621;
    private long zongFuZhai_;
    /**
     * <code>optional int64 ZongFuZhai = 621;</code>
     *
     * <pre>
     * 总负债 C20
     * </pre>
     */
    public boolean hasZongFuZhai() {
      return ((bitField8_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 ZongFuZhai = 621;</code>
     *
     * <pre>
     * 总负债 C20
     * </pre>
     */
    public long getZongFuZhai() {
      return zongFuZhai_;
    }

    public static final int GUDONGQUANYI_FIELD_NUMBER = 622;
    private long guDongQuanYi_;
    /**
     * <code>optional int64 GuDongQuanYi = 622;</code>
     *
     * <pre>
     * 股东权益 C21
     * </pre>
     */
    public boolean hasGuDongQuanYi() {
      return ((bitField8_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 GuDongQuanYi = 622;</code>
     *
     * <pre>
     * 股东权益 C21
     * </pre>
     */
    public long getGuDongQuanYi() {
      return guDongQuanYi_;
    }

    public static final int ZIBENGONGJIJIN_FIELD_NUMBER = 623;
    private long ziBenGongJiJin_;
    /**
     * <code>optional int64 ZiBenGongJiJin = 623;</code>
     *
     * <pre>
     * 资本公积金 C22
     * </pre>
     */
    public boolean hasZiBenGongJiJin() {
      return ((bitField8_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 ZiBenGongJiJin = 623;</code>
     *
     * <pre>
     * 资本公积金 C22
     * </pre>
     */
    public long getZiBenGongJiJin() {
      return ziBenGongJiJin_;
    }

    public static final int JINGYINGXIANJINLIULIANG_FIELD_NUMBER = 624;
    private long jingYingXianJinLiuLiang_;
    /**
     * <code>optional int64 JingYingXianJinLiuLiang = 624;</code>
     *
     * <pre>
     * 经营现金流量 C23
     * </pre>
     */
    public boolean hasJingYingXianJinLiuLiang() {
      return ((bitField8_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 JingYingXianJinLiuLiang = 624;</code>
     *
     * <pre>
     * 经营现金流量 C23
     * </pre>
     */
    public long getJingYingXianJinLiuLiang() {
      return jingYingXianJinLiuLiang_;
    }

    public static final int TOUZIXIANJINLIULIANG_FIELD_NUMBER = 625;
    private long touZiXianJinLiuLiang_;
    /**
     * <code>optional int64 TouZiXianJinLiuLiang = 625;</code>
     *
     * <pre>
     * 投资现金流量 C24
     * </pre>
     */
    public boolean hasTouZiXianJinLiuLiang() {
      return ((bitField8_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 TouZiXianJinLiuLiang = 625;</code>
     *
     * <pre>
     * 投资现金流量 C24
     * </pre>
     */
    public long getTouZiXianJinLiuLiang() {
      return touZiXianJinLiuLiang_;
    }

    public static final int CHOUZIXIANJINLIULIANG_FIELD_NUMBER = 626;
    private long chouZiXianJinLiuLiang_;
    /**
     * <code>optional int64 ChouZiXianJinLiuLiang = 626;</code>
     *
     * <pre>
     * 筹资现金流量 C25
     * </pre>
     */
    public boolean hasChouZiXianJinLiuLiang() {
      return ((bitField8_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 ChouZiXianJinLiuLiang = 626;</code>
     *
     * <pre>
     * 筹资现金流量 C25
     * </pre>
     */
    public long getChouZiXianJinLiuLiang() {
      return chouZiXianJinLiuLiang_;
    }

    public static final int XIANJINZENGJIAE_FIELD_NUMBER = 627;
    private long xianJinZengJiaE_;
    /**
     * <code>optional int64 XianJinZengJiaE = 627;</code>
     *
     * <pre>
     * 现金增加额 C26 
     * </pre>
     */
    public boolean hasXianJinZengJiaE() {
      return ((bitField8_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 XianJinZengJiaE = 627;</code>
     *
     * <pre>
     * 现金增加额 C26 
     * </pre>
     */
    public long getXianJinZengJiaE() {
      return xianJinZengJiaE_;
    }

    public static final int ZHUYINGSHOURU_FIELD_NUMBER = 628;
    private long zhuYingShouRu_;
    /**
     * <code>optional int64 ZhuYingShouRu = 628;</code>
     *
     * <pre>
     * 主营收入 C27 
     * </pre>
     */
    public boolean hasZhuYingShouRu() {
      return ((bitField8_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 ZhuYingShouRu = 628;</code>
     *
     * <pre>
     * 主营收入 C27 
     * </pre>
     */
    public long getZhuYingShouRu() {
      return zhuYingShouRu_;
    }

    public static final int ZHUYINGLIRUN_FIELD_NUMBER = 629;
    private long zhuYingLiRun_;
    /**
     * <code>optional int64 ZhuYingLiRun = 629;</code>
     *
     * <pre>
     * 主营利润 C28
     * </pre>
     */
    public boolean hasZhuYingLiRun() {
      return ((bitField8_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 ZhuYingLiRun = 629;</code>
     *
     * <pre>
     * 主营利润 C28
     * </pre>
     */
    public long getZhuYingLiRun() {
      return zhuYingLiRun_;
    }

    public static final int YINGYELIRUN_FIELD_NUMBER = 630;
    private long yingYeLiRun_;
    /**
     * <code>optional int64 YingYeLiRun = 630;</code>
     *
     * <pre>
     * 营业利润 C29
     * </pre>
     */
    public boolean hasYingYeLiRun() {
      return ((bitField8_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 YingYeLiRun = 630;</code>
     *
     * <pre>
     * 营业利润 C29
     * </pre>
     */
    public long getYingYeLiRun() {
      return yingYeLiRun_;
    }

    public static final int TOUZISHOUYI_FIELD_NUMBER = 631;
    private long touZiShouYi_;
    /**
     * <code>optional int64 TouZiShouYi = 631;</code>
     *
     * <pre>
     * 投资收益 C30
     * </pre>
     */
    public boolean hasTouZiShouYi() {
      return ((bitField8_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 TouZiShouYi = 631;</code>
     *
     * <pre>
     * 投资收益 C30
     * </pre>
     */
    public long getTouZiShouYi() {
      return touZiShouYi_;
    }

    public static final int YINGYEWAISHOUZHI_FIELD_NUMBER = 632;
    private long yingYeWaiShouZhi_;
    /**
     * <code>optional int64 YingYeWaiShouZhi = 632;</code>
     *
     * <pre>
     * 营业外收支 C31
     * </pre>
     */
    public boolean hasYingYeWaiShouZhi() {
      return ((bitField8_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 YingYeWaiShouZhi = 632;</code>
     *
     * <pre>
     * 营业外收支 C31
     * </pre>
     */
    public long getYingYeWaiShouZhi() {
      return yingYeWaiShouZhi_;
    }

    public static final int LIRUNZONGE_FIELD_NUMBER = 633;
    private long liRunZongE_;
    /**
     * <code>optional int64 LiRunZongE = 633;</code>
     *
     * <pre>
     * 利润总额 C32
     * </pre>
     */
    public boolean hasLiRunZongE() {
      return ((bitField8_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 LiRunZongE = 633;</code>
     *
     * <pre>
     * 利润总额 C32
     * </pre>
     */
    public long getLiRunZongE() {
      return liRunZongE_;
    }

    public static final int JINGLIRUN_FIELD_NUMBER = 634;
    private long jingLiRun_;
    /**
     * <code>optional int64 JingLiRun = 634;</code>
     *
     * <pre>
     * 净利润 C33
     * </pre>
     */
    public boolean hasJingLiRun() {
      return ((bitField8_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 JingLiRun = 634;</code>
     *
     * <pre>
     * 净利润 C33
     * </pre>
     */
    public long getJingLiRun() {
      return jingLiRun_;
    }

    public static final int WEIFENPEILIRUN_FIELD_NUMBER = 635;
    private long weiFenPeiLiRun_;
    /**
     * <code>optional int64 WeiFenPeiLiRun = 635;</code>
     *
     * <pre>
     * 未分配利润 C34
     * </pre>
     */
    public boolean hasWeiFenPeiLiRun() {
      return ((bitField8_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 WeiFenPeiLiRun = 635;</code>
     *
     * <pre>
     * 未分配利润 C34
     * </pre>
     */
    public long getWeiFenPeiLiRun() {
      return weiFenPeiLiRun_;
    }

    public static final int ZONGGUBEN_FIELD_NUMBER = 636;
    private long zongGuBen_;
    /**
     * <code>optional int64 ZongGuBen = 636;</code>
     *
     * <pre>
     * 总股本 C1
     * </pre>
     */
    public boolean hasZongGuBen() {
      return ((bitField8_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 ZongGuBen = 636;</code>
     *
     * <pre>
     * 总股本 C1
     * </pre>
     */
    public long getZongGuBen() {
      return zongGuBen_;
    }

    public static final int WUXIANSHOUGUHEJI_FIELD_NUMBER = 637;
    private long wuXianShouGuHeJi_;
    /**
     * <code>optional int64 WuXianShouGuHeJi = 637;</code>
     *
     * <pre>
     * 无限售股合计 C36
     * </pre>
     */
    public boolean hasWuXianShouGuHeJi() {
      return ((bitField8_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 WuXianShouGuHeJi = 637;</code>
     *
     * <pre>
     * 无限售股合计 C36
     * </pre>
     */
    public long getWuXianShouGuHeJi() {
      return wuXianShouGuHeJi_;
    }

    public static final int LIUTONGAGU_FIELD_NUMBER = 638;
    private long liuTongAGu_;
    /**
     * <code>optional int64 LiuTongAGu = 638;</code>
     *
     * <pre>
     * 流通A股 C37
     * </pre>
     */
    public boolean hasLiuTongAGu() {
      return ((bitField8_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int64 LiuTongAGu = 638;</code>
     *
     * <pre>
     * 流通A股 C37
     * </pre>
     */
    public long getLiuTongAGu() {
      return liuTongAGu_;
    }

    public static final int LIUTONGBGU_FIELD_NUMBER = 639;
    private long liuTongBGu_;
    /**
     * <code>optional int64 LiuTongBGu = 639;</code>
     *
     * <pre>
     * 流通B股 C38
     * </pre>
     */
    public boolean hasLiuTongBGu() {
      return ((bitField8_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 LiuTongBGu = 639;</code>
     *
     * <pre>
     * 流通B股 C38
     * </pre>
     */
    public long getLiuTongBGu() {
      return liuTongBGu_;
    }

    public static final int JINGWAISHANGSHIGU_FIELD_NUMBER = 640;
    private long jingWaiShangShiGu_;
    /**
     * <code>optional int64 JingWaiShangShiGu = 640;</code>
     *
     * <pre>
     * 境外上市股 C39
     * </pre>
     */
    public boolean hasJingWaiShangShiGu() {
      return ((bitField8_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 JingWaiShangShiGu = 640;</code>
     *
     * <pre>
     * 境外上市股 C39
     * </pre>
     */
    public long getJingWaiShangShiGu() {
      return jingWaiShangShiGu_;
    }

    public static final int QITALIUTONGGU_FIELD_NUMBER = 641;
    private long qiTaLiuTongGu_;
    /**
     * <code>optional int64 QiTaLiuTongGu = 641;</code>
     *
     * <pre>
     * 其他流通股 C40
     * </pre>
     */
    public boolean hasQiTaLiuTongGu() {
      return ((bitField8_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 QiTaLiuTongGu = 641;</code>
     *
     * <pre>
     * 其他流通股 C40
     * </pre>
     */
    public long getQiTaLiuTongGu() {
      return qiTaLiuTongGu_;
    }

    public static final int XIANSHOUGUHEJI_FIELD_NUMBER = 642;
    private long xianShouGuHeJi_;
    /**
     * <code>optional int64 XianShouGuHeJi = 642;</code>
     *
     * <pre>
     * 限售股合计 C41
     * </pre>
     */
    public boolean hasXianShouGuHeJi() {
      return ((bitField8_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 XianShouGuHeJi = 642;</code>
     *
     * <pre>
     * 限售股合计 C41
     * </pre>
     */
    public long getXianShouGuHeJi() {
      return xianShouGuHeJi_;
    }

    public static final int GUOJIACHIGU_FIELD_NUMBER = 643;
    private long guoJiaChiGu_;
    /**
     * <code>optional int64 GuoJiaChiGu = 643;</code>
     *
     * <pre>
     * 国家持股 C42
     * </pre>
     */
    public boolean hasGuoJiaChiGu() {
      return ((bitField8_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 GuoJiaChiGu = 643;</code>
     *
     * <pre>
     * 国家持股 C42
     * </pre>
     */
    public long getGuoJiaChiGu() {
      return guoJiaChiGu_;
    }

    public static final int GUOYOUFARENGU_FIELD_NUMBER = 644;
    private long guoYouFaRenGu_;
    /**
     * <code>optional int64 GuoYouFaRenGu = 644;</code>
     *
     * <pre>
     * 国有法人股 C43 
     * </pre>
     */
    public boolean hasGuoYouFaRenGu() {
      return ((bitField8_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int64 GuoYouFaRenGu = 644;</code>
     *
     * <pre>
     * 国有法人股 C43 
     * </pre>
     */
    public long getGuoYouFaRenGu() {
      return guoYouFaRenGu_;
    }

    public static final int JINGNEIFARENGU_FIELD_NUMBER = 645;
    private long jingNeiFaRenGu_;
    /**
     * <code>optional int64 JingNeiFaRenGu = 645;</code>
     *
     * <pre>
     * 境内法人股 C44
     * </pre>
     */
    public boolean hasJingNeiFaRenGu() {
      return ((bitField8_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int64 JingNeiFaRenGu = 645;</code>
     *
     * <pre>
     * 境内法人股 C44
     * </pre>
     */
    public long getJingNeiFaRenGu() {
      return jingNeiFaRenGu_;
    }

    public static final int JINGNEIZIRANRENGU_FIELD_NUMBER = 646;
    private long jingNeiZiRanRenGu_;
    /**
     * <code>optional int64 JingNeiZiRanRenGu = 646;</code>
     *
     * <pre>
     * 境内自然人股 C45
     * </pre>
     */
    public boolean hasJingNeiZiRanRenGu() {
      return ((bitField8_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int64 JingNeiZiRanRenGu = 646;</code>
     *
     * <pre>
     * 境内自然人股 C45
     * </pre>
     */
    public long getJingNeiZiRanRenGu() {
      return jingNeiZiRanRenGu_;
    }

    public static final int QITAFAQIRENGU_FIELD_NUMBER = 647;
    private long qiTaFaQiRenGu_;
    /**
     * <code>optional int64 QiTaFaQiRenGu = 647;</code>
     *
     * <pre>
     * 其他发起人股 C46
     * </pre>
     */
    public boolean hasQiTaFaQiRenGu() {
      return ((bitField8_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int64 QiTaFaQiRenGu = 647;</code>
     *
     * <pre>
     * 其他发起人股 C46
     * </pre>
     */
    public long getQiTaFaQiRenGu() {
      return qiTaFaQiRenGu_;
    }

    public static final int MUJIFARENGU_FIELD_NUMBER = 648;
    private long muJiFaRenGu_;
    /**
     * <code>optional int64 MuJiFaRenGu = 648;</code>
     *
     * <pre>
     * 募集法人股 C47
     * </pre>
     */
    public boolean hasMuJiFaRenGu() {
      return ((bitField8_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int64 MuJiFaRenGu = 648;</code>
     *
     * <pre>
     * 募集法人股 C47
     * </pre>
     */
    public long getMuJiFaRenGu() {
      return muJiFaRenGu_;
    }

    public static final int JINGWAIFARENGU_FIELD_NUMBER = 649;
    private long jingWaiFaRenGu_;
    /**
     * <code>optional int64 JingWaiFaRenGu = 649;</code>
     *
     * <pre>
     * 境外法人股 C48
     * </pre>
     */
    public boolean hasJingWaiFaRenGu() {
      return ((bitField9_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 JingWaiFaRenGu = 649;</code>
     *
     * <pre>
     * 境外法人股 C48
     * </pre>
     */
    public long getJingWaiFaRenGu() {
      return jingWaiFaRenGu_;
    }

    public static final int JINGWAIZIRANRENGU_FIELD_NUMBER = 650;
    private long jingWaiZiRanRenGu_;
    /**
     * <code>optional int64 JingWaiZiRanRenGu = 650;</code>
     *
     * <pre>
     * 境外自然人股 C49
     * </pre>
     */
    public boolean hasJingWaiZiRanRenGu() {
      return ((bitField9_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 JingWaiZiRanRenGu = 650;</code>
     *
     * <pre>
     * 境外自然人股 C49
     * </pre>
     */
    public long getJingWaiZiRanRenGu() {
      return jingWaiZiRanRenGu_;
    }

    public static final int YOUXIANGUHUOQITA_FIELD_NUMBER = 651;
    private long youXianGuHuoQiTa_;
    /**
     * <code>optional int64 YouXianGuHuoQiTa = 651;</code>
     *
     * <pre>
     * 优先股或其他 C50    
     * </pre>
     */
    public boolean hasYouXianGuHuoQiTa() {
      return ((bitField9_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 YouXianGuHuoQiTa = 651;</code>
     *
     * <pre>
     * 优先股或其他 C50    
     * </pre>
     */
    public long getYouXianGuHuoQiTa() {
      return youXianGuHuoQiTa_;
    }

    private void initFields() {
      obj_ = "";
      jiaoYiDaiMa_ = "";
      zhongWenJianCheng_ = "";
      zuiXinJia_ = 0L;
      kaiPanJia_ = 0L;
      zuiGaoJia_ = 0L;
      zuiDiJia_ = 0L;
      zuoShou_ = 0L;
      junJia_ = 0L;
      zhangDie_ = 0L;
      zhangFu_ = 0L;
      zhenFu_ = 0L;
      chengJiaoLiang_ = 0L;
      xianShou_ = 0L;
      chengJiaoE_ = 0L;
      zongChengJiaoBiShu_ = 0L;
      meiBiChengJiaoGuShu_ = 0L;
      huanShou_ = 0L;
      liangBi_ = 0L;
      neiPan_ = 0L;
      waiPan_ = 0L;
      zongMaiRu_ = 0L;
      zongMaiChu_ = 0L;
      zongMaiRuJunJia_ = 0L;
      zongMaiChuJunJia_ = 0L;
      weiTuoMaiRuJia1_ = 0L;
      weiTuoMaiRuJia2_ = 0L;
      weiTuoMaiRuJia3_ = 0L;
      weiTuoMaiRuJia4_ = 0L;
      weiTuoMaiRuJia5_ = 0L;
      weiTuoMaiRuLiang1_ = 0L;
      weiTuoMaiRuLiang2_ = 0L;
      weiTuoMaiRuLiang3_ = 0L;
      weiTuoMaiRuLiang4_ = 0L;
      weiTuoMaiRuLiang5_ = 0L;
      weiTuoMaiChuJia1_ = 0L;
      weiTuoMaiChuJia2_ = 0L;
      weiTuoMaiChuJia3_ = 0L;
      weiTuoMaiChuJia4_ = 0L;
      weiTuoMaiChuJia5_ = 0L;
      weiTuoMaiChuLiang1_ = 0L;
      weiTuoMaiChuLiang2_ = 0L;
      weiTuoMaiChuLiang3_ = 0L;
      weiTuoMaiChuLiang4_ = 0L;
      weiTuoMaiChuLiang5_ = 0L;
      weiBi_ = 0L;
      weiCha_ = 0L;
      zhangSu_ = 0L;
      junLiang5Ri_ = 0L;
      shangZhangJiaShu_ = 0L;
      xiaDieJiaShu_ = 0L;
      pingPanJiaShu_ = 0L;
      aGuShangZhangJiaShu_ = 0L;
      aGuXiaDieJiaShu_ = 0L;
      aGuPingPanJiaShu_ = 0L;
      aGuChengJiaoE_ = 0L;
      bGuShangZhangJiaShu_ = 0L;
      bGuXiaDieJiaShu_ = 0L;
      bGuPingPanJiaShu_ = 0L;
      bGuChengJiaoE_ = 0L;
      jiJinShangZhangJiaShu_ = 0L;
      jiJinXiaDieJiaShu_ = 0L;
      jiJinPingPanJiaShu_ = 0L;
      jiJinChengJiaoE_ = 0L;
      qiTaShangZhangJiaShu_ = 0L;
      qiTaXiaDieJiaShu_ = 0L;
      qiTaPingPanJiaShu_ = 0L;
      qiTaChengJiaoE_ = 0L;
      maiRuDanShu_ = 0L;
      maiChuDanShu_ = 0L;
      maiRuZhongDanBiLi_ = 0L;
      maiRuDaDanBiLi_ = 0L;
      maiRuTeDaDanBiLi_ = 0L;
      maiChuZhongDanBiLi_ = 0L;
      maiChuDaDanBiLi_ = 0L;
      maiChuTeDaDanBiLi_ = 0L;
      fenZhongZhangFu1_ = 0L;
      fenZhongZhangFu2_ = 0L;
      fenZhongZhangFu3_ = 0L;
      fenZhongZhangFu4_ = 0L;
      fenZhongZhangFu5_ = 0L;
      shiYingLv_ = 0L;
      zhangTing_ = 0L;
      dieTing_ = 0L;
      shiChangMingCheng_ = "";
      shiChangDuanMingCheng_ = "";
      jiGouChiHuoShu_ = 0L;
      jiGouTuHuoShu_ = 0L;
      jiGouChiHuoLiang_ = 0L;
      jiGouTuHuoLiang_ = 0L;
      jiGouChiHuoJunE_ = 0L;
      jiGouTuHuoJunE_ = 0L;
      meiShouGuShu_ = 0L;
      jiaoYiDanWei_ = 0L;
      shiXiaoLv_ = 0L;
      shiJian_ = 0L;
      shiJingLv_ = 0L;
      zongShiZhi_ = 0L;
      liuTongShiZhi_ = 0L;
      mA1MinMA1_ = 0L;
      mA1MinMA2_ = 0L;
      mA1MinMA3_ = 0L;
      mA1MinMA4_ = 0L;
      mA1MinMA5_ = 0L;
      mA1MinMA6_ = 0L;
      mA5MinMA1_ = 0L;
      mA5MinMA2_ = 0L;
      mA5MinMA3_ = 0L;
      mA5MinMA4_ = 0L;
      mA5MinMA5_ = 0L;
      mA5MinMA6_ = 0L;
      mA1DayMA1_ = 0L;
      mA1DayMA2_ = 0L;
      mA1DayMA3_ = 0L;
      mA1DayMA4_ = 0L;
      mA1DayMA5_ = 0L;
      mA1DayMA6_ = 0L;
      bOLL1MinMID_ = 0L;
      bOLL1MinUPPER_ = 0L;
      bOLL1MinLOWER_ = 0L;
      bOLL5MinMID_ = 0L;
      bOLL5MinUPPER_ = 0L;
      bOLL5MinLOWER_ = 0L;
      bOLL1DayMID_ = 0L;
      bOLL1DayUPPER_ = 0L;
      bOLL1DayLOWER_ = 0L;
      vOL1Min_ = 0L;
      vOL1MinMA1_ = 0L;
      vOL1MinMA2_ = 0L;
      vOL1MinMA3_ = 0L;
      vOL5Min_ = 0L;
      vOL5MinMA1_ = 0L;
      vOL5MinMA2_ = 0L;
      vOL5MinMA3_ = 0L;
      vOL1Day_ = 0L;
      vOL1DayMA1_ = 0L;
      vOL1DayMA2_ = 0L;
      vOL1DayMA3_ = 0L;
      aRBR1MinAR_ = 0L;
      aRBR1MinBR_ = 0L;
      aRBR5MinAR_ = 0L;
      aRBR5MinBR_ = 0L;
      aRBR1DayAR_ = 0L;
      aRBR1DayBR_ = 0L;
      bIAS1MinBIAS1_ = 0L;
      bIAS1MinBIAS2_ = 0L;
      bIAS1MinBIAS3_ = 0L;
      bIAS5MinBIAS1_ = 0L;
      bIAS5MinBIAS2_ = 0L;
      bIAS5MinBIAS3_ = 0L;
      bIAS1DayBIAS1_ = 0L;
      bIAS1DayBIAS2_ = 0L;
      bIAS1DayBIAS3_ = 0L;
      cCI1Min_ = 0L;
      cCI5Min_ = 0L;
      cCI1Day_ = 0L;
      cJBS1MinCJBS_ = 0L;
      cJBS5MinCJBS_ = 0L;
      cJBS1DayCJBS_ = 0L;
      cR1MinCR_ = 0L;
      cR1MinMA1_ = 0L;
      cR1MinMA2_ = 0L;
      cR1MinMA3_ = 0L;
      cR5MinCR_ = 0L;
      cR5MinMA1_ = 0L;
      cR5MinMA2_ = 0L;
      cR5MinMA3_ = 0L;
      cR1DayCR_ = 0L;
      cR1DayMA1_ = 0L;
      cR1DayMA2_ = 0L;
      cR1DayMA3_ = 0L;
      dMA1MinDDD_ = 0L;
      dMA1MinAMA_ = 0L;
      dMA5MinDDD_ = 0L;
      dMA5MinAMA_ = 0L;
      dMA1DayDDD_ = 0L;
      dMA1DayAMA_ = 0L;
      dMI1MinPDI_ = 0L;
      dMI1MinMDI_ = 0L;
      dMI1MinADX_ = 0L;
      dMI1MinADXR_ = 0L;
      dMI5MinPDI_ = 0L;
      dMI5MinMDI_ = 0L;
      dMI5MinADX_ = 0L;
      dMI5MinADXR_ = 0L;
      dMI1DayPDI_ = 0L;
      dMI1DayMDI_ = 0L;
      dMI1DayADX_ = 0L;
      dMI1DayADXR_ = 0L;
      kDJ1MinK_ = 0L;
      kDJ1MinD_ = 0L;
      kDJ1MinJ_ = 0L;
      kDJ5MinK_ = 0L;
      kDJ5MinD_ = 0L;
      kDJ5MinJ_ = 0L;
      kDJ1DayK_ = 0L;
      kDJ1DayD_ = 0L;
      kDJ1DayJ_ = 0L;
      mACD1MinDIFF_ = 0L;
      mACD1MinDEA_ = 0L;
      mACD1MinMACD_ = 0L;
      mACD5MinDIFF_ = 0L;
      mACD5MinDEA_ = 0L;
      mACD5MinMACD_ = 0L;
      mACD1DayDIFF_ = 0L;
      mACD1DayDEA_ = 0L;
      mACD1DayMACD_ = 0L;
      oBV1Min_ = 0L;
      oBV5Min_ = 0L;
      oBV1Day_ = 0L;
      pSY1Min_ = 0L;
      pSY5Min_ = 0L;
      pSY1Day_ = 0L;
      rSI1MinRSI1_ = 0L;
      rSI1MinRSI2_ = 0L;
      rSI1MinRSI3_ = 0L;
      rSI5MinRSI1_ = 0L;
      rSI5MinRSI2_ = 0L;
      rSI5MinRSI3_ = 0L;
      rSI1DayRSI1_ = 0L;
      rSI1DayRSI2_ = 0L;
      rSI1DayRSI3_ = 0L;
      wR1MinWR1_ = 0L;
      wR1MinWR2_ = 0L;
      wR5MinWR1_ = 0L;
      wR5MinWR2_ = 0L;
      wR1DayWR1_ = 0L;
      wR1DayWR2_ = 0L;
      leiXing_ = 0L;
      ziLeiXing_ = 0L;
      leiXingMingCheng_ = "";
      chengJiaoLiangDanWei_ = 0L;
      fJJJLeiXing_ = 0L;
      zhengTiYiJia_ = 0L;
      mYiJia_ = 0L;
      mShiShiJingZhi_ = 0L;
      mShangZheXuZhang_ = 0L;
      mXiaZheXuDie_ = 0L;
      yinHanShouYi_ = 0L;
      jiaGeGangGan_ = 0L;
      pinZhongObj_ = "";
      baoGaoQi_ = "";
      shangShiRiQi_ = "";
      meiGuShouYi_ = 0L;
      meiGuJingZiChan_ = 0L;
      jingZiChanShouYiLv_ = 0L;
      meiGuJingYingXianJin_ = 0L;
      meiGuGongJiJin_ = 0L;
      meiGuWeiFenPei_ = 0L;
      guDongQuanYiBi_ = 0L;
      jingLiRunTongBi_ = 0L;
      zhuYingShouRuTongBi_ = 0L;
      xiaoShouMaoLiLv_ = 0L;
      tiaoZhengMeiGuJingZi_ = 0L;
      zongZiChan_ = 0L;
      liuDongZiChan_ = 0L;
      guDingZiChan_ = 0L;
      wuXingZiChan_ = 0L;
      liuDongFuZhai_ = 0L;
      changQiFuZhai_ = 0L;
      zongFuZhai_ = 0L;
      guDongQuanYi_ = 0L;
      ziBenGongJiJin_ = 0L;
      jingYingXianJinLiuLiang_ = 0L;
      touZiXianJinLiuLiang_ = 0L;
      chouZiXianJinLiuLiang_ = 0L;
      xianJinZengJiaE_ = 0L;
      zhuYingShouRu_ = 0L;
      zhuYingLiRun_ = 0L;
      yingYeLiRun_ = 0L;
      touZiShouYi_ = 0L;
      yingYeWaiShouZhi_ = 0L;
      liRunZongE_ = 0L;
      jingLiRun_ = 0L;
      weiFenPeiLiRun_ = 0L;
      zongGuBen_ = 0L;
      wuXianShouGuHeJi_ = 0L;
      liuTongAGu_ = 0L;
      liuTongBGu_ = 0L;
      jingWaiShangShiGu_ = 0L;
      qiTaLiuTongGu_ = 0L;
      xianShouGuHeJi_ = 0L;
      guoJiaChiGu_ = 0L;
      guoYouFaRenGu_ = 0L;
      jingNeiFaRenGu_ = 0L;
      jingNeiZiRanRenGu_ = 0L;
      qiTaFaQiRenGu_ = 0L;
      muJiFaRenGu_ = 0L;
      jingWaiFaRenGu_ = 0L;
      jingWaiZiRanRenGu_ = 0L;
      youXianGuHuoQiTa_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasObj()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getObjBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getJiaoYiDaiMaBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getZhongWenJianChengBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, zuiXinJia_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, kaiPanJia_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, zuiGaoJia_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, zuiDiJia_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, zuoShou_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(9, junJia_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, zhangDie_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, zhangFu_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(12, zhenFu_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, chengJiaoLiang_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, xianShou_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, chengJiaoE_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, zongChengJiaoBiShu_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(17, meiBiChengJiaoGuShu_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(18, huanShou_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(19, liangBi_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(20, neiPan_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(21, waiPan_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(22, zongMaiRu_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(23, zongMaiChu_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(24, zongMaiRuJunJia_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(25, zongMaiChuJunJia_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(26, weiTuoMaiRuJia1_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(27, weiTuoMaiRuJia2_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(28, weiTuoMaiRuJia3_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(29, weiTuoMaiRuJia4_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(30, weiTuoMaiRuJia5_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(31, weiTuoMaiRuLiang1_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(32, weiTuoMaiRuLiang2_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(33, weiTuoMaiRuLiang3_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(34, weiTuoMaiRuLiang4_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(35, weiTuoMaiRuLiang5_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(36, weiTuoMaiChuJia1_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(37, weiTuoMaiChuJia2_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(38, weiTuoMaiChuJia3_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(39, weiTuoMaiChuJia4_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(40, weiTuoMaiChuJia5_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(41, weiTuoMaiChuLiang1_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(42, weiTuoMaiChuLiang2_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(43, weiTuoMaiChuLiang3_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(44, weiTuoMaiChuLiang4_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(45, weiTuoMaiChuLiang5_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(46, weiBi_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(47, weiCha_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(48, zhangSu_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(49, junLiang5Ri_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(50, shangZhangJiaShu_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(51, xiaDieJiaShu_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(52, pingPanJiaShu_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(53, aGuShangZhangJiaShu_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(54, aGuXiaDieJiaShu_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(55, aGuPingPanJiaShu_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(56, aGuChengJiaoE_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(57, bGuShangZhangJiaShu_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(58, bGuXiaDieJiaShu_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(59, bGuPingPanJiaShu_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(60, bGuChengJiaoE_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(61, jiJinShangZhangJiaShu_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(62, jiJinXiaDieJiaShu_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(63, jiJinPingPanJiaShu_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(64, jiJinChengJiaoE_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(65, qiTaShangZhangJiaShu_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(66, qiTaXiaDieJiaShu_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(67, qiTaPingPanJiaShu_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(68, qiTaChengJiaoE_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(69, maiRuDanShu_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(70, maiChuDanShu_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(71, maiRuZhongDanBiLi_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(72, maiRuDaDanBiLi_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(73, maiRuTeDaDanBiLi_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(74, maiChuZhongDanBiLi_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(75, maiChuDaDanBiLi_);
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(76, maiChuTeDaDanBiLi_);
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(77, fenZhongZhangFu1_);
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(78, fenZhongZhangFu2_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(79, fenZhongZhangFu3_);
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(80, fenZhongZhangFu4_);
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(81, fenZhongZhangFu5_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(82, shiYingLv_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(83, zhangTing_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(84, dieTing_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        output.writeBytes(85, getShiChangMingChengBytes());
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(86, getShiChangDuanMingChengBytes());
      }
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(87, jiGouChiHuoShu_);
      }
      if (((bitField2_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(88, jiGouTuHuoShu_);
      }
      if (((bitField2_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(89, jiGouChiHuoLiang_);
      }
      if (((bitField2_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(90, jiGouTuHuoLiang_);
      }
      if (((bitField2_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(91, jiGouChiHuoJunE_);
      }
      if (((bitField2_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(92, jiGouTuHuoJunE_);
      }
      if (((bitField2_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(93, meiShouGuShu_);
      }
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(94, jiaoYiDanWei_);
      }
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(95, shiXiaoLv_);
      }
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(96, shiJian_);
      }
      if (((bitField3_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(97, shiJingLv_);
      }
      if (((bitField3_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(98, zongShiZhi_);
      }
      if (((bitField3_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(99, liuTongShiZhi_);
      }
      if (((bitField3_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(200, mA1MinMA1_);
      }
      if (((bitField3_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(201, mA1MinMA2_);
      }
      if (((bitField3_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(202, mA1MinMA3_);
      }
      if (((bitField3_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(203, mA1MinMA4_);
      }
      if (((bitField3_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(204, mA1MinMA5_);
      }
      if (((bitField3_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(205, mA1MinMA6_);
      }
      if (((bitField3_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(206, mA5MinMA1_);
      }
      if (((bitField3_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(207, mA5MinMA2_);
      }
      if (((bitField3_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(208, mA5MinMA3_);
      }
      if (((bitField3_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(209, mA5MinMA4_);
      }
      if (((bitField3_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(210, mA5MinMA5_);
      }
      if (((bitField3_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(211, mA5MinMA6_);
      }
      if (((bitField3_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(212, mA1DayMA1_);
      }
      if (((bitField3_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(213, mA1DayMA2_);
      }
      if (((bitField3_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(214, mA1DayMA3_);
      }
      if (((bitField3_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(215, mA1DayMA4_);
      }
      if (((bitField3_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(216, mA1DayMA5_);
      }
      if (((bitField3_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(217, mA1DayMA6_);
      }
      if (((bitField3_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(218, bOLL1MinMID_);
      }
      if (((bitField3_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(219, bOLL1MinUPPER_);
      }
      if (((bitField3_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(220, bOLL1MinLOWER_);
      }
      if (((bitField3_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(221, bOLL5MinMID_);
      }
      if (((bitField3_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(222, bOLL5MinUPPER_);
      }
      if (((bitField3_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(223, bOLL5MinLOWER_);
      }
      if (((bitField3_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(224, bOLL1DayMID_);
      }
      if (((bitField3_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(225, bOLL1DayUPPER_);
      }
      if (((bitField3_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(226, bOLL1DayLOWER_);
      }
      if (((bitField3_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(227, vOL1Min_);
      }
      if (((bitField3_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(228, vOL1MinMA1_);
      }
      if (((bitField4_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(229, vOL1MinMA2_);
      }
      if (((bitField4_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(230, vOL1MinMA3_);
      }
      if (((bitField4_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(231, vOL5Min_);
      }
      if (((bitField4_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(232, vOL5MinMA1_);
      }
      if (((bitField4_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(233, vOL5MinMA2_);
      }
      if (((bitField4_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(234, vOL5MinMA3_);
      }
      if (((bitField4_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(235, vOL1Day_);
      }
      if (((bitField4_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(236, vOL1DayMA1_);
      }
      if (((bitField4_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(237, vOL1DayMA2_);
      }
      if (((bitField4_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(238, vOL1DayMA3_);
      }
      if (((bitField4_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(239, aRBR1MinAR_);
      }
      if (((bitField4_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(240, aRBR1MinBR_);
      }
      if (((bitField4_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(241, aRBR5MinAR_);
      }
      if (((bitField4_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(242, aRBR5MinBR_);
      }
      if (((bitField4_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(243, aRBR1DayAR_);
      }
      if (((bitField4_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(244, aRBR1DayBR_);
      }
      if (((bitField4_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(245, bIAS1MinBIAS1_);
      }
      if (((bitField4_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(246, bIAS1MinBIAS2_);
      }
      if (((bitField4_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(247, bIAS1MinBIAS3_);
      }
      if (((bitField4_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(248, bIAS5MinBIAS1_);
      }
      if (((bitField4_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(249, bIAS5MinBIAS2_);
      }
      if (((bitField4_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(250, bIAS5MinBIAS3_);
      }
      if (((bitField4_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(251, bIAS1DayBIAS1_);
      }
      if (((bitField4_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(252, bIAS1DayBIAS2_);
      }
      if (((bitField4_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(253, bIAS1DayBIAS3_);
      }
      if (((bitField4_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(254, cCI1Min_);
      }
      if (((bitField4_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(255, cCI5Min_);
      }
      if (((bitField4_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(256, cCI1Day_);
      }
      if (((bitField4_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(257, cJBS1MinCJBS_);
      }
      if (((bitField4_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(258, cJBS5MinCJBS_);
      }
      if (((bitField4_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(259, cJBS1DayCJBS_);
      }
      if (((bitField4_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(260, cR1MinCR_);
      }
      if (((bitField5_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(261, cR1MinMA1_);
      }
      if (((bitField5_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(262, cR1MinMA2_);
      }
      if (((bitField5_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(263, cR1MinMA3_);
      }
      if (((bitField5_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(264, cR5MinCR_);
      }
      if (((bitField5_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(265, cR5MinMA1_);
      }
      if (((bitField5_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(266, cR5MinMA2_);
      }
      if (((bitField5_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(267, cR5MinMA3_);
      }
      if (((bitField5_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(268, cR1DayCR_);
      }
      if (((bitField5_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(269, cR1DayMA1_);
      }
      if (((bitField5_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(270, cR1DayMA2_);
      }
      if (((bitField5_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(271, cR1DayMA3_);
      }
      if (((bitField5_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(272, dMA1MinDDD_);
      }
      if (((bitField5_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(273, dMA1MinAMA_);
      }
      if (((bitField5_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(274, dMA5MinDDD_);
      }
      if (((bitField5_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(275, dMA5MinAMA_);
      }
      if (((bitField5_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(276, dMA1DayDDD_);
      }
      if (((bitField5_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(277, dMA1DayAMA_);
      }
      if (((bitField5_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(278, dMI1MinPDI_);
      }
      if (((bitField5_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(279, dMI1MinMDI_);
      }
      if (((bitField5_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(280, dMI1MinADX_);
      }
      if (((bitField5_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(281, dMI1MinADXR_);
      }
      if (((bitField5_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(282, dMI5MinPDI_);
      }
      if (((bitField5_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(283, dMI5MinMDI_);
      }
      if (((bitField5_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(284, dMI5MinADX_);
      }
      if (((bitField5_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(285, dMI5MinADXR_);
      }
      if (((bitField5_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(286, dMI1DayPDI_);
      }
      if (((bitField5_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(287, dMI1DayMDI_);
      }
      if (((bitField5_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(288, dMI1DayADX_);
      }
      if (((bitField5_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(289, dMI1DayADXR_);
      }
      if (((bitField5_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(290, kDJ1MinK_);
      }
      if (((bitField5_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(291, kDJ1MinD_);
      }
      if (((bitField5_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(292, kDJ1MinJ_);
      }
      if (((bitField6_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(293, kDJ5MinK_);
      }
      if (((bitField6_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(294, kDJ5MinD_);
      }
      if (((bitField6_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(295, kDJ5MinJ_);
      }
      if (((bitField6_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(296, kDJ1DayK_);
      }
      if (((bitField6_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(297, kDJ1DayD_);
      }
      if (((bitField6_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(298, kDJ1DayJ_);
      }
      if (((bitField6_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(299, mACD1MinDIFF_);
      }
      if (((bitField6_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(300, mACD1MinDEA_);
      }
      if (((bitField6_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(301, mACD1MinMACD_);
      }
      if (((bitField6_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(302, mACD5MinDIFF_);
      }
      if (((bitField6_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(303, mACD5MinDEA_);
      }
      if (((bitField6_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(304, mACD5MinMACD_);
      }
      if (((bitField6_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(305, mACD1DayDIFF_);
      }
      if (((bitField6_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(306, mACD1DayDEA_);
      }
      if (((bitField6_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(307, mACD1DayMACD_);
      }
      if (((bitField6_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(308, oBV1Min_);
      }
      if (((bitField6_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(309, oBV5Min_);
      }
      if (((bitField6_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(310, oBV1Day_);
      }
      if (((bitField6_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(311, pSY1Min_);
      }
      if (((bitField6_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(312, pSY5Min_);
      }
      if (((bitField6_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(313, pSY1Day_);
      }
      if (((bitField6_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(314, rSI1MinRSI1_);
      }
      if (((bitField6_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(315, rSI1MinRSI2_);
      }
      if (((bitField6_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(316, rSI1MinRSI3_);
      }
      if (((bitField6_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(317, rSI5MinRSI1_);
      }
      if (((bitField6_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(318, rSI5MinRSI2_);
      }
      if (((bitField6_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(319, rSI5MinRSI3_);
      }
      if (((bitField6_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(320, rSI1DayRSI1_);
      }
      if (((bitField6_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(321, rSI1DayRSI2_);
      }
      if (((bitField6_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(322, rSI1DayRSI3_);
      }
      if (((bitField6_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(323, wR1MinWR1_);
      }
      if (((bitField6_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(324, wR1MinWR2_);
      }
      if (((bitField7_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(325, wR5MinWR1_);
      }
      if (((bitField7_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(326, wR5MinWR2_);
      }
      if (((bitField7_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(327, wR1DayWR1_);
      }
      if (((bitField7_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(328, wR1DayWR2_);
      }
      if (((bitField7_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(400, leiXing_);
      }
      if (((bitField7_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(401, ziLeiXing_);
      }
      if (((bitField7_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(402, getLeiXingMingChengBytes());
      }
      if (((bitField7_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(403, chengJiaoLiangDanWei_);
      }
      if (((bitField7_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(501, fJJJLeiXing_);
      }
      if (((bitField7_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(502, zhengTiYiJia_);
      }
      if (((bitField7_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(511, yinHanShouYi_);
      }
      if (((bitField7_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(512, jiaGeGangGan_);
      }
      if (((bitField7_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(551, mYiJia_);
      }
      if (((bitField7_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(552, mShiShiJingZhi_);
      }
      if (((bitField7_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(553, mShangZheXuZhang_);
      }
      if (((bitField7_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(554, mXiaZheXuDie_);
      }
      if (((bitField7_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(601, getPinZhongObjBytes());
      }
      if (((bitField7_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(602, getBaoGaoQiBytes());
      }
      if (((bitField7_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(603, getShangShiRiQiBytes());
      }
      if (((bitField7_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(604, meiGuShouYi_);
      }
      if (((bitField7_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(605, meiGuJingZiChan_);
      }
      if (((bitField7_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(606, jingZiChanShouYiLv_);
      }
      if (((bitField7_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(607, meiGuJingYingXianJin_);
      }
      if (((bitField7_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(608, meiGuGongJiJin_);
      }
      if (((bitField7_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(609, meiGuWeiFenPei_);
      }
      if (((bitField7_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(610, guDongQuanYiBi_);
      }
      if (((bitField7_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(611, jingLiRunTongBi_);
      }
      if (((bitField7_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(612, zhuYingShouRuTongBi_);
      }
      if (((bitField7_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(613, xiaoShouMaoLiLv_);
      }
      if (((bitField7_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(614, tiaoZhengMeiGuJingZi_);
      }
      if (((bitField7_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(615, zongZiChan_);
      }
      if (((bitField7_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(616, liuDongZiChan_);
      }
      if (((bitField8_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(617, guDingZiChan_);
      }
      if (((bitField8_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(618, wuXingZiChan_);
      }
      if (((bitField8_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(619, liuDongFuZhai_);
      }
      if (((bitField8_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(620, changQiFuZhai_);
      }
      if (((bitField8_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(621, zongFuZhai_);
      }
      if (((bitField8_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(622, guDongQuanYi_);
      }
      if (((bitField8_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(623, ziBenGongJiJin_);
      }
      if (((bitField8_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(624, jingYingXianJinLiuLiang_);
      }
      if (((bitField8_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(625, touZiXianJinLiuLiang_);
      }
      if (((bitField8_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(626, chouZiXianJinLiuLiang_);
      }
      if (((bitField8_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(627, xianJinZengJiaE_);
      }
      if (((bitField8_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(628, zhuYingShouRu_);
      }
      if (((bitField8_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(629, zhuYingLiRun_);
      }
      if (((bitField8_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(630, yingYeLiRun_);
      }
      if (((bitField8_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(631, touZiShouYi_);
      }
      if (((bitField8_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(632, yingYeWaiShouZhi_);
      }
      if (((bitField8_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(633, liRunZongE_);
      }
      if (((bitField8_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(634, jingLiRun_);
      }
      if (((bitField8_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(635, weiFenPeiLiRun_);
      }
      if (((bitField8_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(636, zongGuBen_);
      }
      if (((bitField8_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(637, wuXianShouGuHeJi_);
      }
      if (((bitField8_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(638, liuTongAGu_);
      }
      if (((bitField8_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(639, liuTongBGu_);
      }
      if (((bitField8_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(640, jingWaiShangShiGu_);
      }
      if (((bitField8_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(641, qiTaLiuTongGu_);
      }
      if (((bitField8_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(642, xianShouGuHeJi_);
      }
      if (((bitField8_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(643, guoJiaChiGu_);
      }
      if (((bitField8_ & 0x08000000) == 0x08000000)) {
        output.writeInt64(644, guoYouFaRenGu_);
      }
      if (((bitField8_ & 0x10000000) == 0x10000000)) {
        output.writeInt64(645, jingNeiFaRenGu_);
      }
      if (((bitField8_ & 0x20000000) == 0x20000000)) {
        output.writeInt64(646, jingNeiZiRanRenGu_);
      }
      if (((bitField8_ & 0x40000000) == 0x40000000)) {
        output.writeInt64(647, qiTaFaQiRenGu_);
      }
      if (((bitField8_ & 0x80000000) == 0x80000000)) {
        output.writeInt64(648, muJiFaRenGu_);
      }
      if (((bitField9_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(649, jingWaiFaRenGu_);
      }
      if (((bitField9_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(650, jingWaiZiRanRenGu_);
      }
      if (((bitField9_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(651, youXianGuHuoQiTa_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getObjBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getJiaoYiDaiMaBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getZhongWenJianChengBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, zuiXinJia_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, kaiPanJia_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, zuiGaoJia_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, zuiDiJia_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, zuoShou_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, junJia_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, zhangDie_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, zhangFu_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, zhenFu_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, chengJiaoLiang_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, xianShou_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, chengJiaoE_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, zongChengJiaoBiShu_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, meiBiChengJiaoGuShu_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, huanShou_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, liangBi_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, neiPan_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, waiPan_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, zongMaiRu_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, zongMaiChu_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, zongMaiRuJunJia_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, zongMaiChuJunJia_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(26, weiTuoMaiRuJia1_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(27, weiTuoMaiRuJia2_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(28, weiTuoMaiRuJia3_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(29, weiTuoMaiRuJia4_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(30, weiTuoMaiRuJia5_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(31, weiTuoMaiRuLiang1_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(32, weiTuoMaiRuLiang2_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(33, weiTuoMaiRuLiang3_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(34, weiTuoMaiRuLiang4_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(35, weiTuoMaiRuLiang5_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(36, weiTuoMaiChuJia1_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(37, weiTuoMaiChuJia2_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(38, weiTuoMaiChuJia3_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(39, weiTuoMaiChuJia4_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(40, weiTuoMaiChuJia5_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(41, weiTuoMaiChuLiang1_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(42, weiTuoMaiChuLiang2_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(43, weiTuoMaiChuLiang3_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(44, weiTuoMaiChuLiang4_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(45, weiTuoMaiChuLiang5_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(46, weiBi_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(47, weiCha_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(48, zhangSu_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(49, junLiang5Ri_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(50, shangZhangJiaShu_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(51, xiaDieJiaShu_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(52, pingPanJiaShu_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(53, aGuShangZhangJiaShu_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(54, aGuXiaDieJiaShu_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(55, aGuPingPanJiaShu_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(56, aGuChengJiaoE_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(57, bGuShangZhangJiaShu_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(58, bGuXiaDieJiaShu_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(59, bGuPingPanJiaShu_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(60, bGuChengJiaoE_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(61, jiJinShangZhangJiaShu_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(62, jiJinXiaDieJiaShu_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(63, jiJinPingPanJiaShu_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(64, jiJinChengJiaoE_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(65, qiTaShangZhangJiaShu_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(66, qiTaXiaDieJiaShu_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(67, qiTaPingPanJiaShu_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(68, qiTaChengJiaoE_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(69, maiRuDanShu_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(70, maiChuDanShu_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(71, maiRuZhongDanBiLi_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(72, maiRuDaDanBiLi_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(73, maiRuTeDaDanBiLi_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(74, maiChuZhongDanBiLi_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(75, maiChuDaDanBiLi_);
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(76, maiChuTeDaDanBiLi_);
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(77, fenZhongZhangFu1_);
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(78, fenZhongZhangFu2_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(79, fenZhongZhangFu3_);
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(80, fenZhongZhangFu4_);
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(81, fenZhongZhangFu5_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(82, shiYingLv_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(83, zhangTing_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(84, dieTing_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(85, getShiChangMingChengBytes());
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(86, getShiChangDuanMingChengBytes());
      }
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(87, jiGouChiHuoShu_);
      }
      if (((bitField2_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(88, jiGouTuHuoShu_);
      }
      if (((bitField2_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(89, jiGouChiHuoLiang_);
      }
      if (((bitField2_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(90, jiGouTuHuoLiang_);
      }
      if (((bitField2_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(91, jiGouChiHuoJunE_);
      }
      if (((bitField2_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(92, jiGouTuHuoJunE_);
      }
      if (((bitField2_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(93, meiShouGuShu_);
      }
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(94, jiaoYiDanWei_);
      }
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(95, shiXiaoLv_);
      }
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(96, shiJian_);
      }
      if (((bitField3_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(97, shiJingLv_);
      }
      if (((bitField3_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(98, zongShiZhi_);
      }
      if (((bitField3_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(99, liuTongShiZhi_);
      }
      if (((bitField3_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(200, mA1MinMA1_);
      }
      if (((bitField3_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(201, mA1MinMA2_);
      }
      if (((bitField3_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(202, mA1MinMA3_);
      }
      if (((bitField3_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(203, mA1MinMA4_);
      }
      if (((bitField3_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(204, mA1MinMA5_);
      }
      if (((bitField3_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(205, mA1MinMA6_);
      }
      if (((bitField3_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(206, mA5MinMA1_);
      }
      if (((bitField3_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(207, mA5MinMA2_);
      }
      if (((bitField3_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(208, mA5MinMA3_);
      }
      if (((bitField3_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(209, mA5MinMA4_);
      }
      if (((bitField3_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(210, mA5MinMA5_);
      }
      if (((bitField3_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(211, mA5MinMA6_);
      }
      if (((bitField3_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(212, mA1DayMA1_);
      }
      if (((bitField3_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(213, mA1DayMA2_);
      }
      if (((bitField3_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(214, mA1DayMA3_);
      }
      if (((bitField3_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(215, mA1DayMA4_);
      }
      if (((bitField3_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(216, mA1DayMA5_);
      }
      if (((bitField3_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(217, mA1DayMA6_);
      }
      if (((bitField3_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(218, bOLL1MinMID_);
      }
      if (((bitField3_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(219, bOLL1MinUPPER_);
      }
      if (((bitField3_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(220, bOLL1MinLOWER_);
      }
      if (((bitField3_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(221, bOLL5MinMID_);
      }
      if (((bitField3_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(222, bOLL5MinUPPER_);
      }
      if (((bitField3_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(223, bOLL5MinLOWER_);
      }
      if (((bitField3_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(224, bOLL1DayMID_);
      }
      if (((bitField3_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(225, bOLL1DayUPPER_);
      }
      if (((bitField3_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(226, bOLL1DayLOWER_);
      }
      if (((bitField3_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(227, vOL1Min_);
      }
      if (((bitField3_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(228, vOL1MinMA1_);
      }
      if (((bitField4_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(229, vOL1MinMA2_);
      }
      if (((bitField4_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(230, vOL1MinMA3_);
      }
      if (((bitField4_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(231, vOL5Min_);
      }
      if (((bitField4_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(232, vOL5MinMA1_);
      }
      if (((bitField4_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(233, vOL5MinMA2_);
      }
      if (((bitField4_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(234, vOL5MinMA3_);
      }
      if (((bitField4_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(235, vOL1Day_);
      }
      if (((bitField4_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(236, vOL1DayMA1_);
      }
      if (((bitField4_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(237, vOL1DayMA2_);
      }
      if (((bitField4_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(238, vOL1DayMA3_);
      }
      if (((bitField4_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(239, aRBR1MinAR_);
      }
      if (((bitField4_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(240, aRBR1MinBR_);
      }
      if (((bitField4_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(241, aRBR5MinAR_);
      }
      if (((bitField4_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(242, aRBR5MinBR_);
      }
      if (((bitField4_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(243, aRBR1DayAR_);
      }
      if (((bitField4_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(244, aRBR1DayBR_);
      }
      if (((bitField4_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(245, bIAS1MinBIAS1_);
      }
      if (((bitField4_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(246, bIAS1MinBIAS2_);
      }
      if (((bitField4_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(247, bIAS1MinBIAS3_);
      }
      if (((bitField4_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(248, bIAS5MinBIAS1_);
      }
      if (((bitField4_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(249, bIAS5MinBIAS2_);
      }
      if (((bitField4_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(250, bIAS5MinBIAS3_);
      }
      if (((bitField4_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(251, bIAS1DayBIAS1_);
      }
      if (((bitField4_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(252, bIAS1DayBIAS2_);
      }
      if (((bitField4_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(253, bIAS1DayBIAS3_);
      }
      if (((bitField4_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(254, cCI1Min_);
      }
      if (((bitField4_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(255, cCI5Min_);
      }
      if (((bitField4_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(256, cCI1Day_);
      }
      if (((bitField4_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(257, cJBS1MinCJBS_);
      }
      if (((bitField4_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(258, cJBS5MinCJBS_);
      }
      if (((bitField4_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(259, cJBS1DayCJBS_);
      }
      if (((bitField4_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(260, cR1MinCR_);
      }
      if (((bitField5_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(261, cR1MinMA1_);
      }
      if (((bitField5_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(262, cR1MinMA2_);
      }
      if (((bitField5_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(263, cR1MinMA3_);
      }
      if (((bitField5_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(264, cR5MinCR_);
      }
      if (((bitField5_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(265, cR5MinMA1_);
      }
      if (((bitField5_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(266, cR5MinMA2_);
      }
      if (((bitField5_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(267, cR5MinMA3_);
      }
      if (((bitField5_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(268, cR1DayCR_);
      }
      if (((bitField5_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(269, cR1DayMA1_);
      }
      if (((bitField5_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(270, cR1DayMA2_);
      }
      if (((bitField5_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(271, cR1DayMA3_);
      }
      if (((bitField5_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(272, dMA1MinDDD_);
      }
      if (((bitField5_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(273, dMA1MinAMA_);
      }
      if (((bitField5_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(274, dMA5MinDDD_);
      }
      if (((bitField5_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(275, dMA5MinAMA_);
      }
      if (((bitField5_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(276, dMA1DayDDD_);
      }
      if (((bitField5_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(277, dMA1DayAMA_);
      }
      if (((bitField5_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(278, dMI1MinPDI_);
      }
      if (((bitField5_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(279, dMI1MinMDI_);
      }
      if (((bitField5_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(280, dMI1MinADX_);
      }
      if (((bitField5_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(281, dMI1MinADXR_);
      }
      if (((bitField5_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(282, dMI5MinPDI_);
      }
      if (((bitField5_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(283, dMI5MinMDI_);
      }
      if (((bitField5_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(284, dMI5MinADX_);
      }
      if (((bitField5_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(285, dMI5MinADXR_);
      }
      if (((bitField5_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(286, dMI1DayPDI_);
      }
      if (((bitField5_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(287, dMI1DayMDI_);
      }
      if (((bitField5_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(288, dMI1DayADX_);
      }
      if (((bitField5_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(289, dMI1DayADXR_);
      }
      if (((bitField5_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(290, kDJ1MinK_);
      }
      if (((bitField5_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(291, kDJ1MinD_);
      }
      if (((bitField5_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(292, kDJ1MinJ_);
      }
      if (((bitField6_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(293, kDJ5MinK_);
      }
      if (((bitField6_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(294, kDJ5MinD_);
      }
      if (((bitField6_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(295, kDJ5MinJ_);
      }
      if (((bitField6_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(296, kDJ1DayK_);
      }
      if (((bitField6_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(297, kDJ1DayD_);
      }
      if (((bitField6_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(298, kDJ1DayJ_);
      }
      if (((bitField6_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(299, mACD1MinDIFF_);
      }
      if (((bitField6_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(300, mACD1MinDEA_);
      }
      if (((bitField6_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(301, mACD1MinMACD_);
      }
      if (((bitField6_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(302, mACD5MinDIFF_);
      }
      if (((bitField6_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(303, mACD5MinDEA_);
      }
      if (((bitField6_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(304, mACD5MinMACD_);
      }
      if (((bitField6_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(305, mACD1DayDIFF_);
      }
      if (((bitField6_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(306, mACD1DayDEA_);
      }
      if (((bitField6_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(307, mACD1DayMACD_);
      }
      if (((bitField6_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(308, oBV1Min_);
      }
      if (((bitField6_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(309, oBV5Min_);
      }
      if (((bitField6_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(310, oBV1Day_);
      }
      if (((bitField6_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(311, pSY1Min_);
      }
      if (((bitField6_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(312, pSY5Min_);
      }
      if (((bitField6_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(313, pSY1Day_);
      }
      if (((bitField6_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(314, rSI1MinRSI1_);
      }
      if (((bitField6_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(315, rSI1MinRSI2_);
      }
      if (((bitField6_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(316, rSI1MinRSI3_);
      }
      if (((bitField6_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(317, rSI5MinRSI1_);
      }
      if (((bitField6_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(318, rSI5MinRSI2_);
      }
      if (((bitField6_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(319, rSI5MinRSI3_);
      }
      if (((bitField6_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(320, rSI1DayRSI1_);
      }
      if (((bitField6_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(321, rSI1DayRSI2_);
      }
      if (((bitField6_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(322, rSI1DayRSI3_);
      }
      if (((bitField6_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(323, wR1MinWR1_);
      }
      if (((bitField6_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(324, wR1MinWR2_);
      }
      if (((bitField7_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(325, wR5MinWR1_);
      }
      if (((bitField7_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(326, wR5MinWR2_);
      }
      if (((bitField7_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(327, wR1DayWR1_);
      }
      if (((bitField7_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(328, wR1DayWR2_);
      }
      if (((bitField7_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(400, leiXing_);
      }
      if (((bitField7_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(401, ziLeiXing_);
      }
      if (((bitField7_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(402, getLeiXingMingChengBytes());
      }
      if (((bitField7_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(403, chengJiaoLiangDanWei_);
      }
      if (((bitField7_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(501, fJJJLeiXing_);
      }
      if (((bitField7_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(502, zhengTiYiJia_);
      }
      if (((bitField7_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(511, yinHanShouYi_);
      }
      if (((bitField7_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(512, jiaGeGangGan_);
      }
      if (((bitField7_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(551, mYiJia_);
      }
      if (((bitField7_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(552, mShiShiJingZhi_);
      }
      if (((bitField7_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(553, mShangZheXuZhang_);
      }
      if (((bitField7_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(554, mXiaZheXuDie_);
      }
      if (((bitField7_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(601, getPinZhongObjBytes());
      }
      if (((bitField7_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(602, getBaoGaoQiBytes());
      }
      if (((bitField7_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(603, getShangShiRiQiBytes());
      }
      if (((bitField7_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(604, meiGuShouYi_);
      }
      if (((bitField7_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(605, meiGuJingZiChan_);
      }
      if (((bitField7_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(606, jingZiChanShouYiLv_);
      }
      if (((bitField7_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(607, meiGuJingYingXianJin_);
      }
      if (((bitField7_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(608, meiGuGongJiJin_);
      }
      if (((bitField7_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(609, meiGuWeiFenPei_);
      }
      if (((bitField7_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(610, guDongQuanYiBi_);
      }
      if (((bitField7_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(611, jingLiRunTongBi_);
      }
      if (((bitField7_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(612, zhuYingShouRuTongBi_);
      }
      if (((bitField7_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(613, xiaoShouMaoLiLv_);
      }
      if (((bitField7_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(614, tiaoZhengMeiGuJingZi_);
      }
      if (((bitField7_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(615, zongZiChan_);
      }
      if (((bitField7_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(616, liuDongZiChan_);
      }
      if (((bitField8_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(617, guDingZiChan_);
      }
      if (((bitField8_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(618, wuXingZiChan_);
      }
      if (((bitField8_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(619, liuDongFuZhai_);
      }
      if (((bitField8_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(620, changQiFuZhai_);
      }
      if (((bitField8_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(621, zongFuZhai_);
      }
      if (((bitField8_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(622, guDongQuanYi_);
      }
      if (((bitField8_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(623, ziBenGongJiJin_);
      }
      if (((bitField8_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(624, jingYingXianJinLiuLiang_);
      }
      if (((bitField8_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(625, touZiXianJinLiuLiang_);
      }
      if (((bitField8_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(626, chouZiXianJinLiuLiang_);
      }
      if (((bitField8_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(627, xianJinZengJiaE_);
      }
      if (((bitField8_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(628, zhuYingShouRu_);
      }
      if (((bitField8_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(629, zhuYingLiRun_);
      }
      if (((bitField8_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(630, yingYeLiRun_);
      }
      if (((bitField8_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(631, touZiShouYi_);
      }
      if (((bitField8_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(632, yingYeWaiShouZhi_);
      }
      if (((bitField8_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(633, liRunZongE_);
      }
      if (((bitField8_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(634, jingLiRun_);
      }
      if (((bitField8_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(635, weiFenPeiLiRun_);
      }
      if (((bitField8_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(636, zongGuBen_);
      }
      if (((bitField8_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(637, wuXianShouGuHeJi_);
      }
      if (((bitField8_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(638, liuTongAGu_);
      }
      if (((bitField8_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(639, liuTongBGu_);
      }
      if (((bitField8_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(640, jingWaiShangShiGu_);
      }
      if (((bitField8_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(641, qiTaLiuTongGu_);
      }
      if (((bitField8_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(642, xianShouGuHeJi_);
      }
      if (((bitField8_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(643, guoJiaChiGu_);
      }
      if (((bitField8_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(644, guoYouFaRenGu_);
      }
      if (((bitField8_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(645, jingNeiFaRenGu_);
      }
      if (((bitField8_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(646, jingNeiZiRanRenGu_);
      }
      if (((bitField8_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(647, qiTaFaQiRenGu_);
      }
      if (((bitField8_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(648, muJiFaRenGu_);
      }
      if (((bitField9_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(649, jingWaiFaRenGu_);
      }
      if (((bitField9_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(650, jingWaiZiRanRenGu_);
      }
      if (((bitField9_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(651, youXianGuHuoQiTa_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.dzhyun.proto.DzhyunStkdata.StkData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dzhyun.proto.DzhyunStkdata.StkData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dzhyun.proto.DzhyunStkdata.StkData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dzhyun.StkData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dzhyun.StkData)
        com.dzhyun.proto.DzhyunStkdata.StkDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dzhyun.proto.DzhyunStkdata.internal_static_dzhyun_StkData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dzhyun.proto.DzhyunStkdata.internal_static_dzhyun_StkData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dzhyun.proto.DzhyunStkdata.StkData.class, com.dzhyun.proto.DzhyunStkdata.StkData.Builder.class);
      }

      // Construct using com.dzhyun.proto.DzhyunStkdata.StkData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        obj_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        jiaoYiDaiMa_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        zhongWenJianCheng_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        zuiXinJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        kaiPanJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        zuiGaoJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        zuiDiJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        zuoShou_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        junJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        zhangDie_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        zhangFu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        zhenFu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        chengJiaoLiang_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        xianShou_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        chengJiaoE_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        zongChengJiaoBiShu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        meiBiChengJiaoGuShu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        huanShou_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        liangBi_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        neiPan_ = 0L;
        bitField0_ = (bitField0_ & ~0x00080000);
        waiPan_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        zongMaiRu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        zongMaiChu_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        zongMaiRuJunJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        zongMaiChuJunJia_ = 0L;
        bitField0_ = (bitField0_ & ~0x01000000);
        weiTuoMaiRuJia1_ = 0L;
        bitField0_ = (bitField0_ & ~0x02000000);
        weiTuoMaiRuJia2_ = 0L;
        bitField0_ = (bitField0_ & ~0x04000000);
        weiTuoMaiRuJia3_ = 0L;
        bitField0_ = (bitField0_ & ~0x08000000);
        weiTuoMaiRuJia4_ = 0L;
        bitField0_ = (bitField0_ & ~0x10000000);
        weiTuoMaiRuJia5_ = 0L;
        bitField0_ = (bitField0_ & ~0x20000000);
        weiTuoMaiRuLiang1_ = 0L;
        bitField0_ = (bitField0_ & ~0x40000000);
        weiTuoMaiRuLiang2_ = 0L;
        bitField0_ = (bitField0_ & ~0x80000000);
        weiTuoMaiRuLiang3_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000001);
        weiTuoMaiRuLiang4_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000002);
        weiTuoMaiRuLiang5_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000004);
        weiTuoMaiChuJia1_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000008);
        weiTuoMaiChuJia2_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000010);
        weiTuoMaiChuJia3_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000020);
        weiTuoMaiChuJia4_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000040);
        weiTuoMaiChuJia5_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000080);
        weiTuoMaiChuLiang1_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000100);
        weiTuoMaiChuLiang2_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000200);
        weiTuoMaiChuLiang3_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000400);
        weiTuoMaiChuLiang4_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000800);
        weiTuoMaiChuLiang5_ = 0L;
        bitField1_ = (bitField1_ & ~0x00001000);
        weiBi_ = 0L;
        bitField1_ = (bitField1_ & ~0x00002000);
        weiCha_ = 0L;
        bitField1_ = (bitField1_ & ~0x00004000);
        zhangSu_ = 0L;
        bitField1_ = (bitField1_ & ~0x00008000);
        junLiang5Ri_ = 0L;
        bitField1_ = (bitField1_ & ~0x00010000);
        shangZhangJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x00020000);
        xiaDieJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x00040000);
        pingPanJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x00080000);
        aGuShangZhangJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x00100000);
        aGuXiaDieJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x00200000);
        aGuPingPanJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x00400000);
        aGuChengJiaoE_ = 0L;
        bitField1_ = (bitField1_ & ~0x00800000);
        bGuShangZhangJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x01000000);
        bGuXiaDieJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x02000000);
        bGuPingPanJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x04000000);
        bGuChengJiaoE_ = 0L;
        bitField1_ = (bitField1_ & ~0x08000000);
        jiJinShangZhangJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x10000000);
        jiJinXiaDieJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x20000000);
        jiJinPingPanJiaShu_ = 0L;
        bitField1_ = (bitField1_ & ~0x40000000);
        jiJinChengJiaoE_ = 0L;
        bitField1_ = (bitField1_ & ~0x80000000);
        qiTaShangZhangJiaShu_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000001);
        qiTaXiaDieJiaShu_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000002);
        qiTaPingPanJiaShu_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000004);
        qiTaChengJiaoE_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000008);
        maiRuDanShu_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000010);
        maiChuDanShu_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000020);
        maiRuZhongDanBiLi_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000040);
        maiRuDaDanBiLi_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000080);
        maiRuTeDaDanBiLi_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000100);
        maiChuZhongDanBiLi_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000200);
        maiChuDaDanBiLi_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000400);
        maiChuTeDaDanBiLi_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000800);
        fenZhongZhangFu1_ = 0L;
        bitField2_ = (bitField2_ & ~0x00001000);
        fenZhongZhangFu2_ = 0L;
        bitField2_ = (bitField2_ & ~0x00002000);
        fenZhongZhangFu3_ = 0L;
        bitField2_ = (bitField2_ & ~0x00004000);
        fenZhongZhangFu4_ = 0L;
        bitField2_ = (bitField2_ & ~0x00008000);
        fenZhongZhangFu5_ = 0L;
        bitField2_ = (bitField2_ & ~0x00010000);
        shiYingLv_ = 0L;
        bitField2_ = (bitField2_ & ~0x00020000);
        zhangTing_ = 0L;
        bitField2_ = (bitField2_ & ~0x00040000);
        dieTing_ = 0L;
        bitField2_ = (bitField2_ & ~0x00080000);
        shiChangMingCheng_ = "";
        bitField2_ = (bitField2_ & ~0x00100000);
        shiChangDuanMingCheng_ = "";
        bitField2_ = (bitField2_ & ~0x00200000);
        jiGouChiHuoShu_ = 0L;
        bitField2_ = (bitField2_ & ~0x00400000);
        jiGouTuHuoShu_ = 0L;
        bitField2_ = (bitField2_ & ~0x00800000);
        jiGouChiHuoLiang_ = 0L;
        bitField2_ = (bitField2_ & ~0x01000000);
        jiGouTuHuoLiang_ = 0L;
        bitField2_ = (bitField2_ & ~0x02000000);
        jiGouChiHuoJunE_ = 0L;
        bitField2_ = (bitField2_ & ~0x04000000);
        jiGouTuHuoJunE_ = 0L;
        bitField2_ = (bitField2_ & ~0x08000000);
        meiShouGuShu_ = 0L;
        bitField2_ = (bitField2_ & ~0x10000000);
        jiaoYiDanWei_ = 0L;
        bitField2_ = (bitField2_ & ~0x20000000);
        shiXiaoLv_ = 0L;
        bitField2_ = (bitField2_ & ~0x40000000);
        shiJian_ = 0L;
        bitField2_ = (bitField2_ & ~0x80000000);
        shiJingLv_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000001);
        zongShiZhi_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000002);
        liuTongShiZhi_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000004);
        mA1MinMA1_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000008);
        mA1MinMA2_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000010);
        mA1MinMA3_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000020);
        mA1MinMA4_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000040);
        mA1MinMA5_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000080);
        mA1MinMA6_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000100);
        mA5MinMA1_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000200);
        mA5MinMA2_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000400);
        mA5MinMA3_ = 0L;
        bitField3_ = (bitField3_ & ~0x00000800);
        mA5MinMA4_ = 0L;
        bitField3_ = (bitField3_ & ~0x00001000);
        mA5MinMA5_ = 0L;
        bitField3_ = (bitField3_ & ~0x00002000);
        mA5MinMA6_ = 0L;
        bitField3_ = (bitField3_ & ~0x00004000);
        mA1DayMA1_ = 0L;
        bitField3_ = (bitField3_ & ~0x00008000);
        mA1DayMA2_ = 0L;
        bitField3_ = (bitField3_ & ~0x00010000);
        mA1DayMA3_ = 0L;
        bitField3_ = (bitField3_ & ~0x00020000);
        mA1DayMA4_ = 0L;
        bitField3_ = (bitField3_ & ~0x00040000);
        mA1DayMA5_ = 0L;
        bitField3_ = (bitField3_ & ~0x00080000);
        mA1DayMA6_ = 0L;
        bitField3_ = (bitField3_ & ~0x00100000);
        bOLL1MinMID_ = 0L;
        bitField3_ = (bitField3_ & ~0x00200000);
        bOLL1MinUPPER_ = 0L;
        bitField3_ = (bitField3_ & ~0x00400000);
        bOLL1MinLOWER_ = 0L;
        bitField3_ = (bitField3_ & ~0x00800000);
        bOLL5MinMID_ = 0L;
        bitField3_ = (bitField3_ & ~0x01000000);
        bOLL5MinUPPER_ = 0L;
        bitField3_ = (bitField3_ & ~0x02000000);
        bOLL5MinLOWER_ = 0L;
        bitField3_ = (bitField3_ & ~0x04000000);
        bOLL1DayMID_ = 0L;
        bitField3_ = (bitField3_ & ~0x08000000);
        bOLL1DayUPPER_ = 0L;
        bitField3_ = (bitField3_ & ~0x10000000);
        bOLL1DayLOWER_ = 0L;
        bitField3_ = (bitField3_ & ~0x20000000);
        vOL1Min_ = 0L;
        bitField3_ = (bitField3_ & ~0x40000000);
        vOL1MinMA1_ = 0L;
        bitField3_ = (bitField3_ & ~0x80000000);
        vOL1MinMA2_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000001);
        vOL1MinMA3_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000002);
        vOL5Min_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000004);
        vOL5MinMA1_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000008);
        vOL5MinMA2_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000010);
        vOL5MinMA3_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000020);
        vOL1Day_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000040);
        vOL1DayMA1_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000080);
        vOL1DayMA2_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000100);
        vOL1DayMA3_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000200);
        aRBR1MinAR_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000400);
        aRBR1MinBR_ = 0L;
        bitField4_ = (bitField4_ & ~0x00000800);
        aRBR5MinAR_ = 0L;
        bitField4_ = (bitField4_ & ~0x00001000);
        aRBR5MinBR_ = 0L;
        bitField4_ = (bitField4_ & ~0x00002000);
        aRBR1DayAR_ = 0L;
        bitField4_ = (bitField4_ & ~0x00004000);
        aRBR1DayBR_ = 0L;
        bitField4_ = (bitField4_ & ~0x00008000);
        bIAS1MinBIAS1_ = 0L;
        bitField4_ = (bitField4_ & ~0x00010000);
        bIAS1MinBIAS2_ = 0L;
        bitField4_ = (bitField4_ & ~0x00020000);
        bIAS1MinBIAS3_ = 0L;
        bitField4_ = (bitField4_ & ~0x00040000);
        bIAS5MinBIAS1_ = 0L;
        bitField4_ = (bitField4_ & ~0x00080000);
        bIAS5MinBIAS2_ = 0L;
        bitField4_ = (bitField4_ & ~0x00100000);
        bIAS5MinBIAS3_ = 0L;
        bitField4_ = (bitField4_ & ~0x00200000);
        bIAS1DayBIAS1_ = 0L;
        bitField4_ = (bitField4_ & ~0x00400000);
        bIAS1DayBIAS2_ = 0L;
        bitField4_ = (bitField4_ & ~0x00800000);
        bIAS1DayBIAS3_ = 0L;
        bitField4_ = (bitField4_ & ~0x01000000);
        cCI1Min_ = 0L;
        bitField4_ = (bitField4_ & ~0x02000000);
        cCI5Min_ = 0L;
        bitField4_ = (bitField4_ & ~0x04000000);
        cCI1Day_ = 0L;
        bitField4_ = (bitField4_ & ~0x08000000);
        cJBS1MinCJBS_ = 0L;
        bitField4_ = (bitField4_ & ~0x10000000);
        cJBS5MinCJBS_ = 0L;
        bitField4_ = (bitField4_ & ~0x20000000);
        cJBS1DayCJBS_ = 0L;
        bitField4_ = (bitField4_ & ~0x40000000);
        cR1MinCR_ = 0L;
        bitField4_ = (bitField4_ & ~0x80000000);
        cR1MinMA1_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000001);
        cR1MinMA2_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000002);
        cR1MinMA3_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000004);
        cR5MinCR_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000008);
        cR5MinMA1_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000010);
        cR5MinMA2_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000020);
        cR5MinMA3_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000040);
        cR1DayCR_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000080);
        cR1DayMA1_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000100);
        cR1DayMA2_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000200);
        cR1DayMA3_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000400);
        dMA1MinDDD_ = 0L;
        bitField5_ = (bitField5_ & ~0x00000800);
        dMA1MinAMA_ = 0L;
        bitField5_ = (bitField5_ & ~0x00001000);
        dMA5MinDDD_ = 0L;
        bitField5_ = (bitField5_ & ~0x00002000);
        dMA5MinAMA_ = 0L;
        bitField5_ = (bitField5_ & ~0x00004000);
        dMA1DayDDD_ = 0L;
        bitField5_ = (bitField5_ & ~0x00008000);
        dMA1DayAMA_ = 0L;
        bitField5_ = (bitField5_ & ~0x00010000);
        dMI1MinPDI_ = 0L;
        bitField5_ = (bitField5_ & ~0x00020000);
        dMI1MinMDI_ = 0L;
        bitField5_ = (bitField5_ & ~0x00040000);
        dMI1MinADX_ = 0L;
        bitField5_ = (bitField5_ & ~0x00080000);
        dMI1MinADXR_ = 0L;
        bitField5_ = (bitField5_ & ~0x00100000);
        dMI5MinPDI_ = 0L;
        bitField5_ = (bitField5_ & ~0x00200000);
        dMI5MinMDI_ = 0L;
        bitField5_ = (bitField5_ & ~0x00400000);
        dMI5MinADX_ = 0L;
        bitField5_ = (bitField5_ & ~0x00800000);
        dMI5MinADXR_ = 0L;
        bitField5_ = (bitField5_ & ~0x01000000);
        dMI1DayPDI_ = 0L;
        bitField5_ = (bitField5_ & ~0x02000000);
        dMI1DayMDI_ = 0L;
        bitField5_ = (bitField5_ & ~0x04000000);
        dMI1DayADX_ = 0L;
        bitField5_ = (bitField5_ & ~0x08000000);
        dMI1DayADXR_ = 0L;
        bitField5_ = (bitField5_ & ~0x10000000);
        kDJ1MinK_ = 0L;
        bitField5_ = (bitField5_ & ~0x20000000);
        kDJ1MinD_ = 0L;
        bitField5_ = (bitField5_ & ~0x40000000);
        kDJ1MinJ_ = 0L;
        bitField5_ = (bitField5_ & ~0x80000000);
        kDJ5MinK_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000001);
        kDJ5MinD_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000002);
        kDJ5MinJ_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000004);
        kDJ1DayK_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000008);
        kDJ1DayD_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000010);
        kDJ1DayJ_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000020);
        mACD1MinDIFF_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000040);
        mACD1MinDEA_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000080);
        mACD1MinMACD_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000100);
        mACD5MinDIFF_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000200);
        mACD5MinDEA_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000400);
        mACD5MinMACD_ = 0L;
        bitField6_ = (bitField6_ & ~0x00000800);
        mACD1DayDIFF_ = 0L;
        bitField6_ = (bitField6_ & ~0x00001000);
        mACD1DayDEA_ = 0L;
        bitField6_ = (bitField6_ & ~0x00002000);
        mACD1DayMACD_ = 0L;
        bitField6_ = (bitField6_ & ~0x00004000);
        oBV1Min_ = 0L;
        bitField6_ = (bitField6_ & ~0x00008000);
        oBV5Min_ = 0L;
        bitField6_ = (bitField6_ & ~0x00010000);
        oBV1Day_ = 0L;
        bitField6_ = (bitField6_ & ~0x00020000);
        pSY1Min_ = 0L;
        bitField6_ = (bitField6_ & ~0x00040000);
        pSY5Min_ = 0L;
        bitField6_ = (bitField6_ & ~0x00080000);
        pSY1Day_ = 0L;
        bitField6_ = (bitField6_ & ~0x00100000);
        rSI1MinRSI1_ = 0L;
        bitField6_ = (bitField6_ & ~0x00200000);
        rSI1MinRSI2_ = 0L;
        bitField6_ = (bitField6_ & ~0x00400000);
        rSI1MinRSI3_ = 0L;
        bitField6_ = (bitField6_ & ~0x00800000);
        rSI5MinRSI1_ = 0L;
        bitField6_ = (bitField6_ & ~0x01000000);
        rSI5MinRSI2_ = 0L;
        bitField6_ = (bitField6_ & ~0x02000000);
        rSI5MinRSI3_ = 0L;
        bitField6_ = (bitField6_ & ~0x04000000);
        rSI1DayRSI1_ = 0L;
        bitField6_ = (bitField6_ & ~0x08000000);
        rSI1DayRSI2_ = 0L;
        bitField6_ = (bitField6_ & ~0x10000000);
        rSI1DayRSI3_ = 0L;
        bitField6_ = (bitField6_ & ~0x20000000);
        wR1MinWR1_ = 0L;
        bitField6_ = (bitField6_ & ~0x40000000);
        wR1MinWR2_ = 0L;
        bitField6_ = (bitField6_ & ~0x80000000);
        wR5MinWR1_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000001);
        wR5MinWR2_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000002);
        wR1DayWR1_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000004);
        wR1DayWR2_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000008);
        leiXing_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000010);
        ziLeiXing_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000020);
        leiXingMingCheng_ = "";
        bitField7_ = (bitField7_ & ~0x00000040);
        chengJiaoLiangDanWei_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000080);
        fJJJLeiXing_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000100);
        zhengTiYiJia_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000200);
        mYiJia_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000400);
        mShiShiJingZhi_ = 0L;
        bitField7_ = (bitField7_ & ~0x00000800);
        mShangZheXuZhang_ = 0L;
        bitField7_ = (bitField7_ & ~0x00001000);
        mXiaZheXuDie_ = 0L;
        bitField7_ = (bitField7_ & ~0x00002000);
        yinHanShouYi_ = 0L;
        bitField7_ = (bitField7_ & ~0x00004000);
        jiaGeGangGan_ = 0L;
        bitField7_ = (bitField7_ & ~0x00008000);
        pinZhongObj_ = "";
        bitField7_ = (bitField7_ & ~0x00010000);
        baoGaoQi_ = "";
        bitField7_ = (bitField7_ & ~0x00020000);
        shangShiRiQi_ = "";
        bitField7_ = (bitField7_ & ~0x00040000);
        meiGuShouYi_ = 0L;
        bitField7_ = (bitField7_ & ~0x00080000);
        meiGuJingZiChan_ = 0L;
        bitField7_ = (bitField7_ & ~0x00100000);
        jingZiChanShouYiLv_ = 0L;
        bitField7_ = (bitField7_ & ~0x00200000);
        meiGuJingYingXianJin_ = 0L;
        bitField7_ = (bitField7_ & ~0x00400000);
        meiGuGongJiJin_ = 0L;
        bitField7_ = (bitField7_ & ~0x00800000);
        meiGuWeiFenPei_ = 0L;
        bitField7_ = (bitField7_ & ~0x01000000);
        guDongQuanYiBi_ = 0L;
        bitField7_ = (bitField7_ & ~0x02000000);
        jingLiRunTongBi_ = 0L;
        bitField7_ = (bitField7_ & ~0x04000000);
        zhuYingShouRuTongBi_ = 0L;
        bitField7_ = (bitField7_ & ~0x08000000);
        xiaoShouMaoLiLv_ = 0L;
        bitField7_ = (bitField7_ & ~0x10000000);
        tiaoZhengMeiGuJingZi_ = 0L;
        bitField7_ = (bitField7_ & ~0x20000000);
        zongZiChan_ = 0L;
        bitField7_ = (bitField7_ & ~0x40000000);
        liuDongZiChan_ = 0L;
        bitField7_ = (bitField7_ & ~0x80000000);
        guDingZiChan_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000001);
        wuXingZiChan_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000002);
        liuDongFuZhai_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000004);
        changQiFuZhai_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000008);
        zongFuZhai_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000010);
        guDongQuanYi_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000020);
        ziBenGongJiJin_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000040);
        jingYingXianJinLiuLiang_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000080);
        touZiXianJinLiuLiang_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000100);
        chouZiXianJinLiuLiang_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000200);
        xianJinZengJiaE_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000400);
        zhuYingShouRu_ = 0L;
        bitField8_ = (bitField8_ & ~0x00000800);
        zhuYingLiRun_ = 0L;
        bitField8_ = (bitField8_ & ~0x00001000);
        yingYeLiRun_ = 0L;
        bitField8_ = (bitField8_ & ~0x00002000);
        touZiShouYi_ = 0L;
        bitField8_ = (bitField8_ & ~0x00004000);
        yingYeWaiShouZhi_ = 0L;
        bitField8_ = (bitField8_ & ~0x00008000);
        liRunZongE_ = 0L;
        bitField8_ = (bitField8_ & ~0x00010000);
        jingLiRun_ = 0L;
        bitField8_ = (bitField8_ & ~0x00020000);
        weiFenPeiLiRun_ = 0L;
        bitField8_ = (bitField8_ & ~0x00040000);
        zongGuBen_ = 0L;
        bitField8_ = (bitField8_ & ~0x00080000);
        wuXianShouGuHeJi_ = 0L;
        bitField8_ = (bitField8_ & ~0x00100000);
        liuTongAGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x00200000);
        liuTongBGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x00400000);
        jingWaiShangShiGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x00800000);
        qiTaLiuTongGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x01000000);
        xianShouGuHeJi_ = 0L;
        bitField8_ = (bitField8_ & ~0x02000000);
        guoJiaChiGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x04000000);
        guoYouFaRenGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x08000000);
        jingNeiFaRenGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x10000000);
        jingNeiZiRanRenGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x20000000);
        qiTaFaQiRenGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x40000000);
        muJiFaRenGu_ = 0L;
        bitField8_ = (bitField8_ & ~0x80000000);
        jingWaiFaRenGu_ = 0L;
        bitField9_ = (bitField9_ & ~0x00000001);
        jingWaiZiRanRenGu_ = 0L;
        bitField9_ = (bitField9_ & ~0x00000002);
        youXianGuHuoQiTa_ = 0L;
        bitField9_ = (bitField9_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dzhyun.proto.DzhyunStkdata.internal_static_dzhyun_StkData_descriptor;
      }

      public com.dzhyun.proto.DzhyunStkdata.StkData getDefaultInstanceForType() {
        return com.dzhyun.proto.DzhyunStkdata.StkData.getDefaultInstance();
      }

      public com.dzhyun.proto.DzhyunStkdata.StkData build() {
        com.dzhyun.proto.DzhyunStkdata.StkData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.dzhyun.proto.DzhyunStkdata.StkData buildPartial() {
        com.dzhyun.proto.DzhyunStkdata.StkData result = new com.dzhyun.proto.DzhyunStkdata.StkData(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int from_bitField3_ = bitField3_;
        int from_bitField4_ = bitField4_;
        int from_bitField5_ = bitField5_;
        int from_bitField6_ = bitField6_;
        int from_bitField7_ = bitField7_;
        int from_bitField8_ = bitField8_;
        int from_bitField9_ = bitField9_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        int to_bitField3_ = 0;
        int to_bitField4_ = 0;
        int to_bitField5_ = 0;
        int to_bitField6_ = 0;
        int to_bitField7_ = 0;
        int to_bitField8_ = 0;
        int to_bitField9_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.obj_ = obj_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jiaoYiDaiMa_ = jiaoYiDaiMa_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.zhongWenJianCheng_ = zhongWenJianCheng_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.zuiXinJia_ = zuiXinJia_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.kaiPanJia_ = kaiPanJia_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.zuiGaoJia_ = zuiGaoJia_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.zuiDiJia_ = zuiDiJia_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.zuoShou_ = zuoShou_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.junJia_ = junJia_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.zhangDie_ = zhangDie_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.zhangFu_ = zhangFu_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.zhenFu_ = zhenFu_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.chengJiaoLiang_ = chengJiaoLiang_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.xianShou_ = xianShou_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.chengJiaoE_ = chengJiaoE_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.zongChengJiaoBiShu_ = zongChengJiaoBiShu_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.meiBiChengJiaoGuShu_ = meiBiChengJiaoGuShu_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.huanShou_ = huanShou_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.liangBi_ = liangBi_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.neiPan_ = neiPan_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.waiPan_ = waiPan_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.zongMaiRu_ = zongMaiRu_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.zongMaiChu_ = zongMaiChu_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.zongMaiRuJunJia_ = zongMaiRuJunJia_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.zongMaiChuJunJia_ = zongMaiChuJunJia_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.weiTuoMaiRuJia1_ = weiTuoMaiRuJia1_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.weiTuoMaiRuJia2_ = weiTuoMaiRuJia2_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.weiTuoMaiRuJia3_ = weiTuoMaiRuJia3_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.weiTuoMaiRuJia4_ = weiTuoMaiRuJia4_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.weiTuoMaiRuJia5_ = weiTuoMaiRuJia5_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.weiTuoMaiRuLiang1_ = weiTuoMaiRuLiang1_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.weiTuoMaiRuLiang2_ = weiTuoMaiRuLiang2_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.weiTuoMaiRuLiang3_ = weiTuoMaiRuLiang3_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.weiTuoMaiRuLiang4_ = weiTuoMaiRuLiang4_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.weiTuoMaiRuLiang5_ = weiTuoMaiRuLiang5_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.weiTuoMaiChuJia1_ = weiTuoMaiChuJia1_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.weiTuoMaiChuJia2_ = weiTuoMaiChuJia2_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.weiTuoMaiChuJia3_ = weiTuoMaiChuJia3_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.weiTuoMaiChuJia4_ = weiTuoMaiChuJia4_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.weiTuoMaiChuJia5_ = weiTuoMaiChuJia5_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.weiTuoMaiChuLiang1_ = weiTuoMaiChuLiang1_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.weiTuoMaiChuLiang2_ = weiTuoMaiChuLiang2_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.weiTuoMaiChuLiang3_ = weiTuoMaiChuLiang3_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.weiTuoMaiChuLiang4_ = weiTuoMaiChuLiang4_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.weiTuoMaiChuLiang5_ = weiTuoMaiChuLiang5_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.weiBi_ = weiBi_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.weiCha_ = weiCha_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.zhangSu_ = zhangSu_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.junLiang5Ri_ = junLiang5Ri_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.shangZhangJiaShu_ = shangZhangJiaShu_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.xiaDieJiaShu_ = xiaDieJiaShu_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.pingPanJiaShu_ = pingPanJiaShu_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.aGuShangZhangJiaShu_ = aGuShangZhangJiaShu_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.aGuXiaDieJiaShu_ = aGuXiaDieJiaShu_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.aGuPingPanJiaShu_ = aGuPingPanJiaShu_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.aGuChengJiaoE_ = aGuChengJiaoE_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.bGuShangZhangJiaShu_ = bGuShangZhangJiaShu_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.bGuXiaDieJiaShu_ = bGuXiaDieJiaShu_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.bGuPingPanJiaShu_ = bGuPingPanJiaShu_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.bGuChengJiaoE_ = bGuChengJiaoE_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.jiJinShangZhangJiaShu_ = jiJinShangZhangJiaShu_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.jiJinXiaDieJiaShu_ = jiJinXiaDieJiaShu_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.jiJinPingPanJiaShu_ = jiJinPingPanJiaShu_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.jiJinChengJiaoE_ = jiJinChengJiaoE_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        result.qiTaShangZhangJiaShu_ = qiTaShangZhangJiaShu_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000002;
        }
        result.qiTaXiaDieJiaShu_ = qiTaXiaDieJiaShu_;
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000004;
        }
        result.qiTaPingPanJiaShu_ = qiTaPingPanJiaShu_;
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField2_ |= 0x00000008;
        }
        result.qiTaChengJiaoE_ = qiTaChengJiaoE_;
        if (((from_bitField2_ & 0x00000010) == 0x00000010)) {
          to_bitField2_ |= 0x00000010;
        }
        result.maiRuDanShu_ = maiRuDanShu_;
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField2_ |= 0x00000020;
        }
        result.maiChuDanShu_ = maiChuDanShu_;
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField2_ |= 0x00000040;
        }
        result.maiRuZhongDanBiLi_ = maiRuZhongDanBiLi_;
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField2_ |= 0x00000080;
        }
        result.maiRuDaDanBiLi_ = maiRuDaDanBiLi_;
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField2_ |= 0x00000100;
        }
        result.maiRuTeDaDanBiLi_ = maiRuTeDaDanBiLi_;
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField2_ |= 0x00000200;
        }
        result.maiChuZhongDanBiLi_ = maiChuZhongDanBiLi_;
        if (((from_bitField2_ & 0x00000400) == 0x00000400)) {
          to_bitField2_ |= 0x00000400;
        }
        result.maiChuDaDanBiLi_ = maiChuDaDanBiLi_;
        if (((from_bitField2_ & 0x00000800) == 0x00000800)) {
          to_bitField2_ |= 0x00000800;
        }
        result.maiChuTeDaDanBiLi_ = maiChuTeDaDanBiLi_;
        if (((from_bitField2_ & 0x00001000) == 0x00001000)) {
          to_bitField2_ |= 0x00001000;
        }
        result.fenZhongZhangFu1_ = fenZhongZhangFu1_;
        if (((from_bitField2_ & 0x00002000) == 0x00002000)) {
          to_bitField2_ |= 0x00002000;
        }
        result.fenZhongZhangFu2_ = fenZhongZhangFu2_;
        if (((from_bitField2_ & 0x00004000) == 0x00004000)) {
          to_bitField2_ |= 0x00004000;
        }
        result.fenZhongZhangFu3_ = fenZhongZhangFu3_;
        if (((from_bitField2_ & 0x00008000) == 0x00008000)) {
          to_bitField2_ |= 0x00008000;
        }
        result.fenZhongZhangFu4_ = fenZhongZhangFu4_;
        if (((from_bitField2_ & 0x00010000) == 0x00010000)) {
          to_bitField2_ |= 0x00010000;
        }
        result.fenZhongZhangFu5_ = fenZhongZhangFu5_;
        if (((from_bitField2_ & 0x00020000) == 0x00020000)) {
          to_bitField2_ |= 0x00020000;
        }
        result.shiYingLv_ = shiYingLv_;
        if (((from_bitField2_ & 0x00040000) == 0x00040000)) {
          to_bitField2_ |= 0x00040000;
        }
        result.zhangTing_ = zhangTing_;
        if (((from_bitField2_ & 0x00080000) == 0x00080000)) {
          to_bitField2_ |= 0x00080000;
        }
        result.dieTing_ = dieTing_;
        if (((from_bitField2_ & 0x00100000) == 0x00100000)) {
          to_bitField2_ |= 0x00100000;
        }
        result.shiChangMingCheng_ = shiChangMingCheng_;
        if (((from_bitField2_ & 0x00200000) == 0x00200000)) {
          to_bitField2_ |= 0x00200000;
        }
        result.shiChangDuanMingCheng_ = shiChangDuanMingCheng_;
        if (((from_bitField2_ & 0x00400000) == 0x00400000)) {
          to_bitField2_ |= 0x00400000;
        }
        result.jiGouChiHuoShu_ = jiGouChiHuoShu_;
        if (((from_bitField2_ & 0x00800000) == 0x00800000)) {
          to_bitField2_ |= 0x00800000;
        }
        result.jiGouTuHuoShu_ = jiGouTuHuoShu_;
        if (((from_bitField2_ & 0x01000000) == 0x01000000)) {
          to_bitField2_ |= 0x01000000;
        }
        result.jiGouChiHuoLiang_ = jiGouChiHuoLiang_;
        if (((from_bitField2_ & 0x02000000) == 0x02000000)) {
          to_bitField2_ |= 0x02000000;
        }
        result.jiGouTuHuoLiang_ = jiGouTuHuoLiang_;
        if (((from_bitField2_ & 0x04000000) == 0x04000000)) {
          to_bitField2_ |= 0x04000000;
        }
        result.jiGouChiHuoJunE_ = jiGouChiHuoJunE_;
        if (((from_bitField2_ & 0x08000000) == 0x08000000)) {
          to_bitField2_ |= 0x08000000;
        }
        result.jiGouTuHuoJunE_ = jiGouTuHuoJunE_;
        if (((from_bitField2_ & 0x10000000) == 0x10000000)) {
          to_bitField2_ |= 0x10000000;
        }
        result.meiShouGuShu_ = meiShouGuShu_;
        if (((from_bitField2_ & 0x20000000) == 0x20000000)) {
          to_bitField2_ |= 0x20000000;
        }
        result.jiaoYiDanWei_ = jiaoYiDanWei_;
        if (((from_bitField2_ & 0x40000000) == 0x40000000)) {
          to_bitField2_ |= 0x40000000;
        }
        result.shiXiaoLv_ = shiXiaoLv_;
        if (((from_bitField2_ & 0x80000000) == 0x80000000)) {
          to_bitField2_ |= 0x80000000;
        }
        result.shiJian_ = shiJian_;
        if (((from_bitField3_ & 0x00000001) == 0x00000001)) {
          to_bitField3_ |= 0x00000001;
        }
        result.shiJingLv_ = shiJingLv_;
        if (((from_bitField3_ & 0x00000002) == 0x00000002)) {
          to_bitField3_ |= 0x00000002;
        }
        result.zongShiZhi_ = zongShiZhi_;
        if (((from_bitField3_ & 0x00000004) == 0x00000004)) {
          to_bitField3_ |= 0x00000004;
        }
        result.liuTongShiZhi_ = liuTongShiZhi_;
        if (((from_bitField3_ & 0x00000008) == 0x00000008)) {
          to_bitField3_ |= 0x00000008;
        }
        result.mA1MinMA1_ = mA1MinMA1_;
        if (((from_bitField3_ & 0x00000010) == 0x00000010)) {
          to_bitField3_ |= 0x00000010;
        }
        result.mA1MinMA2_ = mA1MinMA2_;
        if (((from_bitField3_ & 0x00000020) == 0x00000020)) {
          to_bitField3_ |= 0x00000020;
        }
        result.mA1MinMA3_ = mA1MinMA3_;
        if (((from_bitField3_ & 0x00000040) == 0x00000040)) {
          to_bitField3_ |= 0x00000040;
        }
        result.mA1MinMA4_ = mA1MinMA4_;
        if (((from_bitField3_ & 0x00000080) == 0x00000080)) {
          to_bitField3_ |= 0x00000080;
        }
        result.mA1MinMA5_ = mA1MinMA5_;
        if (((from_bitField3_ & 0x00000100) == 0x00000100)) {
          to_bitField3_ |= 0x00000100;
        }
        result.mA1MinMA6_ = mA1MinMA6_;
        if (((from_bitField3_ & 0x00000200) == 0x00000200)) {
          to_bitField3_ |= 0x00000200;
        }
        result.mA5MinMA1_ = mA5MinMA1_;
        if (((from_bitField3_ & 0x00000400) == 0x00000400)) {
          to_bitField3_ |= 0x00000400;
        }
        result.mA5MinMA2_ = mA5MinMA2_;
        if (((from_bitField3_ & 0x00000800) == 0x00000800)) {
          to_bitField3_ |= 0x00000800;
        }
        result.mA5MinMA3_ = mA5MinMA3_;
        if (((from_bitField3_ & 0x00001000) == 0x00001000)) {
          to_bitField3_ |= 0x00001000;
        }
        result.mA5MinMA4_ = mA5MinMA4_;
        if (((from_bitField3_ & 0x00002000) == 0x00002000)) {
          to_bitField3_ |= 0x00002000;
        }
        result.mA5MinMA5_ = mA5MinMA5_;
        if (((from_bitField3_ & 0x00004000) == 0x00004000)) {
          to_bitField3_ |= 0x00004000;
        }
        result.mA5MinMA6_ = mA5MinMA6_;
        if (((from_bitField3_ & 0x00008000) == 0x00008000)) {
          to_bitField3_ |= 0x00008000;
        }
        result.mA1DayMA1_ = mA1DayMA1_;
        if (((from_bitField3_ & 0x00010000) == 0x00010000)) {
          to_bitField3_ |= 0x00010000;
        }
        result.mA1DayMA2_ = mA1DayMA2_;
        if (((from_bitField3_ & 0x00020000) == 0x00020000)) {
          to_bitField3_ |= 0x00020000;
        }
        result.mA1DayMA3_ = mA1DayMA3_;
        if (((from_bitField3_ & 0x00040000) == 0x00040000)) {
          to_bitField3_ |= 0x00040000;
        }
        result.mA1DayMA4_ = mA1DayMA4_;
        if (((from_bitField3_ & 0x00080000) == 0x00080000)) {
          to_bitField3_ |= 0x00080000;
        }
        result.mA1DayMA5_ = mA1DayMA5_;
        if (((from_bitField3_ & 0x00100000) == 0x00100000)) {
          to_bitField3_ |= 0x00100000;
        }
        result.mA1DayMA6_ = mA1DayMA6_;
        if (((from_bitField3_ & 0x00200000) == 0x00200000)) {
          to_bitField3_ |= 0x00200000;
        }
        result.bOLL1MinMID_ = bOLL1MinMID_;
        if (((from_bitField3_ & 0x00400000) == 0x00400000)) {
          to_bitField3_ |= 0x00400000;
        }
        result.bOLL1MinUPPER_ = bOLL1MinUPPER_;
        if (((from_bitField3_ & 0x00800000) == 0x00800000)) {
          to_bitField3_ |= 0x00800000;
        }
        result.bOLL1MinLOWER_ = bOLL1MinLOWER_;
        if (((from_bitField3_ & 0x01000000) == 0x01000000)) {
          to_bitField3_ |= 0x01000000;
        }
        result.bOLL5MinMID_ = bOLL5MinMID_;
        if (((from_bitField3_ & 0x02000000) == 0x02000000)) {
          to_bitField3_ |= 0x02000000;
        }
        result.bOLL5MinUPPER_ = bOLL5MinUPPER_;
        if (((from_bitField3_ & 0x04000000) == 0x04000000)) {
          to_bitField3_ |= 0x04000000;
        }
        result.bOLL5MinLOWER_ = bOLL5MinLOWER_;
        if (((from_bitField3_ & 0x08000000) == 0x08000000)) {
          to_bitField3_ |= 0x08000000;
        }
        result.bOLL1DayMID_ = bOLL1DayMID_;
        if (((from_bitField3_ & 0x10000000) == 0x10000000)) {
          to_bitField3_ |= 0x10000000;
        }
        result.bOLL1DayUPPER_ = bOLL1DayUPPER_;
        if (((from_bitField3_ & 0x20000000) == 0x20000000)) {
          to_bitField3_ |= 0x20000000;
        }
        result.bOLL1DayLOWER_ = bOLL1DayLOWER_;
        if (((from_bitField3_ & 0x40000000) == 0x40000000)) {
          to_bitField3_ |= 0x40000000;
        }
        result.vOL1Min_ = vOL1Min_;
        if (((from_bitField3_ & 0x80000000) == 0x80000000)) {
          to_bitField3_ |= 0x80000000;
        }
        result.vOL1MinMA1_ = vOL1MinMA1_;
        if (((from_bitField4_ & 0x00000001) == 0x00000001)) {
          to_bitField4_ |= 0x00000001;
        }
        result.vOL1MinMA2_ = vOL1MinMA2_;
        if (((from_bitField4_ & 0x00000002) == 0x00000002)) {
          to_bitField4_ |= 0x00000002;
        }
        result.vOL1MinMA3_ = vOL1MinMA3_;
        if (((from_bitField4_ & 0x00000004) == 0x00000004)) {
          to_bitField4_ |= 0x00000004;
        }
        result.vOL5Min_ = vOL5Min_;
        if (((from_bitField4_ & 0x00000008) == 0x00000008)) {
          to_bitField4_ |= 0x00000008;
        }
        result.vOL5MinMA1_ = vOL5MinMA1_;
        if (((from_bitField4_ & 0x00000010) == 0x00000010)) {
          to_bitField4_ |= 0x00000010;
        }
        result.vOL5MinMA2_ = vOL5MinMA2_;
        if (((from_bitField4_ & 0x00000020) == 0x00000020)) {
          to_bitField4_ |= 0x00000020;
        }
        result.vOL5MinMA3_ = vOL5MinMA3_;
        if (((from_bitField4_ & 0x00000040) == 0x00000040)) {
          to_bitField4_ |= 0x00000040;
        }
        result.vOL1Day_ = vOL1Day_;
        if (((from_bitField4_ & 0x00000080) == 0x00000080)) {
          to_bitField4_ |= 0x00000080;
        }
        result.vOL1DayMA1_ = vOL1DayMA1_;
        if (((from_bitField4_ & 0x00000100) == 0x00000100)) {
          to_bitField4_ |= 0x00000100;
        }
        result.vOL1DayMA2_ = vOL1DayMA2_;
        if (((from_bitField4_ & 0x00000200) == 0x00000200)) {
          to_bitField4_ |= 0x00000200;
        }
        result.vOL1DayMA3_ = vOL1DayMA3_;
        if (((from_bitField4_ & 0x00000400) == 0x00000400)) {
          to_bitField4_ |= 0x00000400;
        }
        result.aRBR1MinAR_ = aRBR1MinAR_;
        if (((from_bitField4_ & 0x00000800) == 0x00000800)) {
          to_bitField4_ |= 0x00000800;
        }
        result.aRBR1MinBR_ = aRBR1MinBR_;
        if (((from_bitField4_ & 0x00001000) == 0x00001000)) {
          to_bitField4_ |= 0x00001000;
        }
        result.aRBR5MinAR_ = aRBR5MinAR_;
        if (((from_bitField4_ & 0x00002000) == 0x00002000)) {
          to_bitField4_ |= 0x00002000;
        }
        result.aRBR5MinBR_ = aRBR5MinBR_;
        if (((from_bitField4_ & 0x00004000) == 0x00004000)) {
          to_bitField4_ |= 0x00004000;
        }
        result.aRBR1DayAR_ = aRBR1DayAR_;
        if (((from_bitField4_ & 0x00008000) == 0x00008000)) {
          to_bitField4_ |= 0x00008000;
        }
        result.aRBR1DayBR_ = aRBR1DayBR_;
        if (((from_bitField4_ & 0x00010000) == 0x00010000)) {
          to_bitField4_ |= 0x00010000;
        }
        result.bIAS1MinBIAS1_ = bIAS1MinBIAS1_;
        if (((from_bitField4_ & 0x00020000) == 0x00020000)) {
          to_bitField4_ |= 0x00020000;
        }
        result.bIAS1MinBIAS2_ = bIAS1MinBIAS2_;
        if (((from_bitField4_ & 0x00040000) == 0x00040000)) {
          to_bitField4_ |= 0x00040000;
        }
        result.bIAS1MinBIAS3_ = bIAS1MinBIAS3_;
        if (((from_bitField4_ & 0x00080000) == 0x00080000)) {
          to_bitField4_ |= 0x00080000;
        }
        result.bIAS5MinBIAS1_ = bIAS5MinBIAS1_;
        if (((from_bitField4_ & 0x00100000) == 0x00100000)) {
          to_bitField4_ |= 0x00100000;
        }
        result.bIAS5MinBIAS2_ = bIAS5MinBIAS2_;
        if (((from_bitField4_ & 0x00200000) == 0x00200000)) {
          to_bitField4_ |= 0x00200000;
        }
        result.bIAS5MinBIAS3_ = bIAS5MinBIAS3_;
        if (((from_bitField4_ & 0x00400000) == 0x00400000)) {
          to_bitField4_ |= 0x00400000;
        }
        result.bIAS1DayBIAS1_ = bIAS1DayBIAS1_;
        if (((from_bitField4_ & 0x00800000) == 0x00800000)) {
          to_bitField4_ |= 0x00800000;
        }
        result.bIAS1DayBIAS2_ = bIAS1DayBIAS2_;
        if (((from_bitField4_ & 0x01000000) == 0x01000000)) {
          to_bitField4_ |= 0x01000000;
        }
        result.bIAS1DayBIAS3_ = bIAS1DayBIAS3_;
        if (((from_bitField4_ & 0x02000000) == 0x02000000)) {
          to_bitField4_ |= 0x02000000;
        }
        result.cCI1Min_ = cCI1Min_;
        if (((from_bitField4_ & 0x04000000) == 0x04000000)) {
          to_bitField4_ |= 0x04000000;
        }
        result.cCI5Min_ = cCI5Min_;
        if (((from_bitField4_ & 0x08000000) == 0x08000000)) {
          to_bitField4_ |= 0x08000000;
        }
        result.cCI1Day_ = cCI1Day_;
        if (((from_bitField4_ & 0x10000000) == 0x10000000)) {
          to_bitField4_ |= 0x10000000;
        }
        result.cJBS1MinCJBS_ = cJBS1MinCJBS_;
        if (((from_bitField4_ & 0x20000000) == 0x20000000)) {
          to_bitField4_ |= 0x20000000;
        }
        result.cJBS5MinCJBS_ = cJBS5MinCJBS_;
        if (((from_bitField4_ & 0x40000000) == 0x40000000)) {
          to_bitField4_ |= 0x40000000;
        }
        result.cJBS1DayCJBS_ = cJBS1DayCJBS_;
        if (((from_bitField4_ & 0x80000000) == 0x80000000)) {
          to_bitField4_ |= 0x80000000;
        }
        result.cR1MinCR_ = cR1MinCR_;
        if (((from_bitField5_ & 0x00000001) == 0x00000001)) {
          to_bitField5_ |= 0x00000001;
        }
        result.cR1MinMA1_ = cR1MinMA1_;
        if (((from_bitField5_ & 0x00000002) == 0x00000002)) {
          to_bitField5_ |= 0x00000002;
        }
        result.cR1MinMA2_ = cR1MinMA2_;
        if (((from_bitField5_ & 0x00000004) == 0x00000004)) {
          to_bitField5_ |= 0x00000004;
        }
        result.cR1MinMA3_ = cR1MinMA3_;
        if (((from_bitField5_ & 0x00000008) == 0x00000008)) {
          to_bitField5_ |= 0x00000008;
        }
        result.cR5MinCR_ = cR5MinCR_;
        if (((from_bitField5_ & 0x00000010) == 0x00000010)) {
          to_bitField5_ |= 0x00000010;
        }
        result.cR5MinMA1_ = cR5MinMA1_;
        if (((from_bitField5_ & 0x00000020) == 0x00000020)) {
          to_bitField5_ |= 0x00000020;
        }
        result.cR5MinMA2_ = cR5MinMA2_;
        if (((from_bitField5_ & 0x00000040) == 0x00000040)) {
          to_bitField5_ |= 0x00000040;
        }
        result.cR5MinMA3_ = cR5MinMA3_;
        if (((from_bitField5_ & 0x00000080) == 0x00000080)) {
          to_bitField5_ |= 0x00000080;
        }
        result.cR1DayCR_ = cR1DayCR_;
        if (((from_bitField5_ & 0x00000100) == 0x00000100)) {
          to_bitField5_ |= 0x00000100;
        }
        result.cR1DayMA1_ = cR1DayMA1_;
        if (((from_bitField5_ & 0x00000200) == 0x00000200)) {
          to_bitField5_ |= 0x00000200;
        }
        result.cR1DayMA2_ = cR1DayMA2_;
        if (((from_bitField5_ & 0x00000400) == 0x00000400)) {
          to_bitField5_ |= 0x00000400;
        }
        result.cR1DayMA3_ = cR1DayMA3_;
        if (((from_bitField5_ & 0x00000800) == 0x00000800)) {
          to_bitField5_ |= 0x00000800;
        }
        result.dMA1MinDDD_ = dMA1MinDDD_;
        if (((from_bitField5_ & 0x00001000) == 0x00001000)) {
          to_bitField5_ |= 0x00001000;
        }
        result.dMA1MinAMA_ = dMA1MinAMA_;
        if (((from_bitField5_ & 0x00002000) == 0x00002000)) {
          to_bitField5_ |= 0x00002000;
        }
        result.dMA5MinDDD_ = dMA5MinDDD_;
        if (((from_bitField5_ & 0x00004000) == 0x00004000)) {
          to_bitField5_ |= 0x00004000;
        }
        result.dMA5MinAMA_ = dMA5MinAMA_;
        if (((from_bitField5_ & 0x00008000) == 0x00008000)) {
          to_bitField5_ |= 0x00008000;
        }
        result.dMA1DayDDD_ = dMA1DayDDD_;
        if (((from_bitField5_ & 0x00010000) == 0x00010000)) {
          to_bitField5_ |= 0x00010000;
        }
        result.dMA1DayAMA_ = dMA1DayAMA_;
        if (((from_bitField5_ & 0x00020000) == 0x00020000)) {
          to_bitField5_ |= 0x00020000;
        }
        result.dMI1MinPDI_ = dMI1MinPDI_;
        if (((from_bitField5_ & 0x00040000) == 0x00040000)) {
          to_bitField5_ |= 0x00040000;
        }
        result.dMI1MinMDI_ = dMI1MinMDI_;
        if (((from_bitField5_ & 0x00080000) == 0x00080000)) {
          to_bitField5_ |= 0x00080000;
        }
        result.dMI1MinADX_ = dMI1MinADX_;
        if (((from_bitField5_ & 0x00100000) == 0x00100000)) {
          to_bitField5_ |= 0x00100000;
        }
        result.dMI1MinADXR_ = dMI1MinADXR_;
        if (((from_bitField5_ & 0x00200000) == 0x00200000)) {
          to_bitField5_ |= 0x00200000;
        }
        result.dMI5MinPDI_ = dMI5MinPDI_;
        if (((from_bitField5_ & 0x00400000) == 0x00400000)) {
          to_bitField5_ |= 0x00400000;
        }
        result.dMI5MinMDI_ = dMI5MinMDI_;
        if (((from_bitField5_ & 0x00800000) == 0x00800000)) {
          to_bitField5_ |= 0x00800000;
        }
        result.dMI5MinADX_ = dMI5MinADX_;
        if (((from_bitField5_ & 0x01000000) == 0x01000000)) {
          to_bitField5_ |= 0x01000000;
        }
        result.dMI5MinADXR_ = dMI5MinADXR_;
        if (((from_bitField5_ & 0x02000000) == 0x02000000)) {
          to_bitField5_ |= 0x02000000;
        }
        result.dMI1DayPDI_ = dMI1DayPDI_;
        if (((from_bitField5_ & 0x04000000) == 0x04000000)) {
          to_bitField5_ |= 0x04000000;
        }
        result.dMI1DayMDI_ = dMI1DayMDI_;
        if (((from_bitField5_ & 0x08000000) == 0x08000000)) {
          to_bitField5_ |= 0x08000000;
        }
        result.dMI1DayADX_ = dMI1DayADX_;
        if (((from_bitField5_ & 0x10000000) == 0x10000000)) {
          to_bitField5_ |= 0x10000000;
        }
        result.dMI1DayADXR_ = dMI1DayADXR_;
        if (((from_bitField5_ & 0x20000000) == 0x20000000)) {
          to_bitField5_ |= 0x20000000;
        }
        result.kDJ1MinK_ = kDJ1MinK_;
        if (((from_bitField5_ & 0x40000000) == 0x40000000)) {
          to_bitField5_ |= 0x40000000;
        }
        result.kDJ1MinD_ = kDJ1MinD_;
        if (((from_bitField5_ & 0x80000000) == 0x80000000)) {
          to_bitField5_ |= 0x80000000;
        }
        result.kDJ1MinJ_ = kDJ1MinJ_;
        if (((from_bitField6_ & 0x00000001) == 0x00000001)) {
          to_bitField6_ |= 0x00000001;
        }
        result.kDJ5MinK_ = kDJ5MinK_;
        if (((from_bitField6_ & 0x00000002) == 0x00000002)) {
          to_bitField6_ |= 0x00000002;
        }
        result.kDJ5MinD_ = kDJ5MinD_;
        if (((from_bitField6_ & 0x00000004) == 0x00000004)) {
          to_bitField6_ |= 0x00000004;
        }
        result.kDJ5MinJ_ = kDJ5MinJ_;
        if (((from_bitField6_ & 0x00000008) == 0x00000008)) {
          to_bitField6_ |= 0x00000008;
        }
        result.kDJ1DayK_ = kDJ1DayK_;
        if (((from_bitField6_ & 0x00000010) == 0x00000010)) {
          to_bitField6_ |= 0x00000010;
        }
        result.kDJ1DayD_ = kDJ1DayD_;
        if (((from_bitField6_ & 0x00000020) == 0x00000020)) {
          to_bitField6_ |= 0x00000020;
        }
        result.kDJ1DayJ_ = kDJ1DayJ_;
        if (((from_bitField6_ & 0x00000040) == 0x00000040)) {
          to_bitField6_ |= 0x00000040;
        }
        result.mACD1MinDIFF_ = mACD1MinDIFF_;
        if (((from_bitField6_ & 0x00000080) == 0x00000080)) {
          to_bitField6_ |= 0x00000080;
        }
        result.mACD1MinDEA_ = mACD1MinDEA_;
        if (((from_bitField6_ & 0x00000100) == 0x00000100)) {
          to_bitField6_ |= 0x00000100;
        }
        result.mACD1MinMACD_ = mACD1MinMACD_;
        if (((from_bitField6_ & 0x00000200) == 0x00000200)) {
          to_bitField6_ |= 0x00000200;
        }
        result.mACD5MinDIFF_ = mACD5MinDIFF_;
        if (((from_bitField6_ & 0x00000400) == 0x00000400)) {
          to_bitField6_ |= 0x00000400;
        }
        result.mACD5MinDEA_ = mACD5MinDEA_;
        if (((from_bitField6_ & 0x00000800) == 0x00000800)) {
          to_bitField6_ |= 0x00000800;
        }
        result.mACD5MinMACD_ = mACD5MinMACD_;
        if (((from_bitField6_ & 0x00001000) == 0x00001000)) {
          to_bitField6_ |= 0x00001000;
        }
        result.mACD1DayDIFF_ = mACD1DayDIFF_;
        if (((from_bitField6_ & 0x00002000) == 0x00002000)) {
          to_bitField6_ |= 0x00002000;
        }
        result.mACD1DayDEA_ = mACD1DayDEA_;
        if (((from_bitField6_ & 0x00004000) == 0x00004000)) {
          to_bitField6_ |= 0x00004000;
        }
        result.mACD1DayMACD_ = mACD1DayMACD_;
        if (((from_bitField6_ & 0x00008000) == 0x00008000)) {
          to_bitField6_ |= 0x00008000;
        }
        result.oBV1Min_ = oBV1Min_;
        if (((from_bitField6_ & 0x00010000) == 0x00010000)) {
          to_bitField6_ |= 0x00010000;
        }
        result.oBV5Min_ = oBV5Min_;
        if (((from_bitField6_ & 0x00020000) == 0x00020000)) {
          to_bitField6_ |= 0x00020000;
        }
        result.oBV1Day_ = oBV1Day_;
        if (((from_bitField6_ & 0x00040000) == 0x00040000)) {
          to_bitField6_ |= 0x00040000;
        }
        result.pSY1Min_ = pSY1Min_;
        if (((from_bitField6_ & 0x00080000) == 0x00080000)) {
          to_bitField6_ |= 0x00080000;
        }
        result.pSY5Min_ = pSY5Min_;
        if (((from_bitField6_ & 0x00100000) == 0x00100000)) {
          to_bitField6_ |= 0x00100000;
        }
        result.pSY1Day_ = pSY1Day_;
        if (((from_bitField6_ & 0x00200000) == 0x00200000)) {
          to_bitField6_ |= 0x00200000;
        }
        result.rSI1MinRSI1_ = rSI1MinRSI1_;
        if (((from_bitField6_ & 0x00400000) == 0x00400000)) {
          to_bitField6_ |= 0x00400000;
        }
        result.rSI1MinRSI2_ = rSI1MinRSI2_;
        if (((from_bitField6_ & 0x00800000) == 0x00800000)) {
          to_bitField6_ |= 0x00800000;
        }
        result.rSI1MinRSI3_ = rSI1MinRSI3_;
        if (((from_bitField6_ & 0x01000000) == 0x01000000)) {
          to_bitField6_ |= 0x01000000;
        }
        result.rSI5MinRSI1_ = rSI5MinRSI1_;
        if (((from_bitField6_ & 0x02000000) == 0x02000000)) {
          to_bitField6_ |= 0x02000000;
        }
        result.rSI5MinRSI2_ = rSI5MinRSI2_;
        if (((from_bitField6_ & 0x04000000) == 0x04000000)) {
          to_bitField6_ |= 0x04000000;
        }
        result.rSI5MinRSI3_ = rSI5MinRSI3_;
        if (((from_bitField6_ & 0x08000000) == 0x08000000)) {
          to_bitField6_ |= 0x08000000;
        }
        result.rSI1DayRSI1_ = rSI1DayRSI1_;
        if (((from_bitField6_ & 0x10000000) == 0x10000000)) {
          to_bitField6_ |= 0x10000000;
        }
        result.rSI1DayRSI2_ = rSI1DayRSI2_;
        if (((from_bitField6_ & 0x20000000) == 0x20000000)) {
          to_bitField6_ |= 0x20000000;
        }
        result.rSI1DayRSI3_ = rSI1DayRSI3_;
        if (((from_bitField6_ & 0x40000000) == 0x40000000)) {
          to_bitField6_ |= 0x40000000;
        }
        result.wR1MinWR1_ = wR1MinWR1_;
        if (((from_bitField6_ & 0x80000000) == 0x80000000)) {
          to_bitField6_ |= 0x80000000;
        }
        result.wR1MinWR2_ = wR1MinWR2_;
        if (((from_bitField7_ & 0x00000001) == 0x00000001)) {
          to_bitField7_ |= 0x00000001;
        }
        result.wR5MinWR1_ = wR5MinWR1_;
        if (((from_bitField7_ & 0x00000002) == 0x00000002)) {
          to_bitField7_ |= 0x00000002;
        }
        result.wR5MinWR2_ = wR5MinWR2_;
        if (((from_bitField7_ & 0x00000004) == 0x00000004)) {
          to_bitField7_ |= 0x00000004;
        }
        result.wR1DayWR1_ = wR1DayWR1_;
        if (((from_bitField7_ & 0x00000008) == 0x00000008)) {
          to_bitField7_ |= 0x00000008;
        }
        result.wR1DayWR2_ = wR1DayWR2_;
        if (((from_bitField7_ & 0x00000010) == 0x00000010)) {
          to_bitField7_ |= 0x00000010;
        }
        result.leiXing_ = leiXing_;
        if (((from_bitField7_ & 0x00000020) == 0x00000020)) {
          to_bitField7_ |= 0x00000020;
        }
        result.ziLeiXing_ = ziLeiXing_;
        if (((from_bitField7_ & 0x00000040) == 0x00000040)) {
          to_bitField7_ |= 0x00000040;
        }
        result.leiXingMingCheng_ = leiXingMingCheng_;
        if (((from_bitField7_ & 0x00000080) == 0x00000080)) {
          to_bitField7_ |= 0x00000080;
        }
        result.chengJiaoLiangDanWei_ = chengJiaoLiangDanWei_;
        if (((from_bitField7_ & 0x00000100) == 0x00000100)) {
          to_bitField7_ |= 0x00000100;
        }
        result.fJJJLeiXing_ = fJJJLeiXing_;
        if (((from_bitField7_ & 0x00000200) == 0x00000200)) {
          to_bitField7_ |= 0x00000200;
        }
        result.zhengTiYiJia_ = zhengTiYiJia_;
        if (((from_bitField7_ & 0x00000400) == 0x00000400)) {
          to_bitField7_ |= 0x00000400;
        }
        result.mYiJia_ = mYiJia_;
        if (((from_bitField7_ & 0x00000800) == 0x00000800)) {
          to_bitField7_ |= 0x00000800;
        }
        result.mShiShiJingZhi_ = mShiShiJingZhi_;
        if (((from_bitField7_ & 0x00001000) == 0x00001000)) {
          to_bitField7_ |= 0x00001000;
        }
        result.mShangZheXuZhang_ = mShangZheXuZhang_;
        if (((from_bitField7_ & 0x00002000) == 0x00002000)) {
          to_bitField7_ |= 0x00002000;
        }
        result.mXiaZheXuDie_ = mXiaZheXuDie_;
        if (((from_bitField7_ & 0x00004000) == 0x00004000)) {
          to_bitField7_ |= 0x00004000;
        }
        result.yinHanShouYi_ = yinHanShouYi_;
        if (((from_bitField7_ & 0x00008000) == 0x00008000)) {
          to_bitField7_ |= 0x00008000;
        }
        result.jiaGeGangGan_ = jiaGeGangGan_;
        if (((from_bitField7_ & 0x00010000) == 0x00010000)) {
          to_bitField7_ |= 0x00010000;
        }
        result.pinZhongObj_ = pinZhongObj_;
        if (((from_bitField7_ & 0x00020000) == 0x00020000)) {
          to_bitField7_ |= 0x00020000;
        }
        result.baoGaoQi_ = baoGaoQi_;
        if (((from_bitField7_ & 0x00040000) == 0x00040000)) {
          to_bitField7_ |= 0x00040000;
        }
        result.shangShiRiQi_ = shangShiRiQi_;
        if (((from_bitField7_ & 0x00080000) == 0x00080000)) {
          to_bitField7_ |= 0x00080000;
        }
        result.meiGuShouYi_ = meiGuShouYi_;
        if (((from_bitField7_ & 0x00100000) == 0x00100000)) {
          to_bitField7_ |= 0x00100000;
        }
        result.meiGuJingZiChan_ = meiGuJingZiChan_;
        if (((from_bitField7_ & 0x00200000) == 0x00200000)) {
          to_bitField7_ |= 0x00200000;
        }
        result.jingZiChanShouYiLv_ = jingZiChanShouYiLv_;
        if (((from_bitField7_ & 0x00400000) == 0x00400000)) {
          to_bitField7_ |= 0x00400000;
        }
        result.meiGuJingYingXianJin_ = meiGuJingYingXianJin_;
        if (((from_bitField7_ & 0x00800000) == 0x00800000)) {
          to_bitField7_ |= 0x00800000;
        }
        result.meiGuGongJiJin_ = meiGuGongJiJin_;
        if (((from_bitField7_ & 0x01000000) == 0x01000000)) {
          to_bitField7_ |= 0x01000000;
        }
        result.meiGuWeiFenPei_ = meiGuWeiFenPei_;
        if (((from_bitField7_ & 0x02000000) == 0x02000000)) {
          to_bitField7_ |= 0x02000000;
        }
        result.guDongQuanYiBi_ = guDongQuanYiBi_;
        if (((from_bitField7_ & 0x04000000) == 0x04000000)) {
          to_bitField7_ |= 0x04000000;
        }
        result.jingLiRunTongBi_ = jingLiRunTongBi_;
        if (((from_bitField7_ & 0x08000000) == 0x08000000)) {
          to_bitField7_ |= 0x08000000;
        }
        result.zhuYingShouRuTongBi_ = zhuYingShouRuTongBi_;
        if (((from_bitField7_ & 0x10000000) == 0x10000000)) {
          to_bitField7_ |= 0x10000000;
        }
        result.xiaoShouMaoLiLv_ = xiaoShouMaoLiLv_;
        if (((from_bitField7_ & 0x20000000) == 0x20000000)) {
          to_bitField7_ |= 0x20000000;
        }
        result.tiaoZhengMeiGuJingZi_ = tiaoZhengMeiGuJingZi_;
        if (((from_bitField7_ & 0x40000000) == 0x40000000)) {
          to_bitField7_ |= 0x40000000;
        }
        result.zongZiChan_ = zongZiChan_;
        if (((from_bitField7_ & 0x80000000) == 0x80000000)) {
          to_bitField7_ |= 0x80000000;
        }
        result.liuDongZiChan_ = liuDongZiChan_;
        if (((from_bitField8_ & 0x00000001) == 0x00000001)) {
          to_bitField8_ |= 0x00000001;
        }
        result.guDingZiChan_ = guDingZiChan_;
        if (((from_bitField8_ & 0x00000002) == 0x00000002)) {
          to_bitField8_ |= 0x00000002;
        }
        result.wuXingZiChan_ = wuXingZiChan_;
        if (((from_bitField8_ & 0x00000004) == 0x00000004)) {
          to_bitField8_ |= 0x00000004;
        }
        result.liuDongFuZhai_ = liuDongFuZhai_;
        if (((from_bitField8_ & 0x00000008) == 0x00000008)) {
          to_bitField8_ |= 0x00000008;
        }
        result.changQiFuZhai_ = changQiFuZhai_;
        if (((from_bitField8_ & 0x00000010) == 0x00000010)) {
          to_bitField8_ |= 0x00000010;
        }
        result.zongFuZhai_ = zongFuZhai_;
        if (((from_bitField8_ & 0x00000020) == 0x00000020)) {
          to_bitField8_ |= 0x00000020;
        }
        result.guDongQuanYi_ = guDongQuanYi_;
        if (((from_bitField8_ & 0x00000040) == 0x00000040)) {
          to_bitField8_ |= 0x00000040;
        }
        result.ziBenGongJiJin_ = ziBenGongJiJin_;
        if (((from_bitField8_ & 0x00000080) == 0x00000080)) {
          to_bitField8_ |= 0x00000080;
        }
        result.jingYingXianJinLiuLiang_ = jingYingXianJinLiuLiang_;
        if (((from_bitField8_ & 0x00000100) == 0x00000100)) {
          to_bitField8_ |= 0x00000100;
        }
        result.touZiXianJinLiuLiang_ = touZiXianJinLiuLiang_;
        if (((from_bitField8_ & 0x00000200) == 0x00000200)) {
          to_bitField8_ |= 0x00000200;
        }
        result.chouZiXianJinLiuLiang_ = chouZiXianJinLiuLiang_;
        if (((from_bitField8_ & 0x00000400) == 0x00000400)) {
          to_bitField8_ |= 0x00000400;
        }
        result.xianJinZengJiaE_ = xianJinZengJiaE_;
        if (((from_bitField8_ & 0x00000800) == 0x00000800)) {
          to_bitField8_ |= 0x00000800;
        }
        result.zhuYingShouRu_ = zhuYingShouRu_;
        if (((from_bitField8_ & 0x00001000) == 0x00001000)) {
          to_bitField8_ |= 0x00001000;
        }
        result.zhuYingLiRun_ = zhuYingLiRun_;
        if (((from_bitField8_ & 0x00002000) == 0x00002000)) {
          to_bitField8_ |= 0x00002000;
        }
        result.yingYeLiRun_ = yingYeLiRun_;
        if (((from_bitField8_ & 0x00004000) == 0x00004000)) {
          to_bitField8_ |= 0x00004000;
        }
        result.touZiShouYi_ = touZiShouYi_;
        if (((from_bitField8_ & 0x00008000) == 0x00008000)) {
          to_bitField8_ |= 0x00008000;
        }
        result.yingYeWaiShouZhi_ = yingYeWaiShouZhi_;
        if (((from_bitField8_ & 0x00010000) == 0x00010000)) {
          to_bitField8_ |= 0x00010000;
        }
        result.liRunZongE_ = liRunZongE_;
        if (((from_bitField8_ & 0x00020000) == 0x00020000)) {
          to_bitField8_ |= 0x00020000;
        }
        result.jingLiRun_ = jingLiRun_;
        if (((from_bitField8_ & 0x00040000) == 0x00040000)) {
          to_bitField8_ |= 0x00040000;
        }
        result.weiFenPeiLiRun_ = weiFenPeiLiRun_;
        if (((from_bitField8_ & 0x00080000) == 0x00080000)) {
          to_bitField8_ |= 0x00080000;
        }
        result.zongGuBen_ = zongGuBen_;
        if (((from_bitField8_ & 0x00100000) == 0x00100000)) {
          to_bitField8_ |= 0x00100000;
        }
        result.wuXianShouGuHeJi_ = wuXianShouGuHeJi_;
        if (((from_bitField8_ & 0x00200000) == 0x00200000)) {
          to_bitField8_ |= 0x00200000;
        }
        result.liuTongAGu_ = liuTongAGu_;
        if (((from_bitField8_ & 0x00400000) == 0x00400000)) {
          to_bitField8_ |= 0x00400000;
        }
        result.liuTongBGu_ = liuTongBGu_;
        if (((from_bitField8_ & 0x00800000) == 0x00800000)) {
          to_bitField8_ |= 0x00800000;
        }
        result.jingWaiShangShiGu_ = jingWaiShangShiGu_;
        if (((from_bitField8_ & 0x01000000) == 0x01000000)) {
          to_bitField8_ |= 0x01000000;
        }
        result.qiTaLiuTongGu_ = qiTaLiuTongGu_;
        if (((from_bitField8_ & 0x02000000) == 0x02000000)) {
          to_bitField8_ |= 0x02000000;
        }
        result.xianShouGuHeJi_ = xianShouGuHeJi_;
        if (((from_bitField8_ & 0x04000000) == 0x04000000)) {
          to_bitField8_ |= 0x04000000;
        }
        result.guoJiaChiGu_ = guoJiaChiGu_;
        if (((from_bitField8_ & 0x08000000) == 0x08000000)) {
          to_bitField8_ |= 0x08000000;
        }
        result.guoYouFaRenGu_ = guoYouFaRenGu_;
        if (((from_bitField8_ & 0x10000000) == 0x10000000)) {
          to_bitField8_ |= 0x10000000;
        }
        result.jingNeiFaRenGu_ = jingNeiFaRenGu_;
        if (((from_bitField8_ & 0x20000000) == 0x20000000)) {
          to_bitField8_ |= 0x20000000;
        }
        result.jingNeiZiRanRenGu_ = jingNeiZiRanRenGu_;
        if (((from_bitField8_ & 0x40000000) == 0x40000000)) {
          to_bitField8_ |= 0x40000000;
        }
        result.qiTaFaQiRenGu_ = qiTaFaQiRenGu_;
        if (((from_bitField8_ & 0x80000000) == 0x80000000)) {
          to_bitField8_ |= 0x80000000;
        }
        result.muJiFaRenGu_ = muJiFaRenGu_;
        if (((from_bitField9_ & 0x00000001) == 0x00000001)) {
          to_bitField9_ |= 0x00000001;
        }
        result.jingWaiFaRenGu_ = jingWaiFaRenGu_;
        if (((from_bitField9_ & 0x00000002) == 0x00000002)) {
          to_bitField9_ |= 0x00000002;
        }
        result.jingWaiZiRanRenGu_ = jingWaiZiRanRenGu_;
        if (((from_bitField9_ & 0x00000004) == 0x00000004)) {
          to_bitField9_ |= 0x00000004;
        }
        result.youXianGuHuoQiTa_ = youXianGuHuoQiTa_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        result.bitField3_ = to_bitField3_;
        result.bitField4_ = to_bitField4_;
        result.bitField5_ = to_bitField5_;
        result.bitField6_ = to_bitField6_;
        result.bitField7_ = to_bitField7_;
        result.bitField8_ = to_bitField8_;
        result.bitField9_ = to_bitField9_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dzhyun.proto.DzhyunStkdata.StkData) {
          return mergeFrom((com.dzhyun.proto.DzhyunStkdata.StkData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dzhyun.proto.DzhyunStkdata.StkData other) {
        if (other == com.dzhyun.proto.DzhyunStkdata.StkData.getDefaultInstance()) return this;
        if (other.hasObj()) {
          bitField0_ |= 0x00000001;
          obj_ = other.obj_;
          onChanged();
        }
        if (other.hasJiaoYiDaiMa()) {
          bitField0_ |= 0x00000002;
          jiaoYiDaiMa_ = other.jiaoYiDaiMa_;
          onChanged();
        }
        if (other.hasZhongWenJianCheng()) {
          bitField0_ |= 0x00000004;
          zhongWenJianCheng_ = other.zhongWenJianCheng_;
          onChanged();
        }
        if (other.hasZuiXinJia()) {
          setZuiXinJia(other.getZuiXinJia());
        }
        if (other.hasKaiPanJia()) {
          setKaiPanJia(other.getKaiPanJia());
        }
        if (other.hasZuiGaoJia()) {
          setZuiGaoJia(other.getZuiGaoJia());
        }
        if (other.hasZuiDiJia()) {
          setZuiDiJia(other.getZuiDiJia());
        }
        if (other.hasZuoShou()) {
          setZuoShou(other.getZuoShou());
        }
        if (other.hasJunJia()) {
          setJunJia(other.getJunJia());
        }
        if (other.hasZhangDie()) {
          setZhangDie(other.getZhangDie());
        }
        if (other.hasZhangFu()) {
          setZhangFu(other.getZhangFu());
        }
        if (other.hasZhenFu()) {
          setZhenFu(other.getZhenFu());
        }
        if (other.hasChengJiaoLiang()) {
          setChengJiaoLiang(other.getChengJiaoLiang());
        }
        if (other.hasXianShou()) {
          setXianShou(other.getXianShou());
        }
        if (other.hasChengJiaoE()) {
          setChengJiaoE(other.getChengJiaoE());
        }
        if (other.hasZongChengJiaoBiShu()) {
          setZongChengJiaoBiShu(other.getZongChengJiaoBiShu());
        }
        if (other.hasMeiBiChengJiaoGuShu()) {
          setMeiBiChengJiaoGuShu(other.getMeiBiChengJiaoGuShu());
        }
        if (other.hasHuanShou()) {
          setHuanShou(other.getHuanShou());
        }
        if (other.hasLiangBi()) {
          setLiangBi(other.getLiangBi());
        }
        if (other.hasNeiPan()) {
          setNeiPan(other.getNeiPan());
        }
        if (other.hasWaiPan()) {
          setWaiPan(other.getWaiPan());
        }
        if (other.hasZongMaiRu()) {
          setZongMaiRu(other.getZongMaiRu());
        }
        if (other.hasZongMaiChu()) {
          setZongMaiChu(other.getZongMaiChu());
        }
        if (other.hasZongMaiRuJunJia()) {
          setZongMaiRuJunJia(other.getZongMaiRuJunJia());
        }
        if (other.hasZongMaiChuJunJia()) {
          setZongMaiChuJunJia(other.getZongMaiChuJunJia());
        }
        if (other.hasWeiTuoMaiRuJia1()) {
          setWeiTuoMaiRuJia1(other.getWeiTuoMaiRuJia1());
        }
        if (other.hasWeiTuoMaiRuJia2()) {
          setWeiTuoMaiRuJia2(other.getWeiTuoMaiRuJia2());
        }
        if (other.hasWeiTuoMaiRuJia3()) {
          setWeiTuoMaiRuJia3(other.getWeiTuoMaiRuJia3());
        }
        if (other.hasWeiTuoMaiRuJia4()) {
          setWeiTuoMaiRuJia4(other.getWeiTuoMaiRuJia4());
        }
        if (other.hasWeiTuoMaiRuJia5()) {
          setWeiTuoMaiRuJia5(other.getWeiTuoMaiRuJia5());
        }
        if (other.hasWeiTuoMaiRuLiang1()) {
          setWeiTuoMaiRuLiang1(other.getWeiTuoMaiRuLiang1());
        }
        if (other.hasWeiTuoMaiRuLiang2()) {
          setWeiTuoMaiRuLiang2(other.getWeiTuoMaiRuLiang2());
        }
        if (other.hasWeiTuoMaiRuLiang3()) {
          setWeiTuoMaiRuLiang3(other.getWeiTuoMaiRuLiang3());
        }
        if (other.hasWeiTuoMaiRuLiang4()) {
          setWeiTuoMaiRuLiang4(other.getWeiTuoMaiRuLiang4());
        }
        if (other.hasWeiTuoMaiRuLiang5()) {
          setWeiTuoMaiRuLiang5(other.getWeiTuoMaiRuLiang5());
        }
        if (other.hasWeiTuoMaiChuJia1()) {
          setWeiTuoMaiChuJia1(other.getWeiTuoMaiChuJia1());
        }
        if (other.hasWeiTuoMaiChuJia2()) {
          setWeiTuoMaiChuJia2(other.getWeiTuoMaiChuJia2());
        }
        if (other.hasWeiTuoMaiChuJia3()) {
          setWeiTuoMaiChuJia3(other.getWeiTuoMaiChuJia3());
        }
        if (other.hasWeiTuoMaiChuJia4()) {
          setWeiTuoMaiChuJia4(other.getWeiTuoMaiChuJia4());
        }
        if (other.hasWeiTuoMaiChuJia5()) {
          setWeiTuoMaiChuJia5(other.getWeiTuoMaiChuJia5());
        }
        if (other.hasWeiTuoMaiChuLiang1()) {
          setWeiTuoMaiChuLiang1(other.getWeiTuoMaiChuLiang1());
        }
        if (other.hasWeiTuoMaiChuLiang2()) {
          setWeiTuoMaiChuLiang2(other.getWeiTuoMaiChuLiang2());
        }
        if (other.hasWeiTuoMaiChuLiang3()) {
          setWeiTuoMaiChuLiang3(other.getWeiTuoMaiChuLiang3());
        }
        if (other.hasWeiTuoMaiChuLiang4()) {
          setWeiTuoMaiChuLiang4(other.getWeiTuoMaiChuLiang4());
        }
        if (other.hasWeiTuoMaiChuLiang5()) {
          setWeiTuoMaiChuLiang5(other.getWeiTuoMaiChuLiang5());
        }
        if (other.hasWeiBi()) {
          setWeiBi(other.getWeiBi());
        }
        if (other.hasWeiCha()) {
          setWeiCha(other.getWeiCha());
        }
        if (other.hasZhangSu()) {
          setZhangSu(other.getZhangSu());
        }
        if (other.hasJunLiang5Ri()) {
          setJunLiang5Ri(other.getJunLiang5Ri());
        }
        if (other.hasShangZhangJiaShu()) {
          setShangZhangJiaShu(other.getShangZhangJiaShu());
        }
        if (other.hasXiaDieJiaShu()) {
          setXiaDieJiaShu(other.getXiaDieJiaShu());
        }
        if (other.hasPingPanJiaShu()) {
          setPingPanJiaShu(other.getPingPanJiaShu());
        }
        if (other.hasAGuShangZhangJiaShu()) {
          setAGuShangZhangJiaShu(other.getAGuShangZhangJiaShu());
        }
        if (other.hasAGuXiaDieJiaShu()) {
          setAGuXiaDieJiaShu(other.getAGuXiaDieJiaShu());
        }
        if (other.hasAGuPingPanJiaShu()) {
          setAGuPingPanJiaShu(other.getAGuPingPanJiaShu());
        }
        if (other.hasAGuChengJiaoE()) {
          setAGuChengJiaoE(other.getAGuChengJiaoE());
        }
        if (other.hasBGuShangZhangJiaShu()) {
          setBGuShangZhangJiaShu(other.getBGuShangZhangJiaShu());
        }
        if (other.hasBGuXiaDieJiaShu()) {
          setBGuXiaDieJiaShu(other.getBGuXiaDieJiaShu());
        }
        if (other.hasBGuPingPanJiaShu()) {
          setBGuPingPanJiaShu(other.getBGuPingPanJiaShu());
        }
        if (other.hasBGuChengJiaoE()) {
          setBGuChengJiaoE(other.getBGuChengJiaoE());
        }
        if (other.hasJiJinShangZhangJiaShu()) {
          setJiJinShangZhangJiaShu(other.getJiJinShangZhangJiaShu());
        }
        if (other.hasJiJinXiaDieJiaShu()) {
          setJiJinXiaDieJiaShu(other.getJiJinXiaDieJiaShu());
        }
        if (other.hasJiJinPingPanJiaShu()) {
          setJiJinPingPanJiaShu(other.getJiJinPingPanJiaShu());
        }
        if (other.hasJiJinChengJiaoE()) {
          setJiJinChengJiaoE(other.getJiJinChengJiaoE());
        }
        if (other.hasQiTaShangZhangJiaShu()) {
          setQiTaShangZhangJiaShu(other.getQiTaShangZhangJiaShu());
        }
        if (other.hasQiTaXiaDieJiaShu()) {
          setQiTaXiaDieJiaShu(other.getQiTaXiaDieJiaShu());
        }
        if (other.hasQiTaPingPanJiaShu()) {
          setQiTaPingPanJiaShu(other.getQiTaPingPanJiaShu());
        }
        if (other.hasQiTaChengJiaoE()) {
          setQiTaChengJiaoE(other.getQiTaChengJiaoE());
        }
        if (other.hasMaiRuDanShu()) {
          setMaiRuDanShu(other.getMaiRuDanShu());
        }
        if (other.hasMaiChuDanShu()) {
          setMaiChuDanShu(other.getMaiChuDanShu());
        }
        if (other.hasMaiRuZhongDanBiLi()) {
          setMaiRuZhongDanBiLi(other.getMaiRuZhongDanBiLi());
        }
        if (other.hasMaiRuDaDanBiLi()) {
          setMaiRuDaDanBiLi(other.getMaiRuDaDanBiLi());
        }
        if (other.hasMaiRuTeDaDanBiLi()) {
          setMaiRuTeDaDanBiLi(other.getMaiRuTeDaDanBiLi());
        }
        if (other.hasMaiChuZhongDanBiLi()) {
          setMaiChuZhongDanBiLi(other.getMaiChuZhongDanBiLi());
        }
        if (other.hasMaiChuDaDanBiLi()) {
          setMaiChuDaDanBiLi(other.getMaiChuDaDanBiLi());
        }
        if (other.hasMaiChuTeDaDanBiLi()) {
          setMaiChuTeDaDanBiLi(other.getMaiChuTeDaDanBiLi());
        }
        if (other.hasFenZhongZhangFu1()) {
          setFenZhongZhangFu1(other.getFenZhongZhangFu1());
        }
        if (other.hasFenZhongZhangFu2()) {
          setFenZhongZhangFu2(other.getFenZhongZhangFu2());
        }
        if (other.hasFenZhongZhangFu3()) {
          setFenZhongZhangFu3(other.getFenZhongZhangFu3());
        }
        if (other.hasFenZhongZhangFu4()) {
          setFenZhongZhangFu4(other.getFenZhongZhangFu4());
        }
        if (other.hasFenZhongZhangFu5()) {
          setFenZhongZhangFu5(other.getFenZhongZhangFu5());
        }
        if (other.hasShiYingLv()) {
          setShiYingLv(other.getShiYingLv());
        }
        if (other.hasZhangTing()) {
          setZhangTing(other.getZhangTing());
        }
        if (other.hasDieTing()) {
          setDieTing(other.getDieTing());
        }
        if (other.hasShiChangMingCheng()) {
          bitField2_ |= 0x00100000;
          shiChangMingCheng_ = other.shiChangMingCheng_;
          onChanged();
        }
        if (other.hasShiChangDuanMingCheng()) {
          bitField2_ |= 0x00200000;
          shiChangDuanMingCheng_ = other.shiChangDuanMingCheng_;
          onChanged();
        }
        if (other.hasJiGouChiHuoShu()) {
          setJiGouChiHuoShu(other.getJiGouChiHuoShu());
        }
        if (other.hasJiGouTuHuoShu()) {
          setJiGouTuHuoShu(other.getJiGouTuHuoShu());
        }
        if (other.hasJiGouChiHuoLiang()) {
          setJiGouChiHuoLiang(other.getJiGouChiHuoLiang());
        }
        if (other.hasJiGouTuHuoLiang()) {
          setJiGouTuHuoLiang(other.getJiGouTuHuoLiang());
        }
        if (other.hasJiGouChiHuoJunE()) {
          setJiGouChiHuoJunE(other.getJiGouChiHuoJunE());
        }
        if (other.hasJiGouTuHuoJunE()) {
          setJiGouTuHuoJunE(other.getJiGouTuHuoJunE());
        }
        if (other.hasMeiShouGuShu()) {
          setMeiShouGuShu(other.getMeiShouGuShu());
        }
        if (other.hasJiaoYiDanWei()) {
          setJiaoYiDanWei(other.getJiaoYiDanWei());
        }
        if (other.hasShiXiaoLv()) {
          setShiXiaoLv(other.getShiXiaoLv());
        }
        if (other.hasShiJian()) {
          setShiJian(other.getShiJian());
        }
        if (other.hasShiJingLv()) {
          setShiJingLv(other.getShiJingLv());
        }
        if (other.hasZongShiZhi()) {
          setZongShiZhi(other.getZongShiZhi());
        }
        if (other.hasLiuTongShiZhi()) {
          setLiuTongShiZhi(other.getLiuTongShiZhi());
        }
        if (other.hasMA1MinMA1()) {
          setMA1MinMA1(other.getMA1MinMA1());
        }
        if (other.hasMA1MinMA2()) {
          setMA1MinMA2(other.getMA1MinMA2());
        }
        if (other.hasMA1MinMA3()) {
          setMA1MinMA3(other.getMA1MinMA3());
        }
        if (other.hasMA1MinMA4()) {
          setMA1MinMA4(other.getMA1MinMA4());
        }
        if (other.hasMA1MinMA5()) {
          setMA1MinMA5(other.getMA1MinMA5());
        }
        if (other.hasMA1MinMA6()) {
          setMA1MinMA6(other.getMA1MinMA6());
        }
        if (other.hasMA5MinMA1()) {
          setMA5MinMA1(other.getMA5MinMA1());
        }
        if (other.hasMA5MinMA2()) {
          setMA5MinMA2(other.getMA5MinMA2());
        }
        if (other.hasMA5MinMA3()) {
          setMA5MinMA3(other.getMA5MinMA3());
        }
        if (other.hasMA5MinMA4()) {
          setMA5MinMA4(other.getMA5MinMA4());
        }
        if (other.hasMA5MinMA5()) {
          setMA5MinMA5(other.getMA5MinMA5());
        }
        if (other.hasMA5MinMA6()) {
          setMA5MinMA6(other.getMA5MinMA6());
        }
        if (other.hasMA1DayMA1()) {
          setMA1DayMA1(other.getMA1DayMA1());
        }
        if (other.hasMA1DayMA2()) {
          setMA1DayMA2(other.getMA1DayMA2());
        }
        if (other.hasMA1DayMA3()) {
          setMA1DayMA3(other.getMA1DayMA3());
        }
        if (other.hasMA1DayMA4()) {
          setMA1DayMA4(other.getMA1DayMA4());
        }
        if (other.hasMA1DayMA5()) {
          setMA1DayMA5(other.getMA1DayMA5());
        }
        if (other.hasMA1DayMA6()) {
          setMA1DayMA6(other.getMA1DayMA6());
        }
        if (other.hasBOLL1MinMID()) {
          setBOLL1MinMID(other.getBOLL1MinMID());
        }
        if (other.hasBOLL1MinUPPER()) {
          setBOLL1MinUPPER(other.getBOLL1MinUPPER());
        }
        if (other.hasBOLL1MinLOWER()) {
          setBOLL1MinLOWER(other.getBOLL1MinLOWER());
        }
        if (other.hasBOLL5MinMID()) {
          setBOLL5MinMID(other.getBOLL5MinMID());
        }
        if (other.hasBOLL5MinUPPER()) {
          setBOLL5MinUPPER(other.getBOLL5MinUPPER());
        }
        if (other.hasBOLL5MinLOWER()) {
          setBOLL5MinLOWER(other.getBOLL5MinLOWER());
        }
        if (other.hasBOLL1DayMID()) {
          setBOLL1DayMID(other.getBOLL1DayMID());
        }
        if (other.hasBOLL1DayUPPER()) {
          setBOLL1DayUPPER(other.getBOLL1DayUPPER());
        }
        if (other.hasBOLL1DayLOWER()) {
          setBOLL1DayLOWER(other.getBOLL1DayLOWER());
        }
        if (other.hasVOL1Min()) {
          setVOL1Min(other.getVOL1Min());
        }
        if (other.hasVOL1MinMA1()) {
          setVOL1MinMA1(other.getVOL1MinMA1());
        }
        if (other.hasVOL1MinMA2()) {
          setVOL1MinMA2(other.getVOL1MinMA2());
        }
        if (other.hasVOL1MinMA3()) {
          setVOL1MinMA3(other.getVOL1MinMA3());
        }
        if (other.hasVOL5Min()) {
          setVOL5Min(other.getVOL5Min());
        }
        if (other.hasVOL5MinMA1()) {
          setVOL5MinMA1(other.getVOL5MinMA1());
        }
        if (other.hasVOL5MinMA2()) {
          setVOL5MinMA2(other.getVOL5MinMA2());
        }
        if (other.hasVOL5MinMA3()) {
          setVOL5MinMA3(other.getVOL5MinMA3());
        }
        if (other.hasVOL1Day()) {
          setVOL1Day(other.getVOL1Day());
        }
        if (other.hasVOL1DayMA1()) {
          setVOL1DayMA1(other.getVOL1DayMA1());
        }
        if (other.hasVOL1DayMA2()) {
          setVOL1DayMA2(other.getVOL1DayMA2());
        }
        if (other.hasVOL1DayMA3()) {
          setVOL1DayMA3(other.getVOL1DayMA3());
        }
        if (other.hasARBR1MinAR()) {
          setARBR1MinAR(other.getARBR1MinAR());
        }
        if (other.hasARBR1MinBR()) {
          setARBR1MinBR(other.getARBR1MinBR());
        }
        if (other.hasARBR5MinAR()) {
          setARBR5MinAR(other.getARBR5MinAR());
        }
        if (other.hasARBR5MinBR()) {
          setARBR5MinBR(other.getARBR5MinBR());
        }
        if (other.hasARBR1DayAR()) {
          setARBR1DayAR(other.getARBR1DayAR());
        }
        if (other.hasARBR1DayBR()) {
          setARBR1DayBR(other.getARBR1DayBR());
        }
        if (other.hasBIAS1MinBIAS1()) {
          setBIAS1MinBIAS1(other.getBIAS1MinBIAS1());
        }
        if (other.hasBIAS1MinBIAS2()) {
          setBIAS1MinBIAS2(other.getBIAS1MinBIAS2());
        }
        if (other.hasBIAS1MinBIAS3()) {
          setBIAS1MinBIAS3(other.getBIAS1MinBIAS3());
        }
        if (other.hasBIAS5MinBIAS1()) {
          setBIAS5MinBIAS1(other.getBIAS5MinBIAS1());
        }
        if (other.hasBIAS5MinBIAS2()) {
          setBIAS5MinBIAS2(other.getBIAS5MinBIAS2());
        }
        if (other.hasBIAS5MinBIAS3()) {
          setBIAS5MinBIAS3(other.getBIAS5MinBIAS3());
        }
        if (other.hasBIAS1DayBIAS1()) {
          setBIAS1DayBIAS1(other.getBIAS1DayBIAS1());
        }
        if (other.hasBIAS1DayBIAS2()) {
          setBIAS1DayBIAS2(other.getBIAS1DayBIAS2());
        }
        if (other.hasBIAS1DayBIAS3()) {
          setBIAS1DayBIAS3(other.getBIAS1DayBIAS3());
        }
        if (other.hasCCI1Min()) {
          setCCI1Min(other.getCCI1Min());
        }
        if (other.hasCCI5Min()) {
          setCCI5Min(other.getCCI5Min());
        }
        if (other.hasCCI1Day()) {
          setCCI1Day(other.getCCI1Day());
        }
        if (other.hasCJBS1MinCJBS()) {
          setCJBS1MinCJBS(other.getCJBS1MinCJBS());
        }
        if (other.hasCJBS5MinCJBS()) {
          setCJBS5MinCJBS(other.getCJBS5MinCJBS());
        }
        if (other.hasCJBS1DayCJBS()) {
          setCJBS1DayCJBS(other.getCJBS1DayCJBS());
        }
        if (other.hasCR1MinCR()) {
          setCR1MinCR(other.getCR1MinCR());
        }
        if (other.hasCR1MinMA1()) {
          setCR1MinMA1(other.getCR1MinMA1());
        }
        if (other.hasCR1MinMA2()) {
          setCR1MinMA2(other.getCR1MinMA2());
        }
        if (other.hasCR1MinMA3()) {
          setCR1MinMA3(other.getCR1MinMA3());
        }
        if (other.hasCR5MinCR()) {
          setCR5MinCR(other.getCR5MinCR());
        }
        if (other.hasCR5MinMA1()) {
          setCR5MinMA1(other.getCR5MinMA1());
        }
        if (other.hasCR5MinMA2()) {
          setCR5MinMA2(other.getCR5MinMA2());
        }
        if (other.hasCR5MinMA3()) {
          setCR5MinMA3(other.getCR5MinMA3());
        }
        if (other.hasCR1DayCR()) {
          setCR1DayCR(other.getCR1DayCR());
        }
        if (other.hasCR1DayMA1()) {
          setCR1DayMA1(other.getCR1DayMA1());
        }
        if (other.hasCR1DayMA2()) {
          setCR1DayMA2(other.getCR1DayMA2());
        }
        if (other.hasCR1DayMA3()) {
          setCR1DayMA3(other.getCR1DayMA3());
        }
        if (other.hasDMA1MinDDD()) {
          setDMA1MinDDD(other.getDMA1MinDDD());
        }
        if (other.hasDMA1MinAMA()) {
          setDMA1MinAMA(other.getDMA1MinAMA());
        }
        if (other.hasDMA5MinDDD()) {
          setDMA5MinDDD(other.getDMA5MinDDD());
        }
        if (other.hasDMA5MinAMA()) {
          setDMA5MinAMA(other.getDMA5MinAMA());
        }
        if (other.hasDMA1DayDDD()) {
          setDMA1DayDDD(other.getDMA1DayDDD());
        }
        if (other.hasDMA1DayAMA()) {
          setDMA1DayAMA(other.getDMA1DayAMA());
        }
        if (other.hasDMI1MinPDI()) {
          setDMI1MinPDI(other.getDMI1MinPDI());
        }
        if (other.hasDMI1MinMDI()) {
          setDMI1MinMDI(other.getDMI1MinMDI());
        }
        if (other.hasDMI1MinADX()) {
          setDMI1MinADX(other.getDMI1MinADX());
        }
        if (other.hasDMI1MinADXR()) {
          setDMI1MinADXR(other.getDMI1MinADXR());
        }
        if (other.hasDMI5MinPDI()) {
          setDMI5MinPDI(other.getDMI5MinPDI());
        }
        if (other.hasDMI5MinMDI()) {
          setDMI5MinMDI(other.getDMI5MinMDI());
        }
        if (other.hasDMI5MinADX()) {
          setDMI5MinADX(other.getDMI5MinADX());
        }
        if (other.hasDMI5MinADXR()) {
          setDMI5MinADXR(other.getDMI5MinADXR());
        }
        if (other.hasDMI1DayPDI()) {
          setDMI1DayPDI(other.getDMI1DayPDI());
        }
        if (other.hasDMI1DayMDI()) {
          setDMI1DayMDI(other.getDMI1DayMDI());
        }
        if (other.hasDMI1DayADX()) {
          setDMI1DayADX(other.getDMI1DayADX());
        }
        if (other.hasDMI1DayADXR()) {
          setDMI1DayADXR(other.getDMI1DayADXR());
        }
        if (other.hasKDJ1MinK()) {
          setKDJ1MinK(other.getKDJ1MinK());
        }
        if (other.hasKDJ1MinD()) {
          setKDJ1MinD(other.getKDJ1MinD());
        }
        if (other.hasKDJ1MinJ()) {
          setKDJ1MinJ(other.getKDJ1MinJ());
        }
        if (other.hasKDJ5MinK()) {
          setKDJ5MinK(other.getKDJ5MinK());
        }
        if (other.hasKDJ5MinD()) {
          setKDJ5MinD(other.getKDJ5MinD());
        }
        if (other.hasKDJ5MinJ()) {
          setKDJ5MinJ(other.getKDJ5MinJ());
        }
        if (other.hasKDJ1DayK()) {
          setKDJ1DayK(other.getKDJ1DayK());
        }
        if (other.hasKDJ1DayD()) {
          setKDJ1DayD(other.getKDJ1DayD());
        }
        if (other.hasKDJ1DayJ()) {
          setKDJ1DayJ(other.getKDJ1DayJ());
        }
        if (other.hasMACD1MinDIFF()) {
          setMACD1MinDIFF(other.getMACD1MinDIFF());
        }
        if (other.hasMACD1MinDEA()) {
          setMACD1MinDEA(other.getMACD1MinDEA());
        }
        if (other.hasMACD1MinMACD()) {
          setMACD1MinMACD(other.getMACD1MinMACD());
        }
        if (other.hasMACD5MinDIFF()) {
          setMACD5MinDIFF(other.getMACD5MinDIFF());
        }
        if (other.hasMACD5MinDEA()) {
          setMACD5MinDEA(other.getMACD5MinDEA());
        }
        if (other.hasMACD5MinMACD()) {
          setMACD5MinMACD(other.getMACD5MinMACD());
        }
        if (other.hasMACD1DayDIFF()) {
          setMACD1DayDIFF(other.getMACD1DayDIFF());
        }
        if (other.hasMACD1DayDEA()) {
          setMACD1DayDEA(other.getMACD1DayDEA());
        }
        if (other.hasMACD1DayMACD()) {
          setMACD1DayMACD(other.getMACD1DayMACD());
        }
        if (other.hasOBV1Min()) {
          setOBV1Min(other.getOBV1Min());
        }
        if (other.hasOBV5Min()) {
          setOBV5Min(other.getOBV5Min());
        }
        if (other.hasOBV1Day()) {
          setOBV1Day(other.getOBV1Day());
        }
        if (other.hasPSY1Min()) {
          setPSY1Min(other.getPSY1Min());
        }
        if (other.hasPSY5Min()) {
          setPSY5Min(other.getPSY5Min());
        }
        if (other.hasPSY1Day()) {
          setPSY1Day(other.getPSY1Day());
        }
        if (other.hasRSI1MinRSI1()) {
          setRSI1MinRSI1(other.getRSI1MinRSI1());
        }
        if (other.hasRSI1MinRSI2()) {
          setRSI1MinRSI2(other.getRSI1MinRSI2());
        }
        if (other.hasRSI1MinRSI3()) {
          setRSI1MinRSI3(other.getRSI1MinRSI3());
        }
        if (other.hasRSI5MinRSI1()) {
          setRSI5MinRSI1(other.getRSI5MinRSI1());
        }
        if (other.hasRSI5MinRSI2()) {
          setRSI5MinRSI2(other.getRSI5MinRSI2());
        }
        if (other.hasRSI5MinRSI3()) {
          setRSI5MinRSI3(other.getRSI5MinRSI3());
        }
        if (other.hasRSI1DayRSI1()) {
          setRSI1DayRSI1(other.getRSI1DayRSI1());
        }
        if (other.hasRSI1DayRSI2()) {
          setRSI1DayRSI2(other.getRSI1DayRSI2());
        }
        if (other.hasRSI1DayRSI3()) {
          setRSI1DayRSI3(other.getRSI1DayRSI3());
        }
        if (other.hasWR1MinWR1()) {
          setWR1MinWR1(other.getWR1MinWR1());
        }
        if (other.hasWR1MinWR2()) {
          setWR1MinWR2(other.getWR1MinWR2());
        }
        if (other.hasWR5MinWR1()) {
          setWR5MinWR1(other.getWR5MinWR1());
        }
        if (other.hasWR5MinWR2()) {
          setWR5MinWR2(other.getWR5MinWR2());
        }
        if (other.hasWR1DayWR1()) {
          setWR1DayWR1(other.getWR1DayWR1());
        }
        if (other.hasWR1DayWR2()) {
          setWR1DayWR2(other.getWR1DayWR2());
        }
        if (other.hasLeiXing()) {
          setLeiXing(other.getLeiXing());
        }
        if (other.hasZiLeiXing()) {
          setZiLeiXing(other.getZiLeiXing());
        }
        if (other.hasLeiXingMingCheng()) {
          bitField7_ |= 0x00000040;
          leiXingMingCheng_ = other.leiXingMingCheng_;
          onChanged();
        }
        if (other.hasChengJiaoLiangDanWei()) {
          setChengJiaoLiangDanWei(other.getChengJiaoLiangDanWei());
        }
        if (other.hasFJJJLeiXing()) {
          setFJJJLeiXing(other.getFJJJLeiXing());
        }
        if (other.hasZhengTiYiJia()) {
          setZhengTiYiJia(other.getZhengTiYiJia());
        }
        if (other.hasMYiJia()) {
          setMYiJia(other.getMYiJia());
        }
        if (other.hasMShiShiJingZhi()) {
          setMShiShiJingZhi(other.getMShiShiJingZhi());
        }
        if (other.hasMShangZheXuZhang()) {
          setMShangZheXuZhang(other.getMShangZheXuZhang());
        }
        if (other.hasMXiaZheXuDie()) {
          setMXiaZheXuDie(other.getMXiaZheXuDie());
        }
        if (other.hasYinHanShouYi()) {
          setYinHanShouYi(other.getYinHanShouYi());
        }
        if (other.hasJiaGeGangGan()) {
          setJiaGeGangGan(other.getJiaGeGangGan());
        }
        if (other.hasPinZhongObj()) {
          bitField7_ |= 0x00010000;
          pinZhongObj_ = other.pinZhongObj_;
          onChanged();
        }
        if (other.hasBaoGaoQi()) {
          bitField7_ |= 0x00020000;
          baoGaoQi_ = other.baoGaoQi_;
          onChanged();
        }
        if (other.hasShangShiRiQi()) {
          bitField7_ |= 0x00040000;
          shangShiRiQi_ = other.shangShiRiQi_;
          onChanged();
        }
        if (other.hasMeiGuShouYi()) {
          setMeiGuShouYi(other.getMeiGuShouYi());
        }
        if (other.hasMeiGuJingZiChan()) {
          setMeiGuJingZiChan(other.getMeiGuJingZiChan());
        }
        if (other.hasJingZiChanShouYiLv()) {
          setJingZiChanShouYiLv(other.getJingZiChanShouYiLv());
        }
        if (other.hasMeiGuJingYingXianJin()) {
          setMeiGuJingYingXianJin(other.getMeiGuJingYingXianJin());
        }
        if (other.hasMeiGuGongJiJin()) {
          setMeiGuGongJiJin(other.getMeiGuGongJiJin());
        }
        if (other.hasMeiGuWeiFenPei()) {
          setMeiGuWeiFenPei(other.getMeiGuWeiFenPei());
        }
        if (other.hasGuDongQuanYiBi()) {
          setGuDongQuanYiBi(other.getGuDongQuanYiBi());
        }
        if (other.hasJingLiRunTongBi()) {
          setJingLiRunTongBi(other.getJingLiRunTongBi());
        }
        if (other.hasZhuYingShouRuTongBi()) {
          setZhuYingShouRuTongBi(other.getZhuYingShouRuTongBi());
        }
        if (other.hasXiaoShouMaoLiLv()) {
          setXiaoShouMaoLiLv(other.getXiaoShouMaoLiLv());
        }
        if (other.hasTiaoZhengMeiGuJingZi()) {
          setTiaoZhengMeiGuJingZi(other.getTiaoZhengMeiGuJingZi());
        }
        if (other.hasZongZiChan()) {
          setZongZiChan(other.getZongZiChan());
        }
        if (other.hasLiuDongZiChan()) {
          setLiuDongZiChan(other.getLiuDongZiChan());
        }
        if (other.hasGuDingZiChan()) {
          setGuDingZiChan(other.getGuDingZiChan());
        }
        if (other.hasWuXingZiChan()) {
          setWuXingZiChan(other.getWuXingZiChan());
        }
        if (other.hasLiuDongFuZhai()) {
          setLiuDongFuZhai(other.getLiuDongFuZhai());
        }
        if (other.hasChangQiFuZhai()) {
          setChangQiFuZhai(other.getChangQiFuZhai());
        }
        if (other.hasZongFuZhai()) {
          setZongFuZhai(other.getZongFuZhai());
        }
        if (other.hasGuDongQuanYi()) {
          setGuDongQuanYi(other.getGuDongQuanYi());
        }
        if (other.hasZiBenGongJiJin()) {
          setZiBenGongJiJin(other.getZiBenGongJiJin());
        }
        if (other.hasJingYingXianJinLiuLiang()) {
          setJingYingXianJinLiuLiang(other.getJingYingXianJinLiuLiang());
        }
        if (other.hasTouZiXianJinLiuLiang()) {
          setTouZiXianJinLiuLiang(other.getTouZiXianJinLiuLiang());
        }
        if (other.hasChouZiXianJinLiuLiang()) {
          setChouZiXianJinLiuLiang(other.getChouZiXianJinLiuLiang());
        }
        if (other.hasXianJinZengJiaE()) {
          setXianJinZengJiaE(other.getXianJinZengJiaE());
        }
        if (other.hasZhuYingShouRu()) {
          setZhuYingShouRu(other.getZhuYingShouRu());
        }
        if (other.hasZhuYingLiRun()) {
          setZhuYingLiRun(other.getZhuYingLiRun());
        }
        if (other.hasYingYeLiRun()) {
          setYingYeLiRun(other.getYingYeLiRun());
        }
        if (other.hasTouZiShouYi()) {
          setTouZiShouYi(other.getTouZiShouYi());
        }
        if (other.hasYingYeWaiShouZhi()) {
          setYingYeWaiShouZhi(other.getYingYeWaiShouZhi());
        }
        if (other.hasLiRunZongE()) {
          setLiRunZongE(other.getLiRunZongE());
        }
        if (other.hasJingLiRun()) {
          setJingLiRun(other.getJingLiRun());
        }
        if (other.hasWeiFenPeiLiRun()) {
          setWeiFenPeiLiRun(other.getWeiFenPeiLiRun());
        }
        if (other.hasZongGuBen()) {
          setZongGuBen(other.getZongGuBen());
        }
        if (other.hasWuXianShouGuHeJi()) {
          setWuXianShouGuHeJi(other.getWuXianShouGuHeJi());
        }
        if (other.hasLiuTongAGu()) {
          setLiuTongAGu(other.getLiuTongAGu());
        }
        if (other.hasLiuTongBGu()) {
          setLiuTongBGu(other.getLiuTongBGu());
        }
        if (other.hasJingWaiShangShiGu()) {
          setJingWaiShangShiGu(other.getJingWaiShangShiGu());
        }
        if (other.hasQiTaLiuTongGu()) {
          setQiTaLiuTongGu(other.getQiTaLiuTongGu());
        }
        if (other.hasXianShouGuHeJi()) {
          setXianShouGuHeJi(other.getXianShouGuHeJi());
        }
        if (other.hasGuoJiaChiGu()) {
          setGuoJiaChiGu(other.getGuoJiaChiGu());
        }
        if (other.hasGuoYouFaRenGu()) {
          setGuoYouFaRenGu(other.getGuoYouFaRenGu());
        }
        if (other.hasJingNeiFaRenGu()) {
          setJingNeiFaRenGu(other.getJingNeiFaRenGu());
        }
        if (other.hasJingNeiZiRanRenGu()) {
          setJingNeiZiRanRenGu(other.getJingNeiZiRanRenGu());
        }
        if (other.hasQiTaFaQiRenGu()) {
          setQiTaFaQiRenGu(other.getQiTaFaQiRenGu());
        }
        if (other.hasMuJiFaRenGu()) {
          setMuJiFaRenGu(other.getMuJiFaRenGu());
        }
        if (other.hasJingWaiFaRenGu()) {
          setJingWaiFaRenGu(other.getJingWaiFaRenGu());
        }
        if (other.hasJingWaiZiRanRenGu()) {
          setJingWaiZiRanRenGu(other.getJingWaiZiRanRenGu());
        }
        if (other.hasYouXianGuHuoQiTa()) {
          setYouXianGuHuoQiTa(other.getYouXianGuHuoQiTa());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasObj()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dzhyun.proto.DzhyunStkdata.StkData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dzhyun.proto.DzhyunStkdata.StkData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;
      private int bitField3_;
      private int bitField4_;
      private int bitField5_;
      private int bitField6_;
      private int bitField7_;
      private int bitField8_;
      private int bitField9_;

      private java.lang.Object obj_ = "";
      /**
       * <code>required string Obj = 1;</code>
       *
       * <pre>
       * 股票代码，如 SH600000 不推送
       * </pre>
       */
      public boolean hasObj() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string Obj = 1;</code>
       *
       * <pre>
       * 股票代码，如 SH600000 不推送
       * </pre>
       */
      public java.lang.String getObj() {
        java.lang.Object ref = obj_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            obj_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string Obj = 1;</code>
       *
       * <pre>
       * 股票代码，如 SH600000 不推送
       * </pre>
       */
      public com.google.protobuf.ByteString
          getObjBytes() {
        java.lang.Object ref = obj_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          obj_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string Obj = 1;</code>
       *
       * <pre>
       * 股票代码，如 SH600000 不推送
       * </pre>
       */
      public Builder setObj(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        obj_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string Obj = 1;</code>
       *
       * <pre>
       * 股票代码，如 SH600000 不推送
       * </pre>
       */
      public Builder clearObj() {
        bitField0_ = (bitField0_ & ~0x00000001);
        obj_ = getDefaultInstance().getObj();
        onChanged();
        return this;
      }
      /**
       * <code>required string Obj = 1;</code>
       *
       * <pre>
       * 股票代码，如 SH600000 不推送
       * </pre>
       */
      public Builder setObjBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        obj_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object jiaoYiDaiMa_ = "";
      /**
       * <code>optional string JiaoYiDaiMa = 2;</code>
       *
       * <pre>
       * 股票标签，如 600000 不推送
       * </pre>
       */
      public boolean hasJiaoYiDaiMa() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string JiaoYiDaiMa = 2;</code>
       *
       * <pre>
       * 股票标签，如 600000 不推送
       * </pre>
       */
      public java.lang.String getJiaoYiDaiMa() {
        java.lang.Object ref = jiaoYiDaiMa_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            jiaoYiDaiMa_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string JiaoYiDaiMa = 2;</code>
       *
       * <pre>
       * 股票标签，如 600000 不推送
       * </pre>
       */
      public com.google.protobuf.ByteString
          getJiaoYiDaiMaBytes() {
        java.lang.Object ref = jiaoYiDaiMa_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jiaoYiDaiMa_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string JiaoYiDaiMa = 2;</code>
       *
       * <pre>
       * 股票标签，如 600000 不推送
       * </pre>
       */
      public Builder setJiaoYiDaiMa(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        jiaoYiDaiMa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string JiaoYiDaiMa = 2;</code>
       *
       * <pre>
       * 股票标签，如 600000 不推送
       * </pre>
       */
      public Builder clearJiaoYiDaiMa() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jiaoYiDaiMa_ = getDefaultInstance().getJiaoYiDaiMa();
        onChanged();
        return this;
      }
      /**
       * <code>optional string JiaoYiDaiMa = 2;</code>
       *
       * <pre>
       * 股票标签，如 600000 不推送
       * </pre>
       */
      public Builder setJiaoYiDaiMaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        jiaoYiDaiMa_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object zhongWenJianCheng_ = "";
      /**
       * <code>optional string ZhongWenJianCheng = 3;</code>
       *
       * <pre>
       * 名称 不推送
       * </pre>
       */
      public boolean hasZhongWenJianCheng() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ZhongWenJianCheng = 3;</code>
       *
       * <pre>
       * 名称 不推送
       * </pre>
       */
      public java.lang.String getZhongWenJianCheng() {
        java.lang.Object ref = zhongWenJianCheng_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            zhongWenJianCheng_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ZhongWenJianCheng = 3;</code>
       *
       * <pre>
       * 名称 不推送
       * </pre>
       */
      public com.google.protobuf.ByteString
          getZhongWenJianChengBytes() {
        java.lang.Object ref = zhongWenJianCheng_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          zhongWenJianCheng_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ZhongWenJianCheng = 3;</code>
       *
       * <pre>
       * 名称 不推送
       * </pre>
       */
      public Builder setZhongWenJianCheng(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        zhongWenJianCheng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ZhongWenJianCheng = 3;</code>
       *
       * <pre>
       * 名称 不推送
       * </pre>
       */
      public Builder clearZhongWenJianCheng() {
        bitField0_ = (bitField0_ & ~0x00000004);
        zhongWenJianCheng_ = getDefaultInstance().getZhongWenJianCheng();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ZhongWenJianCheng = 3;</code>
       *
       * <pre>
       * 名称 不推送
       * </pre>
       */
      public Builder setZhongWenJianChengBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        zhongWenJianCheng_ = value;
        onChanged();
        return this;
      }

      private long zuiXinJia_ ;
      /**
       * <code>optional int64 ZuiXinJia = 4;</code>
       *
       * <pre>
       * 以下动态行情
       * </pre>
       */
      public boolean hasZuiXinJia() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 ZuiXinJia = 4;</code>
       *
       * <pre>
       * 以下动态行情
       * </pre>
       */
      public long getZuiXinJia() {
        return zuiXinJia_;
      }
      /**
       * <code>optional int64 ZuiXinJia = 4;</code>
       *
       * <pre>
       * 以下动态行情
       * </pre>
       */
      public Builder setZuiXinJia(long value) {
        bitField0_ |= 0x00000008;
        zuiXinJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZuiXinJia = 4;</code>
       *
       * <pre>
       * 以下动态行情
       * </pre>
       */
      public Builder clearZuiXinJia() {
        bitField0_ = (bitField0_ & ~0x00000008);
        zuiXinJia_ = 0L;
        onChanged();
        return this;
      }

      private long kaiPanJia_ ;
      /**
       * <code>optional int64 KaiPanJia = 5;</code>
       *
       * <pre>
       * 开盘 元 推送
       * </pre>
       */
      public boolean hasKaiPanJia() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 KaiPanJia = 5;</code>
       *
       * <pre>
       * 开盘 元 推送
       * </pre>
       */
      public long getKaiPanJia() {
        return kaiPanJia_;
      }
      /**
       * <code>optional int64 KaiPanJia = 5;</code>
       *
       * <pre>
       * 开盘 元 推送
       * </pre>
       */
      public Builder setKaiPanJia(long value) {
        bitField0_ |= 0x00000010;
        kaiPanJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KaiPanJia = 5;</code>
       *
       * <pre>
       * 开盘 元 推送
       * </pre>
       */
      public Builder clearKaiPanJia() {
        bitField0_ = (bitField0_ & ~0x00000010);
        kaiPanJia_ = 0L;
        onChanged();
        return this;
      }

      private long zuiGaoJia_ ;
      /**
       * <code>optional int64 ZuiGaoJia = 6;</code>
       *
       * <pre>
       * 最高 元 推送
       * </pre>
       */
      public boolean hasZuiGaoJia() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 ZuiGaoJia = 6;</code>
       *
       * <pre>
       * 最高 元 推送
       * </pre>
       */
      public long getZuiGaoJia() {
        return zuiGaoJia_;
      }
      /**
       * <code>optional int64 ZuiGaoJia = 6;</code>
       *
       * <pre>
       * 最高 元 推送
       * </pre>
       */
      public Builder setZuiGaoJia(long value) {
        bitField0_ |= 0x00000020;
        zuiGaoJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZuiGaoJia = 6;</code>
       *
       * <pre>
       * 最高 元 推送
       * </pre>
       */
      public Builder clearZuiGaoJia() {
        bitField0_ = (bitField0_ & ~0x00000020);
        zuiGaoJia_ = 0L;
        onChanged();
        return this;
      }

      private long zuiDiJia_ ;
      /**
       * <code>optional int64 ZuiDiJia = 7;</code>
       *
       * <pre>
       * 最低 元 推送
       * </pre>
       */
      public boolean hasZuiDiJia() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 ZuiDiJia = 7;</code>
       *
       * <pre>
       * 最低 元 推送
       * </pre>
       */
      public long getZuiDiJia() {
        return zuiDiJia_;
      }
      /**
       * <code>optional int64 ZuiDiJia = 7;</code>
       *
       * <pre>
       * 最低 元 推送
       * </pre>
       */
      public Builder setZuiDiJia(long value) {
        bitField0_ |= 0x00000040;
        zuiDiJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZuiDiJia = 7;</code>
       *
       * <pre>
       * 最低 元 推送
       * </pre>
       */
      public Builder clearZuiDiJia() {
        bitField0_ = (bitField0_ & ~0x00000040);
        zuiDiJia_ = 0L;
        onChanged();
        return this;
      }

      private long zuoShou_ ;
      /**
       * <code>optional int64 ZuoShou = 8;</code>
       *
       * <pre>
       * NUM 昨收 元 推送
       * </pre>
       */
      public boolean hasZuoShou() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 ZuoShou = 8;</code>
       *
       * <pre>
       * NUM 昨收 元 推送
       * </pre>
       */
      public long getZuoShou() {
        return zuoShou_;
      }
      /**
       * <code>optional int64 ZuoShou = 8;</code>
       *
       * <pre>
       * NUM 昨收 元 推送
       * </pre>
       */
      public Builder setZuoShou(long value) {
        bitField0_ |= 0x00000080;
        zuoShou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZuoShou = 8;</code>
       *
       * <pre>
       * NUM 昨收 元 推送
       * </pre>
       */
      public Builder clearZuoShou() {
        bitField0_ = (bitField0_ & ~0x00000080);
        zuoShou_ = 0L;
        onChanged();
        return this;
      }

      private long junJia_ ;
      /**
       * <code>optional int64 JunJia = 9;</code>
       *
       * <pre>
       * NUM 均价 元 推送
       * </pre>
       */
      public boolean hasJunJia() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 JunJia = 9;</code>
       *
       * <pre>
       * NUM 均价 元 推送
       * </pre>
       */
      public long getJunJia() {
        return junJia_;
      }
      /**
       * <code>optional int64 JunJia = 9;</code>
       *
       * <pre>
       * NUM 均价 元 推送
       * </pre>
       */
      public Builder setJunJia(long value) {
        bitField0_ |= 0x00000100;
        junJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JunJia = 9;</code>
       *
       * <pre>
       * NUM 均价 元 推送
       * </pre>
       */
      public Builder clearJunJia() {
        bitField0_ = (bitField0_ & ~0x00000100);
        junJia_ = 0L;
        onChanged();
        return this;
      }

      private long zhangDie_ ;
      /**
       * <code>optional int64 ZhangDie = 10;</code>
       *
       * <pre>
       * NUM 涨跌 元 推送
       * </pre>
       */
      public boolean hasZhangDie() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 ZhangDie = 10;</code>
       *
       * <pre>
       * NUM 涨跌 元 推送
       * </pre>
       */
      public long getZhangDie() {
        return zhangDie_;
      }
      /**
       * <code>optional int64 ZhangDie = 10;</code>
       *
       * <pre>
       * NUM 涨跌 元 推送
       * </pre>
       */
      public Builder setZhangDie(long value) {
        bitField0_ |= 0x00000200;
        zhangDie_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhangDie = 10;</code>
       *
       * <pre>
       * NUM 涨跌 元 推送
       * </pre>
       */
      public Builder clearZhangDie() {
        bitField0_ = (bitField0_ & ~0x00000200);
        zhangDie_ = 0L;
        onChanged();
        return this;
      }

      private long zhangFu_ ;
      /**
       * <code>optional int64 ZhangFu = 11;</code>
       *
       * <pre>
       * NUM 涨幅 % 推送
       * </pre>
       */
      public boolean hasZhangFu() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 ZhangFu = 11;</code>
       *
       * <pre>
       * NUM 涨幅 % 推送
       * </pre>
       */
      public long getZhangFu() {
        return zhangFu_;
      }
      /**
       * <code>optional int64 ZhangFu = 11;</code>
       *
       * <pre>
       * NUM 涨幅 % 推送
       * </pre>
       */
      public Builder setZhangFu(long value) {
        bitField0_ |= 0x00000400;
        zhangFu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhangFu = 11;</code>
       *
       * <pre>
       * NUM 涨幅 % 推送
       * </pre>
       */
      public Builder clearZhangFu() {
        bitField0_ = (bitField0_ & ~0x00000400);
        zhangFu_ = 0L;
        onChanged();
        return this;
      }

      private long zhenFu_ ;
      /**
       * <code>optional int64 ZhenFu = 12;</code>
       *
       * <pre>
       * NUM 振幅 % 推送
       * </pre>
       */
      public boolean hasZhenFu() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 ZhenFu = 12;</code>
       *
       * <pre>
       * NUM 振幅 % 推送
       * </pre>
       */
      public long getZhenFu() {
        return zhenFu_;
      }
      /**
       * <code>optional int64 ZhenFu = 12;</code>
       *
       * <pre>
       * NUM 振幅 % 推送
       * </pre>
       */
      public Builder setZhenFu(long value) {
        bitField0_ |= 0x00000800;
        zhenFu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhenFu = 12;</code>
       *
       * <pre>
       * NUM 振幅 % 推送
       * </pre>
       */
      public Builder clearZhenFu() {
        bitField0_ = (bitField0_ & ~0x00000800);
        zhenFu_ = 0L;
        onChanged();
        return this;
      }

      private long chengJiaoLiang_ ;
      /**
       * <code>optional int64 ChengJiaoLiang = 13;</code>
       *
       * <pre>
       * NUM 总手 手 推送（总手-总成交量，单位股）
       * </pre>
       */
      public boolean hasChengJiaoLiang() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 13;</code>
       *
       * <pre>
       * NUM 总手 手 推送（总手-总成交量，单位股）
       * </pre>
       */
      public long getChengJiaoLiang() {
        return chengJiaoLiang_;
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 13;</code>
       *
       * <pre>
       * NUM 总手 手 推送（总手-总成交量，单位股）
       * </pre>
       */
      public Builder setChengJiaoLiang(long value) {
        bitField0_ |= 0x00001000;
        chengJiaoLiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoLiang = 13;</code>
       *
       * <pre>
       * NUM 总手 手 推送（总手-总成交量，单位股）
       * </pre>
       */
      public Builder clearChengJiaoLiang() {
        bitField0_ = (bitField0_ & ~0x00001000);
        chengJiaoLiang_ = 0L;
        onChanged();
        return this;
      }

      private long xianShou_ ;
      /**
       * <code>optional int64 XianShou = 14;</code>
       *
       * <pre>
       * NUM 现手 手 推送（现手-最新一笔交量，单位股）
       * </pre>
       */
      public boolean hasXianShou() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 XianShou = 14;</code>
       *
       * <pre>
       * NUM 现手 手 推送（现手-最新一笔交量，单位股）
       * </pre>
       */
      public long getXianShou() {
        return xianShou_;
      }
      /**
       * <code>optional int64 XianShou = 14;</code>
       *
       * <pre>
       * NUM 现手 手 推送（现手-最新一笔交量，单位股）
       * </pre>
       */
      public Builder setXianShou(long value) {
        bitField0_ |= 0x00002000;
        xianShou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 XianShou = 14;</code>
       *
       * <pre>
       * NUM 现手 手 推送（现手-最新一笔交量，单位股）
       * </pre>
       */
      public Builder clearXianShou() {
        bitField0_ = (bitField0_ & ~0x00002000);
        xianShou_ = 0L;
        onChanged();
        return this;
      }

      private long chengJiaoE_ ;
      /**
       * <code>optional int64 ChengJiaoE = 15;</code>
       *
       * <pre>
       * NUM 成交额 万元 推送
       * </pre>
       */
      public boolean hasChengJiaoE() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 ChengJiaoE = 15;</code>
       *
       * <pre>
       * NUM 成交额 万元 推送
       * </pre>
       */
      public long getChengJiaoE() {
        return chengJiaoE_;
      }
      /**
       * <code>optional int64 ChengJiaoE = 15;</code>
       *
       * <pre>
       * NUM 成交额 万元 推送
       * </pre>
       */
      public Builder setChengJiaoE(long value) {
        bitField0_ |= 0x00004000;
        chengJiaoE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoE = 15;</code>
       *
       * <pre>
       * NUM 成交额 万元 推送
       * </pre>
       */
      public Builder clearChengJiaoE() {
        bitField0_ = (bitField0_ & ~0x00004000);
        chengJiaoE_ = 0L;
        onChanged();
        return this;
      }

      private long zongChengJiaoBiShu_ ;
      /**
       * <code>optional int64 ZongChengJiaoBiShu = 16;</code>
       *
       * <pre>
       * 总成交笔数
       * </pre>
       */
      public boolean hasZongChengJiaoBiShu() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 ZongChengJiaoBiShu = 16;</code>
       *
       * <pre>
       * 总成交笔数
       * </pre>
       */
      public long getZongChengJiaoBiShu() {
        return zongChengJiaoBiShu_;
      }
      /**
       * <code>optional int64 ZongChengJiaoBiShu = 16;</code>
       *
       * <pre>
       * 总成交笔数
       * </pre>
       */
      public Builder setZongChengJiaoBiShu(long value) {
        bitField0_ |= 0x00008000;
        zongChengJiaoBiShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongChengJiaoBiShu = 16;</code>
       *
       * <pre>
       * 总成交笔数
       * </pre>
       */
      public Builder clearZongChengJiaoBiShu() {
        bitField0_ = (bitField0_ & ~0x00008000);
        zongChengJiaoBiShu_ = 0L;
        onChanged();
        return this;
      }

      private long meiBiChengJiaoGuShu_ ;
      /**
       * <code>optional int64 MeiBiChengJiaoGuShu = 17;</code>
       *
       * <pre>
       * 每笔成交股数
       * </pre>
       */
      public boolean hasMeiBiChengJiaoGuShu() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 MeiBiChengJiaoGuShu = 17;</code>
       *
       * <pre>
       * 每笔成交股数
       * </pre>
       */
      public long getMeiBiChengJiaoGuShu() {
        return meiBiChengJiaoGuShu_;
      }
      /**
       * <code>optional int64 MeiBiChengJiaoGuShu = 17;</code>
       *
       * <pre>
       * 每笔成交股数
       * </pre>
       */
      public Builder setMeiBiChengJiaoGuShu(long value) {
        bitField0_ |= 0x00010000;
        meiBiChengJiaoGuShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MeiBiChengJiaoGuShu = 17;</code>
       *
       * <pre>
       * 每笔成交股数
       * </pre>
       */
      public Builder clearMeiBiChengJiaoGuShu() {
        bitField0_ = (bitField0_ & ~0x00010000);
        meiBiChengJiaoGuShu_ = 0L;
        onChanged();
        return this;
      }

      private long huanShou_ ;
      /**
       * <code>optional int64 HuanShou = 18;</code>
       *
       * <pre>
       * 换手,千分比
       * </pre>
       */
      public boolean hasHuanShou() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 HuanShou = 18;</code>
       *
       * <pre>
       * 换手,千分比
       * </pre>
       */
      public long getHuanShou() {
        return huanShou_;
      }
      /**
       * <code>optional int64 HuanShou = 18;</code>
       *
       * <pre>
       * 换手,千分比
       * </pre>
       */
      public Builder setHuanShou(long value) {
        bitField0_ |= 0x00020000;
        huanShou_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 HuanShou = 18;</code>
       *
       * <pre>
       * 换手,千分比
       * </pre>
       */
      public Builder clearHuanShou() {
        bitField0_ = (bitField0_ & ~0x00020000);
        huanShou_ = 0L;
        onChanged();
        return this;
      }

      private long liangBi_ ;
      /**
       * <code>optional int64 LiangBi = 19;</code>
       *
       * <pre>
       * 量比,千分比
       * </pre>
       */
      public boolean hasLiangBi() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 LiangBi = 19;</code>
       *
       * <pre>
       * 量比,千分比
       * </pre>
       */
      public long getLiangBi() {
        return liangBi_;
      }
      /**
       * <code>optional int64 LiangBi = 19;</code>
       *
       * <pre>
       * 量比,千分比
       * </pre>
       */
      public Builder setLiangBi(long value) {
        bitField0_ |= 0x00040000;
        liangBi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LiangBi = 19;</code>
       *
       * <pre>
       * 量比,千分比
       * </pre>
       */
      public Builder clearLiangBi() {
        bitField0_ = (bitField0_ & ~0x00040000);
        liangBi_ = 0L;
        onChanged();
        return this;
      }

      private long neiPan_ ;
      /**
       * <code>optional int64 NeiPan = 20;</code>
       *
       * <pre>
       * NUM 内盘 手 推送
       * </pre>
       */
      public boolean hasNeiPan() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 NeiPan = 20;</code>
       *
       * <pre>
       * NUM 内盘 手 推送
       * </pre>
       */
      public long getNeiPan() {
        return neiPan_;
      }
      /**
       * <code>optional int64 NeiPan = 20;</code>
       *
       * <pre>
       * NUM 内盘 手 推送
       * </pre>
       */
      public Builder setNeiPan(long value) {
        bitField0_ |= 0x00080000;
        neiPan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 NeiPan = 20;</code>
       *
       * <pre>
       * NUM 内盘 手 推送
       * </pre>
       */
      public Builder clearNeiPan() {
        bitField0_ = (bitField0_ & ~0x00080000);
        neiPan_ = 0L;
        onChanged();
        return this;
      }

      private long waiPan_ ;
      /**
       * <code>optional int64 WaiPan = 21;</code>
       *
       * <pre>
       * NUM 外盘 手 推送
       * </pre>
       */
      public boolean hasWaiPan() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 WaiPan = 21;</code>
       *
       * <pre>
       * NUM 外盘 手 推送
       * </pre>
       */
      public long getWaiPan() {
        return waiPan_;
      }
      /**
       * <code>optional int64 WaiPan = 21;</code>
       *
       * <pre>
       * NUM 外盘 手 推送
       * </pre>
       */
      public Builder setWaiPan(long value) {
        bitField0_ |= 0x00100000;
        waiPan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WaiPan = 21;</code>
       *
       * <pre>
       * NUM 外盘 手 推送
       * </pre>
       */
      public Builder clearWaiPan() {
        bitField0_ = (bitField0_ & ~0x00100000);
        waiPan_ = 0L;
        onChanged();
        return this;
      }

      private long zongMaiRu_ ;
      /**
       * <code>optional int64 ZongMaiRu = 22;</code>
       *
       * <pre>
       * 以下L2
       * </pre>
       */
      public boolean hasZongMaiRu() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 ZongMaiRu = 22;</code>
       *
       * <pre>
       * 以下L2
       * </pre>
       */
      public long getZongMaiRu() {
        return zongMaiRu_;
      }
      /**
       * <code>optional int64 ZongMaiRu = 22;</code>
       *
       * <pre>
       * 以下L2
       * </pre>
       */
      public Builder setZongMaiRu(long value) {
        bitField0_ |= 0x00200000;
        zongMaiRu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongMaiRu = 22;</code>
       *
       * <pre>
       * 以下L2
       * </pre>
       */
      public Builder clearZongMaiRu() {
        bitField0_ = (bitField0_ & ~0x00200000);
        zongMaiRu_ = 0L;
        onChanged();
        return this;
      }

      private long zongMaiChu_ ;
      /**
       * <code>optional int64 ZongMaiChu = 23;</code>
       *
       * <pre>
       * 总卖
       * </pre>
       */
      public boolean hasZongMaiChu() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 ZongMaiChu = 23;</code>
       *
       * <pre>
       * 总卖
       * </pre>
       */
      public long getZongMaiChu() {
        return zongMaiChu_;
      }
      /**
       * <code>optional int64 ZongMaiChu = 23;</code>
       *
       * <pre>
       * 总卖
       * </pre>
       */
      public Builder setZongMaiChu(long value) {
        bitField0_ |= 0x00400000;
        zongMaiChu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongMaiChu = 23;</code>
       *
       * <pre>
       * 总卖
       * </pre>
       */
      public Builder clearZongMaiChu() {
        bitField0_ = (bitField0_ & ~0x00400000);
        zongMaiChu_ = 0L;
        onChanged();
        return this;
      }

      private long zongMaiRuJunJia_ ;
      /**
       * <code>optional int64 ZongMaiRuJunJia = 24;</code>
       *
       * <pre>
       * 总买均价
       * </pre>
       */
      public boolean hasZongMaiRuJunJia() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 ZongMaiRuJunJia = 24;</code>
       *
       * <pre>
       * 总买均价
       * </pre>
       */
      public long getZongMaiRuJunJia() {
        return zongMaiRuJunJia_;
      }
      /**
       * <code>optional int64 ZongMaiRuJunJia = 24;</code>
       *
       * <pre>
       * 总买均价
       * </pre>
       */
      public Builder setZongMaiRuJunJia(long value) {
        bitField0_ |= 0x00800000;
        zongMaiRuJunJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongMaiRuJunJia = 24;</code>
       *
       * <pre>
       * 总买均价
       * </pre>
       */
      public Builder clearZongMaiRuJunJia() {
        bitField0_ = (bitField0_ & ~0x00800000);
        zongMaiRuJunJia_ = 0L;
        onChanged();
        return this;
      }

      private long zongMaiChuJunJia_ ;
      /**
       * <code>optional int64 ZongMaiChuJunJia = 25;</code>
       *
       * <pre>
       * 总卖均价
       * </pre>
       */
      public boolean hasZongMaiChuJunJia() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 ZongMaiChuJunJia = 25;</code>
       *
       * <pre>
       * 总卖均价
       * </pre>
       */
      public long getZongMaiChuJunJia() {
        return zongMaiChuJunJia_;
      }
      /**
       * <code>optional int64 ZongMaiChuJunJia = 25;</code>
       *
       * <pre>
       * 总卖均价
       * </pre>
       */
      public Builder setZongMaiChuJunJia(long value) {
        bitField0_ |= 0x01000000;
        zongMaiChuJunJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongMaiChuJunJia = 25;</code>
       *
       * <pre>
       * 总卖均价
       * </pre>
       */
      public Builder clearZongMaiChuJunJia() {
        bitField0_ = (bitField0_ & ~0x01000000);
        zongMaiChuJunJia_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuJia1_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia1 = 26;</code>
       *
       * <pre>
       * 以下买卖盘
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia1() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia1 = 26;</code>
       *
       * <pre>
       * 以下买卖盘
       * </pre>
       */
      public long getWeiTuoMaiRuJia1() {
        return weiTuoMaiRuJia1_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia1 = 26;</code>
       *
       * <pre>
       * 以下买卖盘
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia1(long value) {
        bitField0_ |= 0x02000000;
        weiTuoMaiRuJia1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia1 = 26;</code>
       *
       * <pre>
       * 以下买卖盘
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia1() {
        bitField0_ = (bitField0_ & ~0x02000000);
        weiTuoMaiRuJia1_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuJia2_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia2 = 27;</code>
       *
       * <pre>
       * 买二价
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia2() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia2 = 27;</code>
       *
       * <pre>
       * 买二价
       * </pre>
       */
      public long getWeiTuoMaiRuJia2() {
        return weiTuoMaiRuJia2_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia2 = 27;</code>
       *
       * <pre>
       * 买二价
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia2(long value) {
        bitField0_ |= 0x04000000;
        weiTuoMaiRuJia2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia2 = 27;</code>
       *
       * <pre>
       * 买二价
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia2() {
        bitField0_ = (bitField0_ & ~0x04000000);
        weiTuoMaiRuJia2_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuJia3_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia3 = 28;</code>
       *
       * <pre>
       * 买三价
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia3() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia3 = 28;</code>
       *
       * <pre>
       * 买三价
       * </pre>
       */
      public long getWeiTuoMaiRuJia3() {
        return weiTuoMaiRuJia3_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia3 = 28;</code>
       *
       * <pre>
       * 买三价
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia3(long value) {
        bitField0_ |= 0x08000000;
        weiTuoMaiRuJia3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia3 = 28;</code>
       *
       * <pre>
       * 买三价
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia3() {
        bitField0_ = (bitField0_ & ~0x08000000);
        weiTuoMaiRuJia3_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuJia4_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia4 = 29;</code>
       *
       * <pre>
       * 买四价
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia4() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia4 = 29;</code>
       *
       * <pre>
       * 买四价
       * </pre>
       */
      public long getWeiTuoMaiRuJia4() {
        return weiTuoMaiRuJia4_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia4 = 29;</code>
       *
       * <pre>
       * 买四价
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia4(long value) {
        bitField0_ |= 0x10000000;
        weiTuoMaiRuJia4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia4 = 29;</code>
       *
       * <pre>
       * 买四价
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia4() {
        bitField0_ = (bitField0_ & ~0x10000000);
        weiTuoMaiRuJia4_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuJia5_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuJia5 = 30;</code>
       *
       * <pre>
       * 买五价
       * </pre>
       */
      public boolean hasWeiTuoMaiRuJia5() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia5 = 30;</code>
       *
       * <pre>
       * 买五价
       * </pre>
       */
      public long getWeiTuoMaiRuJia5() {
        return weiTuoMaiRuJia5_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia5 = 30;</code>
       *
       * <pre>
       * 买五价
       * </pre>
       */
      public Builder setWeiTuoMaiRuJia5(long value) {
        bitField0_ |= 0x20000000;
        weiTuoMaiRuJia5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuJia5 = 30;</code>
       *
       * <pre>
       * 买五价
       * </pre>
       */
      public Builder clearWeiTuoMaiRuJia5() {
        bitField0_ = (bitField0_ & ~0x20000000);
        weiTuoMaiRuJia5_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuLiang1_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang1 = 31;</code>
       *
       * <pre>
       * 买一量
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang1() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang1 = 31;</code>
       *
       * <pre>
       * 买一量
       * </pre>
       */
      public long getWeiTuoMaiRuLiang1() {
        return weiTuoMaiRuLiang1_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang1 = 31;</code>
       *
       * <pre>
       * 买一量
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang1(long value) {
        bitField0_ |= 0x40000000;
        weiTuoMaiRuLiang1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang1 = 31;</code>
       *
       * <pre>
       * 买一量
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang1() {
        bitField0_ = (bitField0_ & ~0x40000000);
        weiTuoMaiRuLiang1_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuLiang2_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang2 = 32;</code>
       *
       * <pre>
       * 买二量
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang2() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang2 = 32;</code>
       *
       * <pre>
       * 买二量
       * </pre>
       */
      public long getWeiTuoMaiRuLiang2() {
        return weiTuoMaiRuLiang2_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang2 = 32;</code>
       *
       * <pre>
       * 买二量
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang2(long value) {
        bitField0_ |= 0x80000000;
        weiTuoMaiRuLiang2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang2 = 32;</code>
       *
       * <pre>
       * 买二量
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang2() {
        bitField0_ = (bitField0_ & ~0x80000000);
        weiTuoMaiRuLiang2_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuLiang3_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang3 = 33;</code>
       *
       * <pre>
       * 买三量
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang3() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang3 = 33;</code>
       *
       * <pre>
       * 买三量
       * </pre>
       */
      public long getWeiTuoMaiRuLiang3() {
        return weiTuoMaiRuLiang3_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang3 = 33;</code>
       *
       * <pre>
       * 买三量
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang3(long value) {
        bitField1_ |= 0x00000001;
        weiTuoMaiRuLiang3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang3 = 33;</code>
       *
       * <pre>
       * 买三量
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang3() {
        bitField1_ = (bitField1_ & ~0x00000001);
        weiTuoMaiRuLiang3_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuLiang4_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang4 = 34;</code>
       *
       * <pre>
       * 买四量
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang4() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang4 = 34;</code>
       *
       * <pre>
       * 买四量
       * </pre>
       */
      public long getWeiTuoMaiRuLiang4() {
        return weiTuoMaiRuLiang4_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang4 = 34;</code>
       *
       * <pre>
       * 买四量
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang4(long value) {
        bitField1_ |= 0x00000002;
        weiTuoMaiRuLiang4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang4 = 34;</code>
       *
       * <pre>
       * 买四量
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang4() {
        bitField1_ = (bitField1_ & ~0x00000002);
        weiTuoMaiRuLiang4_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiRuLiang5_ ;
      /**
       * <code>optional int64 WeiTuoMaiRuLiang5 = 35;</code>
       *
       * <pre>
       * 买五量
       * </pre>
       */
      public boolean hasWeiTuoMaiRuLiang5() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang5 = 35;</code>
       *
       * <pre>
       * 买五量
       * </pre>
       */
      public long getWeiTuoMaiRuLiang5() {
        return weiTuoMaiRuLiang5_;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang5 = 35;</code>
       *
       * <pre>
       * 买五量
       * </pre>
       */
      public Builder setWeiTuoMaiRuLiang5(long value) {
        bitField1_ |= 0x00000004;
        weiTuoMaiRuLiang5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiRuLiang5 = 35;</code>
       *
       * <pre>
       * 买五量
       * </pre>
       */
      public Builder clearWeiTuoMaiRuLiang5() {
        bitField1_ = (bitField1_ & ~0x00000004);
        weiTuoMaiRuLiang5_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuJia1_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia1 = 36;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia1() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia1 = 36;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public long getWeiTuoMaiChuJia1() {
        return weiTuoMaiChuJia1_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia1 = 36;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia1(long value) {
        bitField1_ |= 0x00000008;
        weiTuoMaiChuJia1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia1 = 36;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia1() {
        bitField1_ = (bitField1_ & ~0x00000008);
        weiTuoMaiChuJia1_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuJia2_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia2 = 37;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia2() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia2 = 37;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public long getWeiTuoMaiChuJia2() {
        return weiTuoMaiChuJia2_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia2 = 37;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia2(long value) {
        bitField1_ |= 0x00000010;
        weiTuoMaiChuJia2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia2 = 37;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia2() {
        bitField1_ = (bitField1_ & ~0x00000010);
        weiTuoMaiChuJia2_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuJia3_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia3 = 38;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia3() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia3 = 38;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public long getWeiTuoMaiChuJia3() {
        return weiTuoMaiChuJia3_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia3 = 38;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia3(long value) {
        bitField1_ |= 0x00000020;
        weiTuoMaiChuJia3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia3 = 38;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia3() {
        bitField1_ = (bitField1_ & ~0x00000020);
        weiTuoMaiChuJia3_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuJia4_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia4 = 39;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia4() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia4 = 39;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public long getWeiTuoMaiChuJia4() {
        return weiTuoMaiChuJia4_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia4 = 39;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia4(long value) {
        bitField1_ |= 0x00000040;
        weiTuoMaiChuJia4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia4 = 39;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia4() {
        bitField1_ = (bitField1_ & ~0x00000040);
        weiTuoMaiChuJia4_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuJia5_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuJia5 = 40;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public boolean hasWeiTuoMaiChuJia5() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia5 = 40;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public long getWeiTuoMaiChuJia5() {
        return weiTuoMaiChuJia5_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia5 = 40;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder setWeiTuoMaiChuJia5(long value) {
        bitField1_ |= 0x00000080;
        weiTuoMaiChuJia5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuJia5 = 40;</code>
       *
       * <pre>
       * 卖一价
       * </pre>
       */
      public Builder clearWeiTuoMaiChuJia5() {
        bitField1_ = (bitField1_ & ~0x00000080);
        weiTuoMaiChuJia5_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuLiang1_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang1 = 41;</code>
       *
       * <pre>
       * 卖一量
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang1() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang1 = 41;</code>
       *
       * <pre>
       * 卖一量
       * </pre>
       */
      public long getWeiTuoMaiChuLiang1() {
        return weiTuoMaiChuLiang1_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang1 = 41;</code>
       *
       * <pre>
       * 卖一量
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang1(long value) {
        bitField1_ |= 0x00000100;
        weiTuoMaiChuLiang1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang1 = 41;</code>
       *
       * <pre>
       * 卖一量
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang1() {
        bitField1_ = (bitField1_ & ~0x00000100);
        weiTuoMaiChuLiang1_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuLiang2_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang2 = 42;</code>
       *
       * <pre>
       * 卖二量
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang2() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang2 = 42;</code>
       *
       * <pre>
       * 卖二量
       * </pre>
       */
      public long getWeiTuoMaiChuLiang2() {
        return weiTuoMaiChuLiang2_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang2 = 42;</code>
       *
       * <pre>
       * 卖二量
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang2(long value) {
        bitField1_ |= 0x00000200;
        weiTuoMaiChuLiang2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang2 = 42;</code>
       *
       * <pre>
       * 卖二量
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang2() {
        bitField1_ = (bitField1_ & ~0x00000200);
        weiTuoMaiChuLiang2_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuLiang3_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang3 = 43;</code>
       *
       * <pre>
       * 卖三量
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang3() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang3 = 43;</code>
       *
       * <pre>
       * 卖三量
       * </pre>
       */
      public long getWeiTuoMaiChuLiang3() {
        return weiTuoMaiChuLiang3_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang3 = 43;</code>
       *
       * <pre>
       * 卖三量
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang3(long value) {
        bitField1_ |= 0x00000400;
        weiTuoMaiChuLiang3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang3 = 43;</code>
       *
       * <pre>
       * 卖三量
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang3() {
        bitField1_ = (bitField1_ & ~0x00000400);
        weiTuoMaiChuLiang3_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuLiang4_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang4 = 44;</code>
       *
       * <pre>
       * 卖四量
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang4() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang4 = 44;</code>
       *
       * <pre>
       * 卖四量
       * </pre>
       */
      public long getWeiTuoMaiChuLiang4() {
        return weiTuoMaiChuLiang4_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang4 = 44;</code>
       *
       * <pre>
       * 卖四量
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang4(long value) {
        bitField1_ |= 0x00000800;
        weiTuoMaiChuLiang4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang4 = 44;</code>
       *
       * <pre>
       * 卖四量
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang4() {
        bitField1_ = (bitField1_ & ~0x00000800);
        weiTuoMaiChuLiang4_ = 0L;
        onChanged();
        return this;
      }

      private long weiTuoMaiChuLiang5_ ;
      /**
       * <code>optional int64 WeiTuoMaiChuLiang5 = 45;</code>
       *
       * <pre>
       * 卖五量
       * </pre>
       */
      public boolean hasWeiTuoMaiChuLiang5() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang5 = 45;</code>
       *
       * <pre>
       * 卖五量
       * </pre>
       */
      public long getWeiTuoMaiChuLiang5() {
        return weiTuoMaiChuLiang5_;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang5 = 45;</code>
       *
       * <pre>
       * 卖五量
       * </pre>
       */
      public Builder setWeiTuoMaiChuLiang5(long value) {
        bitField1_ |= 0x00001000;
        weiTuoMaiChuLiang5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiTuoMaiChuLiang5 = 45;</code>
       *
       * <pre>
       * 卖五量
       * </pre>
       */
      public Builder clearWeiTuoMaiChuLiang5() {
        bitField1_ = (bitField1_ & ~0x00001000);
        weiTuoMaiChuLiang5_ = 0L;
        onChanged();
        return this;
      }

      private long weiBi_ ;
      /**
       * <code>optional int64 WeiBi = 46;</code>
       *
       * <pre>
       * 需要计算
       * </pre>
       */
      public boolean hasWeiBi() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 WeiBi = 46;</code>
       *
       * <pre>
       * 需要计算
       * </pre>
       */
      public long getWeiBi() {
        return weiBi_;
      }
      /**
       * <code>optional int64 WeiBi = 46;</code>
       *
       * <pre>
       * 需要计算
       * </pre>
       */
      public Builder setWeiBi(long value) {
        bitField1_ |= 0x00002000;
        weiBi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiBi = 46;</code>
       *
       * <pre>
       * 需要计算
       * </pre>
       */
      public Builder clearWeiBi() {
        bitField1_ = (bitField1_ & ~0x00002000);
        weiBi_ = 0L;
        onChanged();
        return this;
      }

      private long weiCha_ ;
      /**
       * <code>optional int64 WeiCha = 47;</code>
       *
       * <pre>
       * 委差
       * </pre>
       */
      public boolean hasWeiCha() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 WeiCha = 47;</code>
       *
       * <pre>
       * 委差
       * </pre>
       */
      public long getWeiCha() {
        return weiCha_;
      }
      /**
       * <code>optional int64 WeiCha = 47;</code>
       *
       * <pre>
       * 委差
       * </pre>
       */
      public Builder setWeiCha(long value) {
        bitField1_ |= 0x00004000;
        weiCha_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiCha = 47;</code>
       *
       * <pre>
       * 委差
       * </pre>
       */
      public Builder clearWeiCha() {
        bitField1_ = (bitField1_ & ~0x00004000);
        weiCha_ = 0L;
        onChanged();
        return this;
      }

      private long zhangSu_ ;
      /**
       * <code>optional int64 ZhangSu = 48;</code>
       *
       * <pre>
       * 涨速
       * </pre>
       */
      public boolean hasZhangSu() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 ZhangSu = 48;</code>
       *
       * <pre>
       * 涨速
       * </pre>
       */
      public long getZhangSu() {
        return zhangSu_;
      }
      /**
       * <code>optional int64 ZhangSu = 48;</code>
       *
       * <pre>
       * 涨速
       * </pre>
       */
      public Builder setZhangSu(long value) {
        bitField1_ |= 0x00008000;
        zhangSu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhangSu = 48;</code>
       *
       * <pre>
       * 涨速
       * </pre>
       */
      public Builder clearZhangSu() {
        bitField1_ = (bitField1_ & ~0x00008000);
        zhangSu_ = 0L;
        onChanged();
        return this;
      }

      private long junLiang5Ri_ ;
      /**
       * <code>optional int64 JunLiang5Ri = 49;</code>
       *
       * <pre>
       * 5日均量
       * </pre>
       */
      public boolean hasJunLiang5Ri() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 JunLiang5Ri = 49;</code>
       *
       * <pre>
       * 5日均量
       * </pre>
       */
      public long getJunLiang5Ri() {
        return junLiang5Ri_;
      }
      /**
       * <code>optional int64 JunLiang5Ri = 49;</code>
       *
       * <pre>
       * 5日均量
       * </pre>
       */
      public Builder setJunLiang5Ri(long value) {
        bitField1_ |= 0x00010000;
        junLiang5Ri_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JunLiang5Ri = 49;</code>
       *
       * <pre>
       * 5日均量
       * </pre>
       */
      public Builder clearJunLiang5Ri() {
        bitField1_ = (bitField1_ & ~0x00010000);
        junLiang5Ri_ = 0L;
        onChanged();
        return this;
      }

      private long shangZhangJiaShu_ ;
      /**
       * <code>optional int64 ShangZhangJiaShu = 50;</code>
       *
       * <pre>
       * 所在市场的上涨家数
       * </pre>
       */
      public boolean hasShangZhangJiaShu() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 ShangZhangJiaShu = 50;</code>
       *
       * <pre>
       * 所在市场的上涨家数
       * </pre>
       */
      public long getShangZhangJiaShu() {
        return shangZhangJiaShu_;
      }
      /**
       * <code>optional int64 ShangZhangJiaShu = 50;</code>
       *
       * <pre>
       * 所在市场的上涨家数
       * </pre>
       */
      public Builder setShangZhangJiaShu(long value) {
        bitField1_ |= 0x00020000;
        shangZhangJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ShangZhangJiaShu = 50;</code>
       *
       * <pre>
       * 所在市场的上涨家数
       * </pre>
       */
      public Builder clearShangZhangJiaShu() {
        bitField1_ = (bitField1_ & ~0x00020000);
        shangZhangJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long xiaDieJiaShu_ ;
      /**
       * <code>optional int64 XiaDieJiaShu = 51;</code>
       *
       * <pre>
       * 所在市场的下跌家数
       * </pre>
       */
      public boolean hasXiaDieJiaShu() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 XiaDieJiaShu = 51;</code>
       *
       * <pre>
       * 所在市场的下跌家数
       * </pre>
       */
      public long getXiaDieJiaShu() {
        return xiaDieJiaShu_;
      }
      /**
       * <code>optional int64 XiaDieJiaShu = 51;</code>
       *
       * <pre>
       * 所在市场的下跌家数
       * </pre>
       */
      public Builder setXiaDieJiaShu(long value) {
        bitField1_ |= 0x00040000;
        xiaDieJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 XiaDieJiaShu = 51;</code>
       *
       * <pre>
       * 所在市场的下跌家数
       * </pre>
       */
      public Builder clearXiaDieJiaShu() {
        bitField1_ = (bitField1_ & ~0x00040000);
        xiaDieJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long pingPanJiaShu_ ;
      /**
       * <code>optional int64 PingPanJiaShu = 52;</code>
       *
       * <pre>
       * 所在市场的平盘家数
       * </pre>
       */
      public boolean hasPingPanJiaShu() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 PingPanJiaShu = 52;</code>
       *
       * <pre>
       * 所在市场的平盘家数
       * </pre>
       */
      public long getPingPanJiaShu() {
        return pingPanJiaShu_;
      }
      /**
       * <code>optional int64 PingPanJiaShu = 52;</code>
       *
       * <pre>
       * 所在市场的平盘家数
       * </pre>
       */
      public Builder setPingPanJiaShu(long value) {
        bitField1_ |= 0x00080000;
        pingPanJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 PingPanJiaShu = 52;</code>
       *
       * <pre>
       * 所在市场的平盘家数
       * </pre>
       */
      public Builder clearPingPanJiaShu() {
        bitField1_ = (bitField1_ & ~0x00080000);
        pingPanJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long aGuShangZhangJiaShu_ ;
      /**
       * <code>optional int64 AGuShangZhangJiaShu = 53;</code>
       *
       * <pre>
       * 所在市场的A股上涨家数
       * </pre>
       */
      public boolean hasAGuShangZhangJiaShu() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 AGuShangZhangJiaShu = 53;</code>
       *
       * <pre>
       * 所在市场的A股上涨家数
       * </pre>
       */
      public long getAGuShangZhangJiaShu() {
        return aGuShangZhangJiaShu_;
      }
      /**
       * <code>optional int64 AGuShangZhangJiaShu = 53;</code>
       *
       * <pre>
       * 所在市场的A股上涨家数
       * </pre>
       */
      public Builder setAGuShangZhangJiaShu(long value) {
        bitField1_ |= 0x00100000;
        aGuShangZhangJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 AGuShangZhangJiaShu = 53;</code>
       *
       * <pre>
       * 所在市场的A股上涨家数
       * </pre>
       */
      public Builder clearAGuShangZhangJiaShu() {
        bitField1_ = (bitField1_ & ~0x00100000);
        aGuShangZhangJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long aGuXiaDieJiaShu_ ;
      /**
       * <code>optional int64 AGuXiaDieJiaShu = 54;</code>
       *
       * <pre>
       * 所在市场的A股下跌家数
       * </pre>
       */
      public boolean hasAGuXiaDieJiaShu() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 AGuXiaDieJiaShu = 54;</code>
       *
       * <pre>
       * 所在市场的A股下跌家数
       * </pre>
       */
      public long getAGuXiaDieJiaShu() {
        return aGuXiaDieJiaShu_;
      }
      /**
       * <code>optional int64 AGuXiaDieJiaShu = 54;</code>
       *
       * <pre>
       * 所在市场的A股下跌家数
       * </pre>
       */
      public Builder setAGuXiaDieJiaShu(long value) {
        bitField1_ |= 0x00200000;
        aGuXiaDieJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 AGuXiaDieJiaShu = 54;</code>
       *
       * <pre>
       * 所在市场的A股下跌家数
       * </pre>
       */
      public Builder clearAGuXiaDieJiaShu() {
        bitField1_ = (bitField1_ & ~0x00200000);
        aGuXiaDieJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long aGuPingPanJiaShu_ ;
      /**
       * <code>optional int64 AGuPingPanJiaShu = 55;</code>
       *
       * <pre>
       * 所在市场的A股平盘家数
       * </pre>
       */
      public boolean hasAGuPingPanJiaShu() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 AGuPingPanJiaShu = 55;</code>
       *
       * <pre>
       * 所在市场的A股平盘家数
       * </pre>
       */
      public long getAGuPingPanJiaShu() {
        return aGuPingPanJiaShu_;
      }
      /**
       * <code>optional int64 AGuPingPanJiaShu = 55;</code>
       *
       * <pre>
       * 所在市场的A股平盘家数
       * </pre>
       */
      public Builder setAGuPingPanJiaShu(long value) {
        bitField1_ |= 0x00400000;
        aGuPingPanJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 AGuPingPanJiaShu = 55;</code>
       *
       * <pre>
       * 所在市场的A股平盘家数
       * </pre>
       */
      public Builder clearAGuPingPanJiaShu() {
        bitField1_ = (bitField1_ & ~0x00400000);
        aGuPingPanJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long aGuChengJiaoE_ ;
      /**
       * <code>optional int64 AGuChengJiaoE = 56;</code>
       *
       * <pre>
       * 所在市场的A股成交额(亿)
       * </pre>
       */
      public boolean hasAGuChengJiaoE() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 AGuChengJiaoE = 56;</code>
       *
       * <pre>
       * 所在市场的A股成交额(亿)
       * </pre>
       */
      public long getAGuChengJiaoE() {
        return aGuChengJiaoE_;
      }
      /**
       * <code>optional int64 AGuChengJiaoE = 56;</code>
       *
       * <pre>
       * 所在市场的A股成交额(亿)
       * </pre>
       */
      public Builder setAGuChengJiaoE(long value) {
        bitField1_ |= 0x00800000;
        aGuChengJiaoE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 AGuChengJiaoE = 56;</code>
       *
       * <pre>
       * 所在市场的A股成交额(亿)
       * </pre>
       */
      public Builder clearAGuChengJiaoE() {
        bitField1_ = (bitField1_ & ~0x00800000);
        aGuChengJiaoE_ = 0L;
        onChanged();
        return this;
      }

      private long bGuShangZhangJiaShu_ ;
      /**
       * <code>optional int64 BGuShangZhangJiaShu = 57;</code>
       *
       * <pre>
       * 所在市场的B股上涨家数
       * </pre>
       */
      public boolean hasBGuShangZhangJiaShu() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 BGuShangZhangJiaShu = 57;</code>
       *
       * <pre>
       * 所在市场的B股上涨家数
       * </pre>
       */
      public long getBGuShangZhangJiaShu() {
        return bGuShangZhangJiaShu_;
      }
      /**
       * <code>optional int64 BGuShangZhangJiaShu = 57;</code>
       *
       * <pre>
       * 所在市场的B股上涨家数
       * </pre>
       */
      public Builder setBGuShangZhangJiaShu(long value) {
        bitField1_ |= 0x01000000;
        bGuShangZhangJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BGuShangZhangJiaShu = 57;</code>
       *
       * <pre>
       * 所在市场的B股上涨家数
       * </pre>
       */
      public Builder clearBGuShangZhangJiaShu() {
        bitField1_ = (bitField1_ & ~0x01000000);
        bGuShangZhangJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long bGuXiaDieJiaShu_ ;
      /**
       * <code>optional int64 BGuXiaDieJiaShu = 58;</code>
       *
       * <pre>
       * 所在市场的B股下跌家数
       * </pre>
       */
      public boolean hasBGuXiaDieJiaShu() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 BGuXiaDieJiaShu = 58;</code>
       *
       * <pre>
       * 所在市场的B股下跌家数
       * </pre>
       */
      public long getBGuXiaDieJiaShu() {
        return bGuXiaDieJiaShu_;
      }
      /**
       * <code>optional int64 BGuXiaDieJiaShu = 58;</code>
       *
       * <pre>
       * 所在市场的B股下跌家数
       * </pre>
       */
      public Builder setBGuXiaDieJiaShu(long value) {
        bitField1_ |= 0x02000000;
        bGuXiaDieJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BGuXiaDieJiaShu = 58;</code>
       *
       * <pre>
       * 所在市场的B股下跌家数
       * </pre>
       */
      public Builder clearBGuXiaDieJiaShu() {
        bitField1_ = (bitField1_ & ~0x02000000);
        bGuXiaDieJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long bGuPingPanJiaShu_ ;
      /**
       * <code>optional int64 BGuPingPanJiaShu = 59;</code>
       *
       * <pre>
       * 所在市场的B股平盘家数
       * </pre>
       */
      public boolean hasBGuPingPanJiaShu() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 BGuPingPanJiaShu = 59;</code>
       *
       * <pre>
       * 所在市场的B股平盘家数
       * </pre>
       */
      public long getBGuPingPanJiaShu() {
        return bGuPingPanJiaShu_;
      }
      /**
       * <code>optional int64 BGuPingPanJiaShu = 59;</code>
       *
       * <pre>
       * 所在市场的B股平盘家数
       * </pre>
       */
      public Builder setBGuPingPanJiaShu(long value) {
        bitField1_ |= 0x04000000;
        bGuPingPanJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BGuPingPanJiaShu = 59;</code>
       *
       * <pre>
       * 所在市场的B股平盘家数
       * </pre>
       */
      public Builder clearBGuPingPanJiaShu() {
        bitField1_ = (bitField1_ & ~0x04000000);
        bGuPingPanJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long bGuChengJiaoE_ ;
      /**
       * <code>optional int64 BGuChengJiaoE = 60;</code>
       *
       * <pre>
       * 所在市场的B股成交额(亿)
       * </pre>
       */
      public boolean hasBGuChengJiaoE() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 BGuChengJiaoE = 60;</code>
       *
       * <pre>
       * 所在市场的B股成交额(亿)
       * </pre>
       */
      public long getBGuChengJiaoE() {
        return bGuChengJiaoE_;
      }
      /**
       * <code>optional int64 BGuChengJiaoE = 60;</code>
       *
       * <pre>
       * 所在市场的B股成交额(亿)
       * </pre>
       */
      public Builder setBGuChengJiaoE(long value) {
        bitField1_ |= 0x08000000;
        bGuChengJiaoE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BGuChengJiaoE = 60;</code>
       *
       * <pre>
       * 所在市场的B股成交额(亿)
       * </pre>
       */
      public Builder clearBGuChengJiaoE() {
        bitField1_ = (bitField1_ & ~0x08000000);
        bGuChengJiaoE_ = 0L;
        onChanged();
        return this;
      }

      private long jiJinShangZhangJiaShu_ ;
      /**
       * <code>optional int64 JiJinShangZhangJiaShu = 61;</code>
       *
       * <pre>
       * 所在市场的基金上涨家数
       * </pre>
       */
      public boolean hasJiJinShangZhangJiaShu() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 JiJinShangZhangJiaShu = 61;</code>
       *
       * <pre>
       * 所在市场的基金上涨家数
       * </pre>
       */
      public long getJiJinShangZhangJiaShu() {
        return jiJinShangZhangJiaShu_;
      }
      /**
       * <code>optional int64 JiJinShangZhangJiaShu = 61;</code>
       *
       * <pre>
       * 所在市场的基金上涨家数
       * </pre>
       */
      public Builder setJiJinShangZhangJiaShu(long value) {
        bitField1_ |= 0x10000000;
        jiJinShangZhangJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiJinShangZhangJiaShu = 61;</code>
       *
       * <pre>
       * 所在市场的基金上涨家数
       * </pre>
       */
      public Builder clearJiJinShangZhangJiaShu() {
        bitField1_ = (bitField1_ & ~0x10000000);
        jiJinShangZhangJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long jiJinXiaDieJiaShu_ ;
      /**
       * <code>optional int64 JiJinXiaDieJiaShu = 62;</code>
       *
       * <pre>
       * 所在市场的基金下跌家数
       * </pre>
       */
      public boolean hasJiJinXiaDieJiaShu() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 JiJinXiaDieJiaShu = 62;</code>
       *
       * <pre>
       * 所在市场的基金下跌家数
       * </pre>
       */
      public long getJiJinXiaDieJiaShu() {
        return jiJinXiaDieJiaShu_;
      }
      /**
       * <code>optional int64 JiJinXiaDieJiaShu = 62;</code>
       *
       * <pre>
       * 所在市场的基金下跌家数
       * </pre>
       */
      public Builder setJiJinXiaDieJiaShu(long value) {
        bitField1_ |= 0x20000000;
        jiJinXiaDieJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiJinXiaDieJiaShu = 62;</code>
       *
       * <pre>
       * 所在市场的基金下跌家数
       * </pre>
       */
      public Builder clearJiJinXiaDieJiaShu() {
        bitField1_ = (bitField1_ & ~0x20000000);
        jiJinXiaDieJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long jiJinPingPanJiaShu_ ;
      /**
       * <code>optional int64 JiJinPingPanJiaShu = 63;</code>
       *
       * <pre>
       * 所在市场的基金平盘家数
       * </pre>
       */
      public boolean hasJiJinPingPanJiaShu() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 JiJinPingPanJiaShu = 63;</code>
       *
       * <pre>
       * 所在市场的基金平盘家数
       * </pre>
       */
      public long getJiJinPingPanJiaShu() {
        return jiJinPingPanJiaShu_;
      }
      /**
       * <code>optional int64 JiJinPingPanJiaShu = 63;</code>
       *
       * <pre>
       * 所在市场的基金平盘家数
       * </pre>
       */
      public Builder setJiJinPingPanJiaShu(long value) {
        bitField1_ |= 0x40000000;
        jiJinPingPanJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiJinPingPanJiaShu = 63;</code>
       *
       * <pre>
       * 所在市场的基金平盘家数
       * </pre>
       */
      public Builder clearJiJinPingPanJiaShu() {
        bitField1_ = (bitField1_ & ~0x40000000);
        jiJinPingPanJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long jiJinChengJiaoE_ ;
      /**
       * <code>optional int64 JiJinChengJiaoE = 64;</code>
       *
       * <pre>
       * 所在市场的基金成交额(亿)
       * </pre>
       */
      public boolean hasJiJinChengJiaoE() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 JiJinChengJiaoE = 64;</code>
       *
       * <pre>
       * 所在市场的基金成交额(亿)
       * </pre>
       */
      public long getJiJinChengJiaoE() {
        return jiJinChengJiaoE_;
      }
      /**
       * <code>optional int64 JiJinChengJiaoE = 64;</code>
       *
       * <pre>
       * 所在市场的基金成交额(亿)
       * </pre>
       */
      public Builder setJiJinChengJiaoE(long value) {
        bitField1_ |= 0x80000000;
        jiJinChengJiaoE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiJinChengJiaoE = 64;</code>
       *
       * <pre>
       * 所在市场的基金成交额(亿)
       * </pre>
       */
      public Builder clearJiJinChengJiaoE() {
        bitField1_ = (bitField1_ & ~0x80000000);
        jiJinChengJiaoE_ = 0L;
        onChanged();
        return this;
      }

      private long qiTaShangZhangJiaShu_ ;
      /**
       * <code>optional int64 QiTaShangZhangJiaShu = 65;</code>
       *
       * <pre>
       * 所在市场的其他上涨家数
       * </pre>
       */
      public boolean hasQiTaShangZhangJiaShu() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 QiTaShangZhangJiaShu = 65;</code>
       *
       * <pre>
       * 所在市场的其他上涨家数
       * </pre>
       */
      public long getQiTaShangZhangJiaShu() {
        return qiTaShangZhangJiaShu_;
      }
      /**
       * <code>optional int64 QiTaShangZhangJiaShu = 65;</code>
       *
       * <pre>
       * 所在市场的其他上涨家数
       * </pre>
       */
      public Builder setQiTaShangZhangJiaShu(long value) {
        bitField2_ |= 0x00000001;
        qiTaShangZhangJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 QiTaShangZhangJiaShu = 65;</code>
       *
       * <pre>
       * 所在市场的其他上涨家数
       * </pre>
       */
      public Builder clearQiTaShangZhangJiaShu() {
        bitField2_ = (bitField2_ & ~0x00000001);
        qiTaShangZhangJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long qiTaXiaDieJiaShu_ ;
      /**
       * <code>optional int64 QiTaXiaDieJiaShu = 66;</code>
       *
       * <pre>
       * 所在市场的其他下跌家数
       * </pre>
       */
      public boolean hasQiTaXiaDieJiaShu() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 QiTaXiaDieJiaShu = 66;</code>
       *
       * <pre>
       * 所在市场的其他下跌家数
       * </pre>
       */
      public long getQiTaXiaDieJiaShu() {
        return qiTaXiaDieJiaShu_;
      }
      /**
       * <code>optional int64 QiTaXiaDieJiaShu = 66;</code>
       *
       * <pre>
       * 所在市场的其他下跌家数
       * </pre>
       */
      public Builder setQiTaXiaDieJiaShu(long value) {
        bitField2_ |= 0x00000002;
        qiTaXiaDieJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 QiTaXiaDieJiaShu = 66;</code>
       *
       * <pre>
       * 所在市场的其他下跌家数
       * </pre>
       */
      public Builder clearQiTaXiaDieJiaShu() {
        bitField2_ = (bitField2_ & ~0x00000002);
        qiTaXiaDieJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long qiTaPingPanJiaShu_ ;
      /**
       * <code>optional int64 QiTaPingPanJiaShu = 67;</code>
       *
       * <pre>
       * 所在市场的其他平盘家数
       * </pre>
       */
      public boolean hasQiTaPingPanJiaShu() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 QiTaPingPanJiaShu = 67;</code>
       *
       * <pre>
       * 所在市场的其他平盘家数
       * </pre>
       */
      public long getQiTaPingPanJiaShu() {
        return qiTaPingPanJiaShu_;
      }
      /**
       * <code>optional int64 QiTaPingPanJiaShu = 67;</code>
       *
       * <pre>
       * 所在市场的其他平盘家数
       * </pre>
       */
      public Builder setQiTaPingPanJiaShu(long value) {
        bitField2_ |= 0x00000004;
        qiTaPingPanJiaShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 QiTaPingPanJiaShu = 67;</code>
       *
       * <pre>
       * 所在市场的其他平盘家数
       * </pre>
       */
      public Builder clearQiTaPingPanJiaShu() {
        bitField2_ = (bitField2_ & ~0x00000004);
        qiTaPingPanJiaShu_ = 0L;
        onChanged();
        return this;
      }

      private long qiTaChengJiaoE_ ;
      /**
       * <code>optional int64 QiTaChengJiaoE = 68;</code>
       *
       * <pre>
       * 所在市场的其他成交额(亿)
       * </pre>
       */
      public boolean hasQiTaChengJiaoE() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 QiTaChengJiaoE = 68;</code>
       *
       * <pre>
       * 所在市场的其他成交额(亿)
       * </pre>
       */
      public long getQiTaChengJiaoE() {
        return qiTaChengJiaoE_;
      }
      /**
       * <code>optional int64 QiTaChengJiaoE = 68;</code>
       *
       * <pre>
       * 所在市场的其他成交额(亿)
       * </pre>
       */
      public Builder setQiTaChengJiaoE(long value) {
        bitField2_ |= 0x00000008;
        qiTaChengJiaoE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 QiTaChengJiaoE = 68;</code>
       *
       * <pre>
       * 所在市场的其他成交额(亿)
       * </pre>
       */
      public Builder clearQiTaChengJiaoE() {
        bitField2_ = (bitField2_ & ~0x00000008);
        qiTaChengJiaoE_ = 0L;
        onChanged();
        return this;
      }

      private long maiRuDanShu_ ;
      /**
       * <code>optional int64 MaiRuDanShu = 69;</code>
       *
       * <pre>
       * 买入单数
       * </pre>
       */
      public boolean hasMaiRuDanShu() {
        return ((bitField2_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 MaiRuDanShu = 69;</code>
       *
       * <pre>
       * 买入单数
       * </pre>
       */
      public long getMaiRuDanShu() {
        return maiRuDanShu_;
      }
      /**
       * <code>optional int64 MaiRuDanShu = 69;</code>
       *
       * <pre>
       * 买入单数
       * </pre>
       */
      public Builder setMaiRuDanShu(long value) {
        bitField2_ |= 0x00000010;
        maiRuDanShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MaiRuDanShu = 69;</code>
       *
       * <pre>
       * 买入单数
       * </pre>
       */
      public Builder clearMaiRuDanShu() {
        bitField2_ = (bitField2_ & ~0x00000010);
        maiRuDanShu_ = 0L;
        onChanged();
        return this;
      }

      private long maiChuDanShu_ ;
      /**
       * <code>optional int64 MaiChuDanShu = 70;</code>
       *
       * <pre>
       * 卖出单数
       * </pre>
       */
      public boolean hasMaiChuDanShu() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 MaiChuDanShu = 70;</code>
       *
       * <pre>
       * 卖出单数
       * </pre>
       */
      public long getMaiChuDanShu() {
        return maiChuDanShu_;
      }
      /**
       * <code>optional int64 MaiChuDanShu = 70;</code>
       *
       * <pre>
       * 卖出单数
       * </pre>
       */
      public Builder setMaiChuDanShu(long value) {
        bitField2_ |= 0x00000020;
        maiChuDanShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MaiChuDanShu = 70;</code>
       *
       * <pre>
       * 卖出单数
       * </pre>
       */
      public Builder clearMaiChuDanShu() {
        bitField2_ = (bitField2_ & ~0x00000020);
        maiChuDanShu_ = 0L;
        onChanged();
        return this;
      }

      private long maiRuZhongDanBiLi_ ;
      /**
       * <code>optional int64 MaiRuZhongDanBiLi = 71;</code>
       *
       * <pre>
       * 买入中单比例
       * </pre>
       */
      public boolean hasMaiRuZhongDanBiLi() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 MaiRuZhongDanBiLi = 71;</code>
       *
       * <pre>
       * 买入中单比例
       * </pre>
       */
      public long getMaiRuZhongDanBiLi() {
        return maiRuZhongDanBiLi_;
      }
      /**
       * <code>optional int64 MaiRuZhongDanBiLi = 71;</code>
       *
       * <pre>
       * 买入中单比例
       * </pre>
       */
      public Builder setMaiRuZhongDanBiLi(long value) {
        bitField2_ |= 0x00000040;
        maiRuZhongDanBiLi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MaiRuZhongDanBiLi = 71;</code>
       *
       * <pre>
       * 买入中单比例
       * </pre>
       */
      public Builder clearMaiRuZhongDanBiLi() {
        bitField2_ = (bitField2_ & ~0x00000040);
        maiRuZhongDanBiLi_ = 0L;
        onChanged();
        return this;
      }

      private long maiRuDaDanBiLi_ ;
      /**
       * <code>optional int64 MaiRuDaDanBiLi = 72;</code>
       *
       * <pre>
       * 买入大单比例
       * </pre>
       */
      public boolean hasMaiRuDaDanBiLi() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 MaiRuDaDanBiLi = 72;</code>
       *
       * <pre>
       * 买入大单比例
       * </pre>
       */
      public long getMaiRuDaDanBiLi() {
        return maiRuDaDanBiLi_;
      }
      /**
       * <code>optional int64 MaiRuDaDanBiLi = 72;</code>
       *
       * <pre>
       * 买入大单比例
       * </pre>
       */
      public Builder setMaiRuDaDanBiLi(long value) {
        bitField2_ |= 0x00000080;
        maiRuDaDanBiLi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MaiRuDaDanBiLi = 72;</code>
       *
       * <pre>
       * 买入大单比例
       * </pre>
       */
      public Builder clearMaiRuDaDanBiLi() {
        bitField2_ = (bitField2_ & ~0x00000080);
        maiRuDaDanBiLi_ = 0L;
        onChanged();
        return this;
      }

      private long maiRuTeDaDanBiLi_ ;
      /**
       * <code>optional int64 MaiRuTeDaDanBiLi = 73;</code>
       *
       * <pre>
       * 买入特大单比例
       * </pre>
       */
      public boolean hasMaiRuTeDaDanBiLi() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 MaiRuTeDaDanBiLi = 73;</code>
       *
       * <pre>
       * 买入特大单比例
       * </pre>
       */
      public long getMaiRuTeDaDanBiLi() {
        return maiRuTeDaDanBiLi_;
      }
      /**
       * <code>optional int64 MaiRuTeDaDanBiLi = 73;</code>
       *
       * <pre>
       * 买入特大单比例
       * </pre>
       */
      public Builder setMaiRuTeDaDanBiLi(long value) {
        bitField2_ |= 0x00000100;
        maiRuTeDaDanBiLi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MaiRuTeDaDanBiLi = 73;</code>
       *
       * <pre>
       * 买入特大单比例
       * </pre>
       */
      public Builder clearMaiRuTeDaDanBiLi() {
        bitField2_ = (bitField2_ & ~0x00000100);
        maiRuTeDaDanBiLi_ = 0L;
        onChanged();
        return this;
      }

      private long maiChuZhongDanBiLi_ ;
      /**
       * <code>optional int64 MaiChuZhongDanBiLi = 74;</code>
       *
       * <pre>
       * 卖出中单比例
       * </pre>
       */
      public boolean hasMaiChuZhongDanBiLi() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 MaiChuZhongDanBiLi = 74;</code>
       *
       * <pre>
       * 卖出中单比例
       * </pre>
       */
      public long getMaiChuZhongDanBiLi() {
        return maiChuZhongDanBiLi_;
      }
      /**
       * <code>optional int64 MaiChuZhongDanBiLi = 74;</code>
       *
       * <pre>
       * 卖出中单比例
       * </pre>
       */
      public Builder setMaiChuZhongDanBiLi(long value) {
        bitField2_ |= 0x00000200;
        maiChuZhongDanBiLi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MaiChuZhongDanBiLi = 74;</code>
       *
       * <pre>
       * 卖出中单比例
       * </pre>
       */
      public Builder clearMaiChuZhongDanBiLi() {
        bitField2_ = (bitField2_ & ~0x00000200);
        maiChuZhongDanBiLi_ = 0L;
        onChanged();
        return this;
      }

      private long maiChuDaDanBiLi_ ;
      /**
       * <code>optional int64 MaiChuDaDanBiLi = 75;</code>
       *
       * <pre>
       * 卖出大单比例
       * </pre>
       */
      public boolean hasMaiChuDaDanBiLi() {
        return ((bitField2_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 MaiChuDaDanBiLi = 75;</code>
       *
       * <pre>
       * 卖出大单比例
       * </pre>
       */
      public long getMaiChuDaDanBiLi() {
        return maiChuDaDanBiLi_;
      }
      /**
       * <code>optional int64 MaiChuDaDanBiLi = 75;</code>
       *
       * <pre>
       * 卖出大单比例
       * </pre>
       */
      public Builder setMaiChuDaDanBiLi(long value) {
        bitField2_ |= 0x00000400;
        maiChuDaDanBiLi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MaiChuDaDanBiLi = 75;</code>
       *
       * <pre>
       * 卖出大单比例
       * </pre>
       */
      public Builder clearMaiChuDaDanBiLi() {
        bitField2_ = (bitField2_ & ~0x00000400);
        maiChuDaDanBiLi_ = 0L;
        onChanged();
        return this;
      }

      private long maiChuTeDaDanBiLi_ ;
      /**
       * <code>optional int64 MaiChuTeDaDanBiLi = 76;</code>
       *
       * <pre>
       * 卖出特大单比例
       * </pre>
       */
      public boolean hasMaiChuTeDaDanBiLi() {
        return ((bitField2_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 MaiChuTeDaDanBiLi = 76;</code>
       *
       * <pre>
       * 卖出特大单比例
       * </pre>
       */
      public long getMaiChuTeDaDanBiLi() {
        return maiChuTeDaDanBiLi_;
      }
      /**
       * <code>optional int64 MaiChuTeDaDanBiLi = 76;</code>
       *
       * <pre>
       * 卖出特大单比例
       * </pre>
       */
      public Builder setMaiChuTeDaDanBiLi(long value) {
        bitField2_ |= 0x00000800;
        maiChuTeDaDanBiLi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MaiChuTeDaDanBiLi = 76;</code>
       *
       * <pre>
       * 卖出特大单比例
       * </pre>
       */
      public Builder clearMaiChuTeDaDanBiLi() {
        bitField2_ = (bitField2_ & ~0x00000800);
        maiChuTeDaDanBiLi_ = 0L;
        onChanged();
        return this;
      }

      private long fenZhongZhangFu1_ ;
      /**
       * <code>optional int64 FenZhongZhangFu1 = 77;</code>
       *
       * <pre>
       * 1分钟涨幅
       * </pre>
       */
      public boolean hasFenZhongZhangFu1() {
        return ((bitField2_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 FenZhongZhangFu1 = 77;</code>
       *
       * <pre>
       * 1分钟涨幅
       * </pre>
       */
      public long getFenZhongZhangFu1() {
        return fenZhongZhangFu1_;
      }
      /**
       * <code>optional int64 FenZhongZhangFu1 = 77;</code>
       *
       * <pre>
       * 1分钟涨幅
       * </pre>
       */
      public Builder setFenZhongZhangFu1(long value) {
        bitField2_ |= 0x00001000;
        fenZhongZhangFu1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 FenZhongZhangFu1 = 77;</code>
       *
       * <pre>
       * 1分钟涨幅
       * </pre>
       */
      public Builder clearFenZhongZhangFu1() {
        bitField2_ = (bitField2_ & ~0x00001000);
        fenZhongZhangFu1_ = 0L;
        onChanged();
        return this;
      }

      private long fenZhongZhangFu2_ ;
      /**
       * <code>optional int64 FenZhongZhangFu2 = 78;</code>
       *
       * <pre>
       * 2分钟涨幅
       * </pre>
       */
      public boolean hasFenZhongZhangFu2() {
        return ((bitField2_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 FenZhongZhangFu2 = 78;</code>
       *
       * <pre>
       * 2分钟涨幅
       * </pre>
       */
      public long getFenZhongZhangFu2() {
        return fenZhongZhangFu2_;
      }
      /**
       * <code>optional int64 FenZhongZhangFu2 = 78;</code>
       *
       * <pre>
       * 2分钟涨幅
       * </pre>
       */
      public Builder setFenZhongZhangFu2(long value) {
        bitField2_ |= 0x00002000;
        fenZhongZhangFu2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 FenZhongZhangFu2 = 78;</code>
       *
       * <pre>
       * 2分钟涨幅
       * </pre>
       */
      public Builder clearFenZhongZhangFu2() {
        bitField2_ = (bitField2_ & ~0x00002000);
        fenZhongZhangFu2_ = 0L;
        onChanged();
        return this;
      }

      private long fenZhongZhangFu3_ ;
      /**
       * <code>optional int64 FenZhongZhangFu3 = 79;</code>
       *
       * <pre>
       * 3分钟涨幅
       * </pre>
       */
      public boolean hasFenZhongZhangFu3() {
        return ((bitField2_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 FenZhongZhangFu3 = 79;</code>
       *
       * <pre>
       * 3分钟涨幅
       * </pre>
       */
      public long getFenZhongZhangFu3() {
        return fenZhongZhangFu3_;
      }
      /**
       * <code>optional int64 FenZhongZhangFu3 = 79;</code>
       *
       * <pre>
       * 3分钟涨幅
       * </pre>
       */
      public Builder setFenZhongZhangFu3(long value) {
        bitField2_ |= 0x00004000;
        fenZhongZhangFu3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 FenZhongZhangFu3 = 79;</code>
       *
       * <pre>
       * 3分钟涨幅
       * </pre>
       */
      public Builder clearFenZhongZhangFu3() {
        bitField2_ = (bitField2_ & ~0x00004000);
        fenZhongZhangFu3_ = 0L;
        onChanged();
        return this;
      }

      private long fenZhongZhangFu4_ ;
      /**
       * <code>optional int64 FenZhongZhangFu4 = 80;</code>
       *
       * <pre>
       * 4分钟涨幅
       * </pre>
       */
      public boolean hasFenZhongZhangFu4() {
        return ((bitField2_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 FenZhongZhangFu4 = 80;</code>
       *
       * <pre>
       * 4分钟涨幅
       * </pre>
       */
      public long getFenZhongZhangFu4() {
        return fenZhongZhangFu4_;
      }
      /**
       * <code>optional int64 FenZhongZhangFu4 = 80;</code>
       *
       * <pre>
       * 4分钟涨幅
       * </pre>
       */
      public Builder setFenZhongZhangFu4(long value) {
        bitField2_ |= 0x00008000;
        fenZhongZhangFu4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 FenZhongZhangFu4 = 80;</code>
       *
       * <pre>
       * 4分钟涨幅
       * </pre>
       */
      public Builder clearFenZhongZhangFu4() {
        bitField2_ = (bitField2_ & ~0x00008000);
        fenZhongZhangFu4_ = 0L;
        onChanged();
        return this;
      }

      private long fenZhongZhangFu5_ ;
      /**
       * <code>optional int64 FenZhongZhangFu5 = 81;</code>
       *
       * <pre>
       * 5分钟涨幅
       * </pre>
       */
      public boolean hasFenZhongZhangFu5() {
        return ((bitField2_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 FenZhongZhangFu5 = 81;</code>
       *
       * <pre>
       * 5分钟涨幅
       * </pre>
       */
      public long getFenZhongZhangFu5() {
        return fenZhongZhangFu5_;
      }
      /**
       * <code>optional int64 FenZhongZhangFu5 = 81;</code>
       *
       * <pre>
       * 5分钟涨幅
       * </pre>
       */
      public Builder setFenZhongZhangFu5(long value) {
        bitField2_ |= 0x00010000;
        fenZhongZhangFu5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 FenZhongZhangFu5 = 81;</code>
       *
       * <pre>
       * 5分钟涨幅
       * </pre>
       */
      public Builder clearFenZhongZhangFu5() {
        bitField2_ = (bitField2_ & ~0x00010000);
        fenZhongZhangFu5_ = 0L;
        onChanged();
        return this;
      }

      private long shiYingLv_ ;
      /**
       * <code>optional int64 ShiYingLv = 82;</code>
       *
       * <pre>
       * 市盈率
       * </pre>
       */
      public boolean hasShiYingLv() {
        return ((bitField2_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 ShiYingLv = 82;</code>
       *
       * <pre>
       * 市盈率
       * </pre>
       */
      public long getShiYingLv() {
        return shiYingLv_;
      }
      /**
       * <code>optional int64 ShiYingLv = 82;</code>
       *
       * <pre>
       * 市盈率
       * </pre>
       */
      public Builder setShiYingLv(long value) {
        bitField2_ |= 0x00020000;
        shiYingLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ShiYingLv = 82;</code>
       *
       * <pre>
       * 市盈率
       * </pre>
       */
      public Builder clearShiYingLv() {
        bitField2_ = (bitField2_ & ~0x00020000);
        shiYingLv_ = 0L;
        onChanged();
        return this;
      }

      private long zhangTing_ ;
      /**
       * <code>optional int64 ZhangTing = 83;</code>
       *
       * <pre>
       * 涨停
       * </pre>
       */
      public boolean hasZhangTing() {
        return ((bitField2_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 ZhangTing = 83;</code>
       *
       * <pre>
       * 涨停
       * </pre>
       */
      public long getZhangTing() {
        return zhangTing_;
      }
      /**
       * <code>optional int64 ZhangTing = 83;</code>
       *
       * <pre>
       * 涨停
       * </pre>
       */
      public Builder setZhangTing(long value) {
        bitField2_ |= 0x00040000;
        zhangTing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhangTing = 83;</code>
       *
       * <pre>
       * 涨停
       * </pre>
       */
      public Builder clearZhangTing() {
        bitField2_ = (bitField2_ & ~0x00040000);
        zhangTing_ = 0L;
        onChanged();
        return this;
      }

      private long dieTing_ ;
      /**
       * <code>optional int64 DieTing = 84;</code>
       *
       * <pre>
       * 跌停
       * </pre>
       */
      public boolean hasDieTing() {
        return ((bitField2_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 DieTing = 84;</code>
       *
       * <pre>
       * 跌停
       * </pre>
       */
      public long getDieTing() {
        return dieTing_;
      }
      /**
       * <code>optional int64 DieTing = 84;</code>
       *
       * <pre>
       * 跌停
       * </pre>
       */
      public Builder setDieTing(long value) {
        bitField2_ |= 0x00080000;
        dieTing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DieTing = 84;</code>
       *
       * <pre>
       * 跌停
       * </pre>
       */
      public Builder clearDieTing() {
        bitField2_ = (bitField2_ & ~0x00080000);
        dieTing_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object shiChangMingCheng_ = "";
      /**
       * <code>optional string ShiChangMingCheng = 85;</code>
       *
       * <pre>
       * 所在市场的市场名称
       * </pre>
       */
      public boolean hasShiChangMingCheng() {
        return ((bitField2_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional string ShiChangMingCheng = 85;</code>
       *
       * <pre>
       * 所在市场的市场名称
       * </pre>
       */
      public java.lang.String getShiChangMingCheng() {
        java.lang.Object ref = shiChangMingCheng_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            shiChangMingCheng_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ShiChangMingCheng = 85;</code>
       *
       * <pre>
       * 所在市场的市场名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getShiChangMingChengBytes() {
        java.lang.Object ref = shiChangMingCheng_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shiChangMingCheng_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ShiChangMingCheng = 85;</code>
       *
       * <pre>
       * 所在市场的市场名称
       * </pre>
       */
      public Builder setShiChangMingCheng(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00100000;
        shiChangMingCheng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ShiChangMingCheng = 85;</code>
       *
       * <pre>
       * 所在市场的市场名称
       * </pre>
       */
      public Builder clearShiChangMingCheng() {
        bitField2_ = (bitField2_ & ~0x00100000);
        shiChangMingCheng_ = getDefaultInstance().getShiChangMingCheng();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ShiChangMingCheng = 85;</code>
       *
       * <pre>
       * 所在市场的市场名称
       * </pre>
       */
      public Builder setShiChangMingChengBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00100000;
        shiChangMingCheng_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object shiChangDuanMingCheng_ = "";
      /**
       * <code>optional string ShiChangDuanMingCheng = 86;</code>
       *
       * <pre>
       * 所在市场的市场短名称
       * </pre>
       */
      public boolean hasShiChangDuanMingCheng() {
        return ((bitField2_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional string ShiChangDuanMingCheng = 86;</code>
       *
       * <pre>
       * 所在市场的市场短名称
       * </pre>
       */
      public java.lang.String getShiChangDuanMingCheng() {
        java.lang.Object ref = shiChangDuanMingCheng_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            shiChangDuanMingCheng_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ShiChangDuanMingCheng = 86;</code>
       *
       * <pre>
       * 所在市场的市场短名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getShiChangDuanMingChengBytes() {
        java.lang.Object ref = shiChangDuanMingCheng_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shiChangDuanMingCheng_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ShiChangDuanMingCheng = 86;</code>
       *
       * <pre>
       * 所在市场的市场短名称
       * </pre>
       */
      public Builder setShiChangDuanMingCheng(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00200000;
        shiChangDuanMingCheng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ShiChangDuanMingCheng = 86;</code>
       *
       * <pre>
       * 所在市场的市场短名称
       * </pre>
       */
      public Builder clearShiChangDuanMingCheng() {
        bitField2_ = (bitField2_ & ~0x00200000);
        shiChangDuanMingCheng_ = getDefaultInstance().getShiChangDuanMingCheng();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ShiChangDuanMingCheng = 86;</code>
       *
       * <pre>
       * 所在市场的市场短名称
       * </pre>
       */
      public Builder setShiChangDuanMingChengBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00200000;
        shiChangDuanMingCheng_ = value;
        onChanged();
        return this;
      }

      private long jiGouChiHuoShu_ ;
      /**
       * <code>optional int64 JiGouChiHuoShu = 87;</code>
       *
       * <pre>
       * 机构吃货数
       * </pre>
       */
      public boolean hasJiGouChiHuoShu() {
        return ((bitField2_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 JiGouChiHuoShu = 87;</code>
       *
       * <pre>
       * 机构吃货数
       * </pre>
       */
      public long getJiGouChiHuoShu() {
        return jiGouChiHuoShu_;
      }
      /**
       * <code>optional int64 JiGouChiHuoShu = 87;</code>
       *
       * <pre>
       * 机构吃货数
       * </pre>
       */
      public Builder setJiGouChiHuoShu(long value) {
        bitField2_ |= 0x00400000;
        jiGouChiHuoShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiGouChiHuoShu = 87;</code>
       *
       * <pre>
       * 机构吃货数
       * </pre>
       */
      public Builder clearJiGouChiHuoShu() {
        bitField2_ = (bitField2_ & ~0x00400000);
        jiGouChiHuoShu_ = 0L;
        onChanged();
        return this;
      }

      private long jiGouTuHuoShu_ ;
      /**
       * <code>optional int64 JiGouTuHuoShu = 88;</code>
       *
       * <pre>
       * 机构吐货数
       * </pre>
       */
      public boolean hasJiGouTuHuoShu() {
        return ((bitField2_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 JiGouTuHuoShu = 88;</code>
       *
       * <pre>
       * 机构吐货数
       * </pre>
       */
      public long getJiGouTuHuoShu() {
        return jiGouTuHuoShu_;
      }
      /**
       * <code>optional int64 JiGouTuHuoShu = 88;</code>
       *
       * <pre>
       * 机构吐货数
       * </pre>
       */
      public Builder setJiGouTuHuoShu(long value) {
        bitField2_ |= 0x00800000;
        jiGouTuHuoShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiGouTuHuoShu = 88;</code>
       *
       * <pre>
       * 机构吐货数
       * </pre>
       */
      public Builder clearJiGouTuHuoShu() {
        bitField2_ = (bitField2_ & ~0x00800000);
        jiGouTuHuoShu_ = 0L;
        onChanged();
        return this;
      }

      private long jiGouChiHuoLiang_ ;
      /**
       * <code>optional int64 JiGouChiHuoLiang = 89;</code>
       *
       * <pre>
       * 机构吃货量
       * </pre>
       */
      public boolean hasJiGouChiHuoLiang() {
        return ((bitField2_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 JiGouChiHuoLiang = 89;</code>
       *
       * <pre>
       * 机构吃货量
       * </pre>
       */
      public long getJiGouChiHuoLiang() {
        return jiGouChiHuoLiang_;
      }
      /**
       * <code>optional int64 JiGouChiHuoLiang = 89;</code>
       *
       * <pre>
       * 机构吃货量
       * </pre>
       */
      public Builder setJiGouChiHuoLiang(long value) {
        bitField2_ |= 0x01000000;
        jiGouChiHuoLiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiGouChiHuoLiang = 89;</code>
       *
       * <pre>
       * 机构吃货量
       * </pre>
       */
      public Builder clearJiGouChiHuoLiang() {
        bitField2_ = (bitField2_ & ~0x01000000);
        jiGouChiHuoLiang_ = 0L;
        onChanged();
        return this;
      }

      private long jiGouTuHuoLiang_ ;
      /**
       * <code>optional int64 JiGouTuHuoLiang = 90;</code>
       *
       * <pre>
       * 机构吐货量
       * </pre>
       */
      public boolean hasJiGouTuHuoLiang() {
        return ((bitField2_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 JiGouTuHuoLiang = 90;</code>
       *
       * <pre>
       * 机构吐货量
       * </pre>
       */
      public long getJiGouTuHuoLiang() {
        return jiGouTuHuoLiang_;
      }
      /**
       * <code>optional int64 JiGouTuHuoLiang = 90;</code>
       *
       * <pre>
       * 机构吐货量
       * </pre>
       */
      public Builder setJiGouTuHuoLiang(long value) {
        bitField2_ |= 0x02000000;
        jiGouTuHuoLiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiGouTuHuoLiang = 90;</code>
       *
       * <pre>
       * 机构吐货量
       * </pre>
       */
      public Builder clearJiGouTuHuoLiang() {
        bitField2_ = (bitField2_ & ~0x02000000);
        jiGouTuHuoLiang_ = 0L;
        onChanged();
        return this;
      }

      private long jiGouChiHuoJunE_ ;
      /**
       * <code>optional int64 JiGouChiHuoJunE = 91;</code>
       *
       * <pre>
       * 机构吃货均额
       * </pre>
       */
      public boolean hasJiGouChiHuoJunE() {
        return ((bitField2_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 JiGouChiHuoJunE = 91;</code>
       *
       * <pre>
       * 机构吃货均额
       * </pre>
       */
      public long getJiGouChiHuoJunE() {
        return jiGouChiHuoJunE_;
      }
      /**
       * <code>optional int64 JiGouChiHuoJunE = 91;</code>
       *
       * <pre>
       * 机构吃货均额
       * </pre>
       */
      public Builder setJiGouChiHuoJunE(long value) {
        bitField2_ |= 0x04000000;
        jiGouChiHuoJunE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiGouChiHuoJunE = 91;</code>
       *
       * <pre>
       * 机构吃货均额
       * </pre>
       */
      public Builder clearJiGouChiHuoJunE() {
        bitField2_ = (bitField2_ & ~0x04000000);
        jiGouChiHuoJunE_ = 0L;
        onChanged();
        return this;
      }

      private long jiGouTuHuoJunE_ ;
      /**
       * <code>optional int64 JiGouTuHuoJunE = 92;</code>
       *
       * <pre>
       * 机构吐货均额
       * </pre>
       */
      public boolean hasJiGouTuHuoJunE() {
        return ((bitField2_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 JiGouTuHuoJunE = 92;</code>
       *
       * <pre>
       * 机构吐货均额
       * </pre>
       */
      public long getJiGouTuHuoJunE() {
        return jiGouTuHuoJunE_;
      }
      /**
       * <code>optional int64 JiGouTuHuoJunE = 92;</code>
       *
       * <pre>
       * 机构吐货均额
       * </pre>
       */
      public Builder setJiGouTuHuoJunE(long value) {
        bitField2_ |= 0x08000000;
        jiGouTuHuoJunE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiGouTuHuoJunE = 92;</code>
       *
       * <pre>
       * 机构吐货均额
       * </pre>
       */
      public Builder clearJiGouTuHuoJunE() {
        bitField2_ = (bitField2_ & ~0x08000000);
        jiGouTuHuoJunE_ = 0L;
        onChanged();
        return this;
      }

      private long meiShouGuShu_ ;
      /**
       * <code>optional int64 MeiShouGuShu = 93;</code>
       *
       * <pre>
       * 每手股数
       * </pre>
       */
      public boolean hasMeiShouGuShu() {
        return ((bitField2_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 MeiShouGuShu = 93;</code>
       *
       * <pre>
       * 每手股数
       * </pre>
       */
      public long getMeiShouGuShu() {
        return meiShouGuShu_;
      }
      /**
       * <code>optional int64 MeiShouGuShu = 93;</code>
       *
       * <pre>
       * 每手股数
       * </pre>
       */
      public Builder setMeiShouGuShu(long value) {
        bitField2_ |= 0x10000000;
        meiShouGuShu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MeiShouGuShu = 93;</code>
       *
       * <pre>
       * 每手股数
       * </pre>
       */
      public Builder clearMeiShouGuShu() {
        bitField2_ = (bitField2_ & ~0x10000000);
        meiShouGuShu_ = 0L;
        onChanged();
        return this;
      }

      private long jiaoYiDanWei_ ;
      /**
       * <code>optional int64 JiaoYiDanWei = 94;</code>
       *
       * <pre>
       * 交易单位
       * </pre>
       */
      public boolean hasJiaoYiDanWei() {
        return ((bitField2_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 JiaoYiDanWei = 94;</code>
       *
       * <pre>
       * 交易单位
       * </pre>
       */
      public long getJiaoYiDanWei() {
        return jiaoYiDanWei_;
      }
      /**
       * <code>optional int64 JiaoYiDanWei = 94;</code>
       *
       * <pre>
       * 交易单位
       * </pre>
       */
      public Builder setJiaoYiDanWei(long value) {
        bitField2_ |= 0x20000000;
        jiaoYiDanWei_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiaoYiDanWei = 94;</code>
       *
       * <pre>
       * 交易单位
       * </pre>
       */
      public Builder clearJiaoYiDanWei() {
        bitField2_ = (bitField2_ & ~0x20000000);
        jiaoYiDanWei_ = 0L;
        onChanged();
        return this;
      }

      private long shiXiaoLv_ ;
      /**
       * <code>optional int64 ShiXiaoLv = 95;</code>
       *
       * <pre>
       * 市销率
       * </pre>
       */
      public boolean hasShiXiaoLv() {
        return ((bitField2_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 ShiXiaoLv = 95;</code>
       *
       * <pre>
       * 市销率
       * </pre>
       */
      public long getShiXiaoLv() {
        return shiXiaoLv_;
      }
      /**
       * <code>optional int64 ShiXiaoLv = 95;</code>
       *
       * <pre>
       * 市销率
       * </pre>
       */
      public Builder setShiXiaoLv(long value) {
        bitField2_ |= 0x40000000;
        shiXiaoLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ShiXiaoLv = 95;</code>
       *
       * <pre>
       * 市销率
       * </pre>
       */
      public Builder clearShiXiaoLv() {
        bitField2_ = (bitField2_ & ~0x40000000);
        shiXiaoLv_ = 0L;
        onChanged();
        return this;
      }

      private long shiJian_ ;
      /**
       * <code>optional int64 ShiJian = 96;</code>
       *
       * <pre>
       * 时间
       * </pre>
       */
      public boolean hasShiJian() {
        return ((bitField2_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 ShiJian = 96;</code>
       *
       * <pre>
       * 时间
       * </pre>
       */
      public long getShiJian() {
        return shiJian_;
      }
      /**
       * <code>optional int64 ShiJian = 96;</code>
       *
       * <pre>
       * 时间
       * </pre>
       */
      public Builder setShiJian(long value) {
        bitField2_ |= 0x80000000;
        shiJian_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ShiJian = 96;</code>
       *
       * <pre>
       * 时间
       * </pre>
       */
      public Builder clearShiJian() {
        bitField2_ = (bitField2_ & ~0x80000000);
        shiJian_ = 0L;
        onChanged();
        return this;
      }

      private long shiJingLv_ ;
      /**
       * <code>optional int64 ShiJingLv = 97;</code>
       *
       * <pre>
       * 市净率
       * </pre>
       */
      public boolean hasShiJingLv() {
        return ((bitField3_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 ShiJingLv = 97;</code>
       *
       * <pre>
       * 市净率
       * </pre>
       */
      public long getShiJingLv() {
        return shiJingLv_;
      }
      /**
       * <code>optional int64 ShiJingLv = 97;</code>
       *
       * <pre>
       * 市净率
       * </pre>
       */
      public Builder setShiJingLv(long value) {
        bitField3_ |= 0x00000001;
        shiJingLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ShiJingLv = 97;</code>
       *
       * <pre>
       * 市净率
       * </pre>
       */
      public Builder clearShiJingLv() {
        bitField3_ = (bitField3_ & ~0x00000001);
        shiJingLv_ = 0L;
        onChanged();
        return this;
      }

      private long zongShiZhi_ ;
      /**
       * <code>optional int64 ZongShiZhi = 98;</code>
       *
       * <pre>
       * 总市值
       * </pre>
       */
      public boolean hasZongShiZhi() {
        return ((bitField3_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 ZongShiZhi = 98;</code>
       *
       * <pre>
       * 总市值
       * </pre>
       */
      public long getZongShiZhi() {
        return zongShiZhi_;
      }
      /**
       * <code>optional int64 ZongShiZhi = 98;</code>
       *
       * <pre>
       * 总市值
       * </pre>
       */
      public Builder setZongShiZhi(long value) {
        bitField3_ |= 0x00000002;
        zongShiZhi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongShiZhi = 98;</code>
       *
       * <pre>
       * 总市值
       * </pre>
       */
      public Builder clearZongShiZhi() {
        bitField3_ = (bitField3_ & ~0x00000002);
        zongShiZhi_ = 0L;
        onChanged();
        return this;
      }

      private long liuTongShiZhi_ ;
      /**
       * <code>optional int64 LiuTongShiZhi = 99;</code>
       *
       * <pre>
       * 流通市值
       * </pre>
       */
      public boolean hasLiuTongShiZhi() {
        return ((bitField3_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 LiuTongShiZhi = 99;</code>
       *
       * <pre>
       * 流通市值
       * </pre>
       */
      public long getLiuTongShiZhi() {
        return liuTongShiZhi_;
      }
      /**
       * <code>optional int64 LiuTongShiZhi = 99;</code>
       *
       * <pre>
       * 流通市值
       * </pre>
       */
      public Builder setLiuTongShiZhi(long value) {
        bitField3_ |= 0x00000004;
        liuTongShiZhi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LiuTongShiZhi = 99;</code>
       *
       * <pre>
       * 流通市值
       * </pre>
       */
      public Builder clearLiuTongShiZhi() {
        bitField3_ = (bitField3_ & ~0x00000004);
        liuTongShiZhi_ = 0L;
        onChanged();
        return this;
      }

      private long mA1MinMA1_ ;
      /**
       * <code>optional int64 MA1minMA1 = 200;</code>
       *
       * <pre>
       * 指标相关字段
       * MA
       * </pre>
       */
      public boolean hasMA1MinMA1() {
        return ((bitField3_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 MA1minMA1 = 200;</code>
       *
       * <pre>
       * 指标相关字段
       * MA
       * </pre>
       */
      public long getMA1MinMA1() {
        return mA1MinMA1_;
      }
      /**
       * <code>optional int64 MA1minMA1 = 200;</code>
       *
       * <pre>
       * 指标相关字段
       * MA
       * </pre>
       */
      public Builder setMA1MinMA1(long value) {
        bitField3_ |= 0x00000008;
        mA1MinMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1minMA1 = 200;</code>
       *
       * <pre>
       * 指标相关字段
       * MA
       * </pre>
       */
      public Builder clearMA1MinMA1() {
        bitField3_ = (bitField3_ & ~0x00000008);
        mA1MinMA1_ = 0L;
        onChanged();
        return this;
      }

      private long mA1MinMA2_ ;
      /**
       * <code>optional int64 MA1minMA2 = 201;</code>
       *
       * <pre>
       * MA + 1min + MA2
       * </pre>
       */
      public boolean hasMA1MinMA2() {
        return ((bitField3_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 MA1minMA2 = 201;</code>
       *
       * <pre>
       * MA + 1min + MA2
       * </pre>
       */
      public long getMA1MinMA2() {
        return mA1MinMA2_;
      }
      /**
       * <code>optional int64 MA1minMA2 = 201;</code>
       *
       * <pre>
       * MA + 1min + MA2
       * </pre>
       */
      public Builder setMA1MinMA2(long value) {
        bitField3_ |= 0x00000010;
        mA1MinMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1minMA2 = 201;</code>
       *
       * <pre>
       * MA + 1min + MA2
       * </pre>
       */
      public Builder clearMA1MinMA2() {
        bitField3_ = (bitField3_ & ~0x00000010);
        mA1MinMA2_ = 0L;
        onChanged();
        return this;
      }

      private long mA1MinMA3_ ;
      /**
       * <code>optional int64 MA1minMA3 = 202;</code>
       *
       * <pre>
       * MA + 1min + MA3
       * </pre>
       */
      public boolean hasMA1MinMA3() {
        return ((bitField3_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 MA1minMA3 = 202;</code>
       *
       * <pre>
       * MA + 1min + MA3
       * </pre>
       */
      public long getMA1MinMA3() {
        return mA1MinMA3_;
      }
      /**
       * <code>optional int64 MA1minMA3 = 202;</code>
       *
       * <pre>
       * MA + 1min + MA3
       * </pre>
       */
      public Builder setMA1MinMA3(long value) {
        bitField3_ |= 0x00000020;
        mA1MinMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1minMA3 = 202;</code>
       *
       * <pre>
       * MA + 1min + MA3
       * </pre>
       */
      public Builder clearMA1MinMA3() {
        bitField3_ = (bitField3_ & ~0x00000020);
        mA1MinMA3_ = 0L;
        onChanged();
        return this;
      }

      private long mA1MinMA4_ ;
      /**
       * <code>optional int64 MA1minMA4 = 203;</code>
       *
       * <pre>
       * MA + 1min + MA4
       * </pre>
       */
      public boolean hasMA1MinMA4() {
        return ((bitField3_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 MA1minMA4 = 203;</code>
       *
       * <pre>
       * MA + 1min + MA4
       * </pre>
       */
      public long getMA1MinMA4() {
        return mA1MinMA4_;
      }
      /**
       * <code>optional int64 MA1minMA4 = 203;</code>
       *
       * <pre>
       * MA + 1min + MA4
       * </pre>
       */
      public Builder setMA1MinMA4(long value) {
        bitField3_ |= 0x00000040;
        mA1MinMA4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1minMA4 = 203;</code>
       *
       * <pre>
       * MA + 1min + MA4
       * </pre>
       */
      public Builder clearMA1MinMA4() {
        bitField3_ = (bitField3_ & ~0x00000040);
        mA1MinMA4_ = 0L;
        onChanged();
        return this;
      }

      private long mA1MinMA5_ ;
      /**
       * <code>optional int64 MA1minMA5 = 204;</code>
       *
       * <pre>
       * MA + 1min + MA5
       * </pre>
       */
      public boolean hasMA1MinMA5() {
        return ((bitField3_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 MA1minMA5 = 204;</code>
       *
       * <pre>
       * MA + 1min + MA5
       * </pre>
       */
      public long getMA1MinMA5() {
        return mA1MinMA5_;
      }
      /**
       * <code>optional int64 MA1minMA5 = 204;</code>
       *
       * <pre>
       * MA + 1min + MA5
       * </pre>
       */
      public Builder setMA1MinMA5(long value) {
        bitField3_ |= 0x00000080;
        mA1MinMA5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1minMA5 = 204;</code>
       *
       * <pre>
       * MA + 1min + MA5
       * </pre>
       */
      public Builder clearMA1MinMA5() {
        bitField3_ = (bitField3_ & ~0x00000080);
        mA1MinMA5_ = 0L;
        onChanged();
        return this;
      }

      private long mA1MinMA6_ ;
      /**
       * <code>optional int64 MA1minMA6 = 205;</code>
       *
       * <pre>
       * MA + 1min + MA6
       * </pre>
       */
      public boolean hasMA1MinMA6() {
        return ((bitField3_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 MA1minMA6 = 205;</code>
       *
       * <pre>
       * MA + 1min + MA6
       * </pre>
       */
      public long getMA1MinMA6() {
        return mA1MinMA6_;
      }
      /**
       * <code>optional int64 MA1minMA6 = 205;</code>
       *
       * <pre>
       * MA + 1min + MA6
       * </pre>
       */
      public Builder setMA1MinMA6(long value) {
        bitField3_ |= 0x00000100;
        mA1MinMA6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1minMA6 = 205;</code>
       *
       * <pre>
       * MA + 1min + MA6
       * </pre>
       */
      public Builder clearMA1MinMA6() {
        bitField3_ = (bitField3_ & ~0x00000100);
        mA1MinMA6_ = 0L;
        onChanged();
        return this;
      }

      private long mA5MinMA1_ ;
      /**
       * <code>optional int64 MA5minMA1 = 206;</code>
       *
       * <pre>
       * MA + 5min + MA1
       * </pre>
       */
      public boolean hasMA5MinMA1() {
        return ((bitField3_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 MA5minMA1 = 206;</code>
       *
       * <pre>
       * MA + 5min + MA1
       * </pre>
       */
      public long getMA5MinMA1() {
        return mA5MinMA1_;
      }
      /**
       * <code>optional int64 MA5minMA1 = 206;</code>
       *
       * <pre>
       * MA + 5min + MA1
       * </pre>
       */
      public Builder setMA5MinMA1(long value) {
        bitField3_ |= 0x00000200;
        mA5MinMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA5minMA1 = 206;</code>
       *
       * <pre>
       * MA + 5min + MA1
       * </pre>
       */
      public Builder clearMA5MinMA1() {
        bitField3_ = (bitField3_ & ~0x00000200);
        mA5MinMA1_ = 0L;
        onChanged();
        return this;
      }

      private long mA5MinMA2_ ;
      /**
       * <code>optional int64 MA5minMA2 = 207;</code>
       *
       * <pre>
       * MA + 5min + MA2
       * </pre>
       */
      public boolean hasMA5MinMA2() {
        return ((bitField3_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 MA5minMA2 = 207;</code>
       *
       * <pre>
       * MA + 5min + MA2
       * </pre>
       */
      public long getMA5MinMA2() {
        return mA5MinMA2_;
      }
      /**
       * <code>optional int64 MA5minMA2 = 207;</code>
       *
       * <pre>
       * MA + 5min + MA2
       * </pre>
       */
      public Builder setMA5MinMA2(long value) {
        bitField3_ |= 0x00000400;
        mA5MinMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA5minMA2 = 207;</code>
       *
       * <pre>
       * MA + 5min + MA2
       * </pre>
       */
      public Builder clearMA5MinMA2() {
        bitField3_ = (bitField3_ & ~0x00000400);
        mA5MinMA2_ = 0L;
        onChanged();
        return this;
      }

      private long mA5MinMA3_ ;
      /**
       * <code>optional int64 MA5minMA3 = 208;</code>
       *
       * <pre>
       * MA + 5min + MA3
       * </pre>
       */
      public boolean hasMA5MinMA3() {
        return ((bitField3_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 MA5minMA3 = 208;</code>
       *
       * <pre>
       * MA + 5min + MA3
       * </pre>
       */
      public long getMA5MinMA3() {
        return mA5MinMA3_;
      }
      /**
       * <code>optional int64 MA5minMA3 = 208;</code>
       *
       * <pre>
       * MA + 5min + MA3
       * </pre>
       */
      public Builder setMA5MinMA3(long value) {
        bitField3_ |= 0x00000800;
        mA5MinMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA5minMA3 = 208;</code>
       *
       * <pre>
       * MA + 5min + MA3
       * </pre>
       */
      public Builder clearMA5MinMA3() {
        bitField3_ = (bitField3_ & ~0x00000800);
        mA5MinMA3_ = 0L;
        onChanged();
        return this;
      }

      private long mA5MinMA4_ ;
      /**
       * <code>optional int64 MA5minMA4 = 209;</code>
       *
       * <pre>
       * MA + 5min + MA4
       * </pre>
       */
      public boolean hasMA5MinMA4() {
        return ((bitField3_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 MA5minMA4 = 209;</code>
       *
       * <pre>
       * MA + 5min + MA4
       * </pre>
       */
      public long getMA5MinMA4() {
        return mA5MinMA4_;
      }
      /**
       * <code>optional int64 MA5minMA4 = 209;</code>
       *
       * <pre>
       * MA + 5min + MA4
       * </pre>
       */
      public Builder setMA5MinMA4(long value) {
        bitField3_ |= 0x00001000;
        mA5MinMA4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA5minMA4 = 209;</code>
       *
       * <pre>
       * MA + 5min + MA4
       * </pre>
       */
      public Builder clearMA5MinMA4() {
        bitField3_ = (bitField3_ & ~0x00001000);
        mA5MinMA4_ = 0L;
        onChanged();
        return this;
      }

      private long mA5MinMA5_ ;
      /**
       * <code>optional int64 MA5minMA5 = 210;</code>
       *
       * <pre>
       * MA + 5min + MA5
       * </pre>
       */
      public boolean hasMA5MinMA5() {
        return ((bitField3_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 MA5minMA5 = 210;</code>
       *
       * <pre>
       * MA + 5min + MA5
       * </pre>
       */
      public long getMA5MinMA5() {
        return mA5MinMA5_;
      }
      /**
       * <code>optional int64 MA5minMA5 = 210;</code>
       *
       * <pre>
       * MA + 5min + MA5
       * </pre>
       */
      public Builder setMA5MinMA5(long value) {
        bitField3_ |= 0x00002000;
        mA5MinMA5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA5minMA5 = 210;</code>
       *
       * <pre>
       * MA + 5min + MA5
       * </pre>
       */
      public Builder clearMA5MinMA5() {
        bitField3_ = (bitField3_ & ~0x00002000);
        mA5MinMA5_ = 0L;
        onChanged();
        return this;
      }

      private long mA5MinMA6_ ;
      /**
       * <code>optional int64 MA5minMA6 = 211;</code>
       *
       * <pre>
       * MA + 5min + MA6
       * </pre>
       */
      public boolean hasMA5MinMA6() {
        return ((bitField3_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 MA5minMA6 = 211;</code>
       *
       * <pre>
       * MA + 5min + MA6
       * </pre>
       */
      public long getMA5MinMA6() {
        return mA5MinMA6_;
      }
      /**
       * <code>optional int64 MA5minMA6 = 211;</code>
       *
       * <pre>
       * MA + 5min + MA6
       * </pre>
       */
      public Builder setMA5MinMA6(long value) {
        bitField3_ |= 0x00004000;
        mA5MinMA6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA5minMA6 = 211;</code>
       *
       * <pre>
       * MA + 5min + MA6
       * </pre>
       */
      public Builder clearMA5MinMA6() {
        bitField3_ = (bitField3_ & ~0x00004000);
        mA5MinMA6_ = 0L;
        onChanged();
        return this;
      }

      private long mA1DayMA1_ ;
      /**
       * <code>optional int64 MA1dayMA1 = 212;</code>
       *
       * <pre>
       * MA + 1day + MA1
       * </pre>
       */
      public boolean hasMA1DayMA1() {
        return ((bitField3_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 MA1dayMA1 = 212;</code>
       *
       * <pre>
       * MA + 1day + MA1
       * </pre>
       */
      public long getMA1DayMA1() {
        return mA1DayMA1_;
      }
      /**
       * <code>optional int64 MA1dayMA1 = 212;</code>
       *
       * <pre>
       * MA + 1day + MA1
       * </pre>
       */
      public Builder setMA1DayMA1(long value) {
        bitField3_ |= 0x00008000;
        mA1DayMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1dayMA1 = 212;</code>
       *
       * <pre>
       * MA + 1day + MA1
       * </pre>
       */
      public Builder clearMA1DayMA1() {
        bitField3_ = (bitField3_ & ~0x00008000);
        mA1DayMA1_ = 0L;
        onChanged();
        return this;
      }

      private long mA1DayMA2_ ;
      /**
       * <code>optional int64 MA1dayMA2 = 213;</code>
       *
       * <pre>
       * MA + 1day + MA2
       * </pre>
       */
      public boolean hasMA1DayMA2() {
        return ((bitField3_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 MA1dayMA2 = 213;</code>
       *
       * <pre>
       * MA + 1day + MA2
       * </pre>
       */
      public long getMA1DayMA2() {
        return mA1DayMA2_;
      }
      /**
       * <code>optional int64 MA1dayMA2 = 213;</code>
       *
       * <pre>
       * MA + 1day + MA2
       * </pre>
       */
      public Builder setMA1DayMA2(long value) {
        bitField3_ |= 0x00010000;
        mA1DayMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1dayMA2 = 213;</code>
       *
       * <pre>
       * MA + 1day + MA2
       * </pre>
       */
      public Builder clearMA1DayMA2() {
        bitField3_ = (bitField3_ & ~0x00010000);
        mA1DayMA2_ = 0L;
        onChanged();
        return this;
      }

      private long mA1DayMA3_ ;
      /**
       * <code>optional int64 MA1dayMA3 = 214;</code>
       *
       * <pre>
       * MA + 1day + MA3
       * </pre>
       */
      public boolean hasMA1DayMA3() {
        return ((bitField3_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 MA1dayMA3 = 214;</code>
       *
       * <pre>
       * MA + 1day + MA3
       * </pre>
       */
      public long getMA1DayMA3() {
        return mA1DayMA3_;
      }
      /**
       * <code>optional int64 MA1dayMA3 = 214;</code>
       *
       * <pre>
       * MA + 1day + MA3
       * </pre>
       */
      public Builder setMA1DayMA3(long value) {
        bitField3_ |= 0x00020000;
        mA1DayMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1dayMA3 = 214;</code>
       *
       * <pre>
       * MA + 1day + MA3
       * </pre>
       */
      public Builder clearMA1DayMA3() {
        bitField3_ = (bitField3_ & ~0x00020000);
        mA1DayMA3_ = 0L;
        onChanged();
        return this;
      }

      private long mA1DayMA4_ ;
      /**
       * <code>optional int64 MA1dayMA4 = 215;</code>
       *
       * <pre>
       * MA + 1day + MA4
       * </pre>
       */
      public boolean hasMA1DayMA4() {
        return ((bitField3_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 MA1dayMA4 = 215;</code>
       *
       * <pre>
       * MA + 1day + MA4
       * </pre>
       */
      public long getMA1DayMA4() {
        return mA1DayMA4_;
      }
      /**
       * <code>optional int64 MA1dayMA4 = 215;</code>
       *
       * <pre>
       * MA + 1day + MA4
       * </pre>
       */
      public Builder setMA1DayMA4(long value) {
        bitField3_ |= 0x00040000;
        mA1DayMA4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1dayMA4 = 215;</code>
       *
       * <pre>
       * MA + 1day + MA4
       * </pre>
       */
      public Builder clearMA1DayMA4() {
        bitField3_ = (bitField3_ & ~0x00040000);
        mA1DayMA4_ = 0L;
        onChanged();
        return this;
      }

      private long mA1DayMA5_ ;
      /**
       * <code>optional int64 MA1dayMA5 = 216;</code>
       *
       * <pre>
       * MA + 1day + MA5
       * </pre>
       */
      public boolean hasMA1DayMA5() {
        return ((bitField3_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 MA1dayMA5 = 216;</code>
       *
       * <pre>
       * MA + 1day + MA5
       * </pre>
       */
      public long getMA1DayMA5() {
        return mA1DayMA5_;
      }
      /**
       * <code>optional int64 MA1dayMA5 = 216;</code>
       *
       * <pre>
       * MA + 1day + MA5
       * </pre>
       */
      public Builder setMA1DayMA5(long value) {
        bitField3_ |= 0x00080000;
        mA1DayMA5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1dayMA5 = 216;</code>
       *
       * <pre>
       * MA + 1day + MA5
       * </pre>
       */
      public Builder clearMA1DayMA5() {
        bitField3_ = (bitField3_ & ~0x00080000);
        mA1DayMA5_ = 0L;
        onChanged();
        return this;
      }

      private long mA1DayMA6_ ;
      /**
       * <code>optional int64 MA1dayMA6 = 217;</code>
       *
       * <pre>
       * MA + 1day + MA6
       * </pre>
       */
      public boolean hasMA1DayMA6() {
        return ((bitField3_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 MA1dayMA6 = 217;</code>
       *
       * <pre>
       * MA + 1day + MA6
       * </pre>
       */
      public long getMA1DayMA6() {
        return mA1DayMA6_;
      }
      /**
       * <code>optional int64 MA1dayMA6 = 217;</code>
       *
       * <pre>
       * MA + 1day + MA6
       * </pre>
       */
      public Builder setMA1DayMA6(long value) {
        bitField3_ |= 0x00100000;
        mA1DayMA6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MA1dayMA6 = 217;</code>
       *
       * <pre>
       * MA + 1day + MA6
       * </pre>
       */
      public Builder clearMA1DayMA6() {
        bitField3_ = (bitField3_ & ~0x00100000);
        mA1DayMA6_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL1MinMID_ ;
      /**
       * <code>optional int64 BOLL1minMID = 218;</code>
       *
       * <pre>
       * BOLL
       * </pre>
       */
      public boolean hasBOLL1MinMID() {
        return ((bitField3_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 BOLL1minMID = 218;</code>
       *
       * <pre>
       * BOLL
       * </pre>
       */
      public long getBOLL1MinMID() {
        return bOLL1MinMID_;
      }
      /**
       * <code>optional int64 BOLL1minMID = 218;</code>
       *
       * <pre>
       * BOLL
       * </pre>
       */
      public Builder setBOLL1MinMID(long value) {
        bitField3_ |= 0x00200000;
        bOLL1MinMID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL1minMID = 218;</code>
       *
       * <pre>
       * BOLL
       * </pre>
       */
      public Builder clearBOLL1MinMID() {
        bitField3_ = (bitField3_ & ~0x00200000);
        bOLL1MinMID_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL1MinUPPER_ ;
      /**
       * <code>optional int64 BOLL1minUPPER = 219;</code>
       *
       * <pre>
       * BOLL + 1min + UPPER
       * </pre>
       */
      public boolean hasBOLL1MinUPPER() {
        return ((bitField3_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 BOLL1minUPPER = 219;</code>
       *
       * <pre>
       * BOLL + 1min + UPPER
       * </pre>
       */
      public long getBOLL1MinUPPER() {
        return bOLL1MinUPPER_;
      }
      /**
       * <code>optional int64 BOLL1minUPPER = 219;</code>
       *
       * <pre>
       * BOLL + 1min + UPPER
       * </pre>
       */
      public Builder setBOLL1MinUPPER(long value) {
        bitField3_ |= 0x00400000;
        bOLL1MinUPPER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL1minUPPER = 219;</code>
       *
       * <pre>
       * BOLL + 1min + UPPER
       * </pre>
       */
      public Builder clearBOLL1MinUPPER() {
        bitField3_ = (bitField3_ & ~0x00400000);
        bOLL1MinUPPER_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL1MinLOWER_ ;
      /**
       * <code>optional int64 BOLL1minLOWER = 220;</code>
       *
       * <pre>
       * BOLL + 1min + LOWER
       * </pre>
       */
      public boolean hasBOLL1MinLOWER() {
        return ((bitField3_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 BOLL1minLOWER = 220;</code>
       *
       * <pre>
       * BOLL + 1min + LOWER
       * </pre>
       */
      public long getBOLL1MinLOWER() {
        return bOLL1MinLOWER_;
      }
      /**
       * <code>optional int64 BOLL1minLOWER = 220;</code>
       *
       * <pre>
       * BOLL + 1min + LOWER
       * </pre>
       */
      public Builder setBOLL1MinLOWER(long value) {
        bitField3_ |= 0x00800000;
        bOLL1MinLOWER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL1minLOWER = 220;</code>
       *
       * <pre>
       * BOLL + 1min + LOWER
       * </pre>
       */
      public Builder clearBOLL1MinLOWER() {
        bitField3_ = (bitField3_ & ~0x00800000);
        bOLL1MinLOWER_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL5MinMID_ ;
      /**
       * <code>optional int64 BOLL5minMID = 221;</code>
       *
       * <pre>
       * BOLL + 5min + MID
       * </pre>
       */
      public boolean hasBOLL5MinMID() {
        return ((bitField3_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 BOLL5minMID = 221;</code>
       *
       * <pre>
       * BOLL + 5min + MID
       * </pre>
       */
      public long getBOLL5MinMID() {
        return bOLL5MinMID_;
      }
      /**
       * <code>optional int64 BOLL5minMID = 221;</code>
       *
       * <pre>
       * BOLL + 5min + MID
       * </pre>
       */
      public Builder setBOLL5MinMID(long value) {
        bitField3_ |= 0x01000000;
        bOLL5MinMID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL5minMID = 221;</code>
       *
       * <pre>
       * BOLL + 5min + MID
       * </pre>
       */
      public Builder clearBOLL5MinMID() {
        bitField3_ = (bitField3_ & ~0x01000000);
        bOLL5MinMID_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL5MinUPPER_ ;
      /**
       * <code>optional int64 BOLL5minUPPER = 222;</code>
       *
       * <pre>
       * BOLL + 5min + UPPER
       * </pre>
       */
      public boolean hasBOLL5MinUPPER() {
        return ((bitField3_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 BOLL5minUPPER = 222;</code>
       *
       * <pre>
       * BOLL + 5min + UPPER
       * </pre>
       */
      public long getBOLL5MinUPPER() {
        return bOLL5MinUPPER_;
      }
      /**
       * <code>optional int64 BOLL5minUPPER = 222;</code>
       *
       * <pre>
       * BOLL + 5min + UPPER
       * </pre>
       */
      public Builder setBOLL5MinUPPER(long value) {
        bitField3_ |= 0x02000000;
        bOLL5MinUPPER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL5minUPPER = 222;</code>
       *
       * <pre>
       * BOLL + 5min + UPPER
       * </pre>
       */
      public Builder clearBOLL5MinUPPER() {
        bitField3_ = (bitField3_ & ~0x02000000);
        bOLL5MinUPPER_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL5MinLOWER_ ;
      /**
       * <code>optional int64 BOLL5minLOWER = 223;</code>
       *
       * <pre>
       * BOLL + 5min + LOWER
       * </pre>
       */
      public boolean hasBOLL5MinLOWER() {
        return ((bitField3_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 BOLL5minLOWER = 223;</code>
       *
       * <pre>
       * BOLL + 5min + LOWER
       * </pre>
       */
      public long getBOLL5MinLOWER() {
        return bOLL5MinLOWER_;
      }
      /**
       * <code>optional int64 BOLL5minLOWER = 223;</code>
       *
       * <pre>
       * BOLL + 5min + LOWER
       * </pre>
       */
      public Builder setBOLL5MinLOWER(long value) {
        bitField3_ |= 0x04000000;
        bOLL5MinLOWER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL5minLOWER = 223;</code>
       *
       * <pre>
       * BOLL + 5min + LOWER
       * </pre>
       */
      public Builder clearBOLL5MinLOWER() {
        bitField3_ = (bitField3_ & ~0x04000000);
        bOLL5MinLOWER_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL1DayMID_ ;
      /**
       * <code>optional int64 BOLL1dayMID = 224;</code>
       *
       * <pre>
       * BOLL + 5min + MID
       * </pre>
       */
      public boolean hasBOLL1DayMID() {
        return ((bitField3_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 BOLL1dayMID = 224;</code>
       *
       * <pre>
       * BOLL + 5min + MID
       * </pre>
       */
      public long getBOLL1DayMID() {
        return bOLL1DayMID_;
      }
      /**
       * <code>optional int64 BOLL1dayMID = 224;</code>
       *
       * <pre>
       * BOLL + 5min + MID
       * </pre>
       */
      public Builder setBOLL1DayMID(long value) {
        bitField3_ |= 0x08000000;
        bOLL1DayMID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL1dayMID = 224;</code>
       *
       * <pre>
       * BOLL + 5min + MID
       * </pre>
       */
      public Builder clearBOLL1DayMID() {
        bitField3_ = (bitField3_ & ~0x08000000);
        bOLL1DayMID_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL1DayUPPER_ ;
      /**
       * <code>optional int64 BOLL1dayUPPER = 225;</code>
       *
       * <pre>
       * BOLL + 5min + UPPER
       * </pre>
       */
      public boolean hasBOLL1DayUPPER() {
        return ((bitField3_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 BOLL1dayUPPER = 225;</code>
       *
       * <pre>
       * BOLL + 5min + UPPER
       * </pre>
       */
      public long getBOLL1DayUPPER() {
        return bOLL1DayUPPER_;
      }
      /**
       * <code>optional int64 BOLL1dayUPPER = 225;</code>
       *
       * <pre>
       * BOLL + 5min + UPPER
       * </pre>
       */
      public Builder setBOLL1DayUPPER(long value) {
        bitField3_ |= 0x10000000;
        bOLL1DayUPPER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL1dayUPPER = 225;</code>
       *
       * <pre>
       * BOLL + 5min + UPPER
       * </pre>
       */
      public Builder clearBOLL1DayUPPER() {
        bitField3_ = (bitField3_ & ~0x10000000);
        bOLL1DayUPPER_ = 0L;
        onChanged();
        return this;
      }

      private long bOLL1DayLOWER_ ;
      /**
       * <code>optional int64 BOLL1dayLOWER = 226;</code>
       *
       * <pre>
       * BOLL + 5min + LOWER
       * </pre>
       */
      public boolean hasBOLL1DayLOWER() {
        return ((bitField3_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 BOLL1dayLOWER = 226;</code>
       *
       * <pre>
       * BOLL + 5min + LOWER
       * </pre>
       */
      public long getBOLL1DayLOWER() {
        return bOLL1DayLOWER_;
      }
      /**
       * <code>optional int64 BOLL1dayLOWER = 226;</code>
       *
       * <pre>
       * BOLL + 5min + LOWER
       * </pre>
       */
      public Builder setBOLL1DayLOWER(long value) {
        bitField3_ |= 0x20000000;
        bOLL1DayLOWER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BOLL1dayLOWER = 226;</code>
       *
       * <pre>
       * BOLL + 5min + LOWER
       * </pre>
       */
      public Builder clearBOLL1DayLOWER() {
        bitField3_ = (bitField3_ & ~0x20000000);
        bOLL1DayLOWER_ = 0L;
        onChanged();
        return this;
      }

      private long vOL1Min_ ;
      /**
       * <code>optional int64 VOL1min = 227;</code>
       *
       * <pre>
       * VOL
       * </pre>
       */
      public boolean hasVOL1Min() {
        return ((bitField3_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 VOL1min = 227;</code>
       *
       * <pre>
       * VOL
       * </pre>
       */
      public long getVOL1Min() {
        return vOL1Min_;
      }
      /**
       * <code>optional int64 VOL1min = 227;</code>
       *
       * <pre>
       * VOL
       * </pre>
       */
      public Builder setVOL1Min(long value) {
        bitField3_ |= 0x40000000;
        vOL1Min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL1min = 227;</code>
       *
       * <pre>
       * VOL
       * </pre>
       */
      public Builder clearVOL1Min() {
        bitField3_ = (bitField3_ & ~0x40000000);
        vOL1Min_ = 0L;
        onChanged();
        return this;
      }

      private long vOL1MinMA1_ ;
      /**
       * <code>optional int64 VOL1minMA1 = 228;</code>
       *
       * <pre>
       * VOL + 1min + MA1
       * </pre>
       */
      public boolean hasVOL1MinMA1() {
        return ((bitField3_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 VOL1minMA1 = 228;</code>
       *
       * <pre>
       * VOL + 1min + MA1
       * </pre>
       */
      public long getVOL1MinMA1() {
        return vOL1MinMA1_;
      }
      /**
       * <code>optional int64 VOL1minMA1 = 228;</code>
       *
       * <pre>
       * VOL + 1min + MA1
       * </pre>
       */
      public Builder setVOL1MinMA1(long value) {
        bitField3_ |= 0x80000000;
        vOL1MinMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL1minMA1 = 228;</code>
       *
       * <pre>
       * VOL + 1min + MA1
       * </pre>
       */
      public Builder clearVOL1MinMA1() {
        bitField3_ = (bitField3_ & ~0x80000000);
        vOL1MinMA1_ = 0L;
        onChanged();
        return this;
      }

      private long vOL1MinMA2_ ;
      /**
       * <code>optional int64 VOL1minMA2 = 229;</code>
       *
       * <pre>
       * VOL + 1min + MA2
       * </pre>
       */
      public boolean hasVOL1MinMA2() {
        return ((bitField4_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 VOL1minMA2 = 229;</code>
       *
       * <pre>
       * VOL + 1min + MA2
       * </pre>
       */
      public long getVOL1MinMA2() {
        return vOL1MinMA2_;
      }
      /**
       * <code>optional int64 VOL1minMA2 = 229;</code>
       *
       * <pre>
       * VOL + 1min + MA2
       * </pre>
       */
      public Builder setVOL1MinMA2(long value) {
        bitField4_ |= 0x00000001;
        vOL1MinMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL1minMA2 = 229;</code>
       *
       * <pre>
       * VOL + 1min + MA2
       * </pre>
       */
      public Builder clearVOL1MinMA2() {
        bitField4_ = (bitField4_ & ~0x00000001);
        vOL1MinMA2_ = 0L;
        onChanged();
        return this;
      }

      private long vOL1MinMA3_ ;
      /**
       * <code>optional int64 VOL1minMA3 = 230;</code>
       *
       * <pre>
       * VOL + 1min + MA3
       * </pre>
       */
      public boolean hasVOL1MinMA3() {
        return ((bitField4_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 VOL1minMA3 = 230;</code>
       *
       * <pre>
       * VOL + 1min + MA3
       * </pre>
       */
      public long getVOL1MinMA3() {
        return vOL1MinMA3_;
      }
      /**
       * <code>optional int64 VOL1minMA3 = 230;</code>
       *
       * <pre>
       * VOL + 1min + MA3
       * </pre>
       */
      public Builder setVOL1MinMA3(long value) {
        bitField4_ |= 0x00000002;
        vOL1MinMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL1minMA3 = 230;</code>
       *
       * <pre>
       * VOL + 1min + MA3
       * </pre>
       */
      public Builder clearVOL1MinMA3() {
        bitField4_ = (bitField4_ & ~0x00000002);
        vOL1MinMA3_ = 0L;
        onChanged();
        return this;
      }

      private long vOL5Min_ ;
      /**
       * <code>optional int64 VOL5min = 231;</code>
       *
       * <pre>
       * VOL + 5min + _
       * </pre>
       */
      public boolean hasVOL5Min() {
        return ((bitField4_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 VOL5min = 231;</code>
       *
       * <pre>
       * VOL + 5min + _
       * </pre>
       */
      public long getVOL5Min() {
        return vOL5Min_;
      }
      /**
       * <code>optional int64 VOL5min = 231;</code>
       *
       * <pre>
       * VOL + 5min + _
       * </pre>
       */
      public Builder setVOL5Min(long value) {
        bitField4_ |= 0x00000004;
        vOL5Min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL5min = 231;</code>
       *
       * <pre>
       * VOL + 5min + _
       * </pre>
       */
      public Builder clearVOL5Min() {
        bitField4_ = (bitField4_ & ~0x00000004);
        vOL5Min_ = 0L;
        onChanged();
        return this;
      }

      private long vOL5MinMA1_ ;
      /**
       * <code>optional int64 VOL5minMA1 = 232;</code>
       *
       * <pre>
       * VOL + 5min + MA1
       * </pre>
       */
      public boolean hasVOL5MinMA1() {
        return ((bitField4_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 VOL5minMA1 = 232;</code>
       *
       * <pre>
       * VOL + 5min + MA1
       * </pre>
       */
      public long getVOL5MinMA1() {
        return vOL5MinMA1_;
      }
      /**
       * <code>optional int64 VOL5minMA1 = 232;</code>
       *
       * <pre>
       * VOL + 5min + MA1
       * </pre>
       */
      public Builder setVOL5MinMA1(long value) {
        bitField4_ |= 0x00000008;
        vOL5MinMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL5minMA1 = 232;</code>
       *
       * <pre>
       * VOL + 5min + MA1
       * </pre>
       */
      public Builder clearVOL5MinMA1() {
        bitField4_ = (bitField4_ & ~0x00000008);
        vOL5MinMA1_ = 0L;
        onChanged();
        return this;
      }

      private long vOL5MinMA2_ ;
      /**
       * <code>optional int64 VOL5minMA2 = 233;</code>
       *
       * <pre>
       * VOL + 5min + MA2
       * </pre>
       */
      public boolean hasVOL5MinMA2() {
        return ((bitField4_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 VOL5minMA2 = 233;</code>
       *
       * <pre>
       * VOL + 5min + MA2
       * </pre>
       */
      public long getVOL5MinMA2() {
        return vOL5MinMA2_;
      }
      /**
       * <code>optional int64 VOL5minMA2 = 233;</code>
       *
       * <pre>
       * VOL + 5min + MA2
       * </pre>
       */
      public Builder setVOL5MinMA2(long value) {
        bitField4_ |= 0x00000010;
        vOL5MinMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL5minMA2 = 233;</code>
       *
       * <pre>
       * VOL + 5min + MA2
       * </pre>
       */
      public Builder clearVOL5MinMA2() {
        bitField4_ = (bitField4_ & ~0x00000010);
        vOL5MinMA2_ = 0L;
        onChanged();
        return this;
      }

      private long vOL5MinMA3_ ;
      /**
       * <code>optional int64 VOL5minMA3 = 234;</code>
       *
       * <pre>
       * VOL + 5min + MA3
       * </pre>
       */
      public boolean hasVOL5MinMA3() {
        return ((bitField4_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 VOL5minMA3 = 234;</code>
       *
       * <pre>
       * VOL + 5min + MA3
       * </pre>
       */
      public long getVOL5MinMA3() {
        return vOL5MinMA3_;
      }
      /**
       * <code>optional int64 VOL5minMA3 = 234;</code>
       *
       * <pre>
       * VOL + 5min + MA3
       * </pre>
       */
      public Builder setVOL5MinMA3(long value) {
        bitField4_ |= 0x00000020;
        vOL5MinMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL5minMA3 = 234;</code>
       *
       * <pre>
       * VOL + 5min + MA3
       * </pre>
       */
      public Builder clearVOL5MinMA3() {
        bitField4_ = (bitField4_ & ~0x00000020);
        vOL5MinMA3_ = 0L;
        onChanged();
        return this;
      }

      private long vOL1Day_ ;
      /**
       * <code>optional int64 VOL1day = 235;</code>
       *
       * <pre>
       * VOL + 1day + _
       * </pre>
       */
      public boolean hasVOL1Day() {
        return ((bitField4_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 VOL1day = 235;</code>
       *
       * <pre>
       * VOL + 1day + _
       * </pre>
       */
      public long getVOL1Day() {
        return vOL1Day_;
      }
      /**
       * <code>optional int64 VOL1day = 235;</code>
       *
       * <pre>
       * VOL + 1day + _
       * </pre>
       */
      public Builder setVOL1Day(long value) {
        bitField4_ |= 0x00000040;
        vOL1Day_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL1day = 235;</code>
       *
       * <pre>
       * VOL + 1day + _
       * </pre>
       */
      public Builder clearVOL1Day() {
        bitField4_ = (bitField4_ & ~0x00000040);
        vOL1Day_ = 0L;
        onChanged();
        return this;
      }

      private long vOL1DayMA1_ ;
      /**
       * <code>optional int64 VOL1dayMA1 = 236;</code>
       *
       * <pre>
       * VOL + 1day + MA1
       * </pre>
       */
      public boolean hasVOL1DayMA1() {
        return ((bitField4_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 VOL1dayMA1 = 236;</code>
       *
       * <pre>
       * VOL + 1day + MA1
       * </pre>
       */
      public long getVOL1DayMA1() {
        return vOL1DayMA1_;
      }
      /**
       * <code>optional int64 VOL1dayMA1 = 236;</code>
       *
       * <pre>
       * VOL + 1day + MA1
       * </pre>
       */
      public Builder setVOL1DayMA1(long value) {
        bitField4_ |= 0x00000080;
        vOL1DayMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL1dayMA1 = 236;</code>
       *
       * <pre>
       * VOL + 1day + MA1
       * </pre>
       */
      public Builder clearVOL1DayMA1() {
        bitField4_ = (bitField4_ & ~0x00000080);
        vOL1DayMA1_ = 0L;
        onChanged();
        return this;
      }

      private long vOL1DayMA2_ ;
      /**
       * <code>optional int64 VOL1dayMA2 = 237;</code>
       *
       * <pre>
       * VOL + 1day + MA2
       * </pre>
       */
      public boolean hasVOL1DayMA2() {
        return ((bitField4_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 VOL1dayMA2 = 237;</code>
       *
       * <pre>
       * VOL + 1day + MA2
       * </pre>
       */
      public long getVOL1DayMA2() {
        return vOL1DayMA2_;
      }
      /**
       * <code>optional int64 VOL1dayMA2 = 237;</code>
       *
       * <pre>
       * VOL + 1day + MA2
       * </pre>
       */
      public Builder setVOL1DayMA2(long value) {
        bitField4_ |= 0x00000100;
        vOL1DayMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL1dayMA2 = 237;</code>
       *
       * <pre>
       * VOL + 1day + MA2
       * </pre>
       */
      public Builder clearVOL1DayMA2() {
        bitField4_ = (bitField4_ & ~0x00000100);
        vOL1DayMA2_ = 0L;
        onChanged();
        return this;
      }

      private long vOL1DayMA3_ ;
      /**
       * <code>optional int64 VOL1dayMA3 = 238;</code>
       *
       * <pre>
       * VOL + 1day + MA3
       * </pre>
       */
      public boolean hasVOL1DayMA3() {
        return ((bitField4_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 VOL1dayMA3 = 238;</code>
       *
       * <pre>
       * VOL + 1day + MA3
       * </pre>
       */
      public long getVOL1DayMA3() {
        return vOL1DayMA3_;
      }
      /**
       * <code>optional int64 VOL1dayMA3 = 238;</code>
       *
       * <pre>
       * VOL + 1day + MA3
       * </pre>
       */
      public Builder setVOL1DayMA3(long value) {
        bitField4_ |= 0x00000200;
        vOL1DayMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 VOL1dayMA3 = 238;</code>
       *
       * <pre>
       * VOL + 1day + MA3
       * </pre>
       */
      public Builder clearVOL1DayMA3() {
        bitField4_ = (bitField4_ & ~0x00000200);
        vOL1DayMA3_ = 0L;
        onChanged();
        return this;
      }

      private long aRBR1MinAR_ ;
      /**
       * <code>optional int64 ARBR1minAR = 239;</code>
       *
       * <pre>
       * ARBR
       * </pre>
       */
      public boolean hasARBR1MinAR() {
        return ((bitField4_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 ARBR1minAR = 239;</code>
       *
       * <pre>
       * ARBR
       * </pre>
       */
      public long getARBR1MinAR() {
        return aRBR1MinAR_;
      }
      /**
       * <code>optional int64 ARBR1minAR = 239;</code>
       *
       * <pre>
       * ARBR
       * </pre>
       */
      public Builder setARBR1MinAR(long value) {
        bitField4_ |= 0x00000400;
        aRBR1MinAR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ARBR1minAR = 239;</code>
       *
       * <pre>
       * ARBR
       * </pre>
       */
      public Builder clearARBR1MinAR() {
        bitField4_ = (bitField4_ & ~0x00000400);
        aRBR1MinAR_ = 0L;
        onChanged();
        return this;
      }

      private long aRBR1MinBR_ ;
      /**
       * <code>optional int64 ARBR1minBR = 240;</code>
       *
       * <pre>
       * ARBR + 1min + BR
       * </pre>
       */
      public boolean hasARBR1MinBR() {
        return ((bitField4_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 ARBR1minBR = 240;</code>
       *
       * <pre>
       * ARBR + 1min + BR
       * </pre>
       */
      public long getARBR1MinBR() {
        return aRBR1MinBR_;
      }
      /**
       * <code>optional int64 ARBR1minBR = 240;</code>
       *
       * <pre>
       * ARBR + 1min + BR
       * </pre>
       */
      public Builder setARBR1MinBR(long value) {
        bitField4_ |= 0x00000800;
        aRBR1MinBR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ARBR1minBR = 240;</code>
       *
       * <pre>
       * ARBR + 1min + BR
       * </pre>
       */
      public Builder clearARBR1MinBR() {
        bitField4_ = (bitField4_ & ~0x00000800);
        aRBR1MinBR_ = 0L;
        onChanged();
        return this;
      }

      private long aRBR5MinAR_ ;
      /**
       * <code>optional int64 ARBR5minAR = 241;</code>
       *
       * <pre>
       * ARBR + 5min + AR
       * </pre>
       */
      public boolean hasARBR5MinAR() {
        return ((bitField4_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 ARBR5minAR = 241;</code>
       *
       * <pre>
       * ARBR + 5min + AR
       * </pre>
       */
      public long getARBR5MinAR() {
        return aRBR5MinAR_;
      }
      /**
       * <code>optional int64 ARBR5minAR = 241;</code>
       *
       * <pre>
       * ARBR + 5min + AR
       * </pre>
       */
      public Builder setARBR5MinAR(long value) {
        bitField4_ |= 0x00001000;
        aRBR5MinAR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ARBR5minAR = 241;</code>
       *
       * <pre>
       * ARBR + 5min + AR
       * </pre>
       */
      public Builder clearARBR5MinAR() {
        bitField4_ = (bitField4_ & ~0x00001000);
        aRBR5MinAR_ = 0L;
        onChanged();
        return this;
      }

      private long aRBR5MinBR_ ;
      /**
       * <code>optional int64 ARBR5minBR = 242;</code>
       *
       * <pre>
       * ARBR + 5min + BR
       * </pre>
       */
      public boolean hasARBR5MinBR() {
        return ((bitField4_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 ARBR5minBR = 242;</code>
       *
       * <pre>
       * ARBR + 5min + BR
       * </pre>
       */
      public long getARBR5MinBR() {
        return aRBR5MinBR_;
      }
      /**
       * <code>optional int64 ARBR5minBR = 242;</code>
       *
       * <pre>
       * ARBR + 5min + BR
       * </pre>
       */
      public Builder setARBR5MinBR(long value) {
        bitField4_ |= 0x00002000;
        aRBR5MinBR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ARBR5minBR = 242;</code>
       *
       * <pre>
       * ARBR + 5min + BR
       * </pre>
       */
      public Builder clearARBR5MinBR() {
        bitField4_ = (bitField4_ & ~0x00002000);
        aRBR5MinBR_ = 0L;
        onChanged();
        return this;
      }

      private long aRBR1DayAR_ ;
      /**
       * <code>optional int64 ARBR1dayAR = 243;</code>
       *
       * <pre>
       * ARBR + 1day + AR
       * </pre>
       */
      public boolean hasARBR1DayAR() {
        return ((bitField4_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 ARBR1dayAR = 243;</code>
       *
       * <pre>
       * ARBR + 1day + AR
       * </pre>
       */
      public long getARBR1DayAR() {
        return aRBR1DayAR_;
      }
      /**
       * <code>optional int64 ARBR1dayAR = 243;</code>
       *
       * <pre>
       * ARBR + 1day + AR
       * </pre>
       */
      public Builder setARBR1DayAR(long value) {
        bitField4_ |= 0x00004000;
        aRBR1DayAR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ARBR1dayAR = 243;</code>
       *
       * <pre>
       * ARBR + 1day + AR
       * </pre>
       */
      public Builder clearARBR1DayAR() {
        bitField4_ = (bitField4_ & ~0x00004000);
        aRBR1DayAR_ = 0L;
        onChanged();
        return this;
      }

      private long aRBR1DayBR_ ;
      /**
       * <code>optional int64 ARBR1dayBR = 244;</code>
       *
       * <pre>
       * ARBR + 1day + BR
       * </pre>
       */
      public boolean hasARBR1DayBR() {
        return ((bitField4_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 ARBR1dayBR = 244;</code>
       *
       * <pre>
       * ARBR + 1day + BR
       * </pre>
       */
      public long getARBR1DayBR() {
        return aRBR1DayBR_;
      }
      /**
       * <code>optional int64 ARBR1dayBR = 244;</code>
       *
       * <pre>
       * ARBR + 1day + BR
       * </pre>
       */
      public Builder setARBR1DayBR(long value) {
        bitField4_ |= 0x00008000;
        aRBR1DayBR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ARBR1dayBR = 244;</code>
       *
       * <pre>
       * ARBR + 1day + BR
       * </pre>
       */
      public Builder clearARBR1DayBR() {
        bitField4_ = (bitField4_ & ~0x00008000);
        aRBR1DayBR_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS1MinBIAS1_ ;
      /**
       * <code>optional int64 BIAS1minBIAS1 = 245;</code>
       *
       * <pre>
       * BIAS
       * </pre>
       */
      public boolean hasBIAS1MinBIAS1() {
        return ((bitField4_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 BIAS1minBIAS1 = 245;</code>
       *
       * <pre>
       * BIAS
       * </pre>
       */
      public long getBIAS1MinBIAS1() {
        return bIAS1MinBIAS1_;
      }
      /**
       * <code>optional int64 BIAS1minBIAS1 = 245;</code>
       *
       * <pre>
       * BIAS
       * </pre>
       */
      public Builder setBIAS1MinBIAS1(long value) {
        bitField4_ |= 0x00010000;
        bIAS1MinBIAS1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS1minBIAS1 = 245;</code>
       *
       * <pre>
       * BIAS
       * </pre>
       */
      public Builder clearBIAS1MinBIAS1() {
        bitField4_ = (bitField4_ & ~0x00010000);
        bIAS1MinBIAS1_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS1MinBIAS2_ ;
      /**
       * <code>optional int64 BIAS1minBIAS2 = 246;</code>
       *
       * <pre>
       * BIAS + 1min + BIAS2
       * </pre>
       */
      public boolean hasBIAS1MinBIAS2() {
        return ((bitField4_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 BIAS1minBIAS2 = 246;</code>
       *
       * <pre>
       * BIAS + 1min + BIAS2
       * </pre>
       */
      public long getBIAS1MinBIAS2() {
        return bIAS1MinBIAS2_;
      }
      /**
       * <code>optional int64 BIAS1minBIAS2 = 246;</code>
       *
       * <pre>
       * BIAS + 1min + BIAS2
       * </pre>
       */
      public Builder setBIAS1MinBIAS2(long value) {
        bitField4_ |= 0x00020000;
        bIAS1MinBIAS2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS1minBIAS2 = 246;</code>
       *
       * <pre>
       * BIAS + 1min + BIAS2
       * </pre>
       */
      public Builder clearBIAS1MinBIAS2() {
        bitField4_ = (bitField4_ & ~0x00020000);
        bIAS1MinBIAS2_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS1MinBIAS3_ ;
      /**
       * <code>optional int64 BIAS1minBIAS3 = 247;</code>
       *
       * <pre>
       * BIAS + 1min + BIAS3
       * </pre>
       */
      public boolean hasBIAS1MinBIAS3() {
        return ((bitField4_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 BIAS1minBIAS3 = 247;</code>
       *
       * <pre>
       * BIAS + 1min + BIAS3
       * </pre>
       */
      public long getBIAS1MinBIAS3() {
        return bIAS1MinBIAS3_;
      }
      /**
       * <code>optional int64 BIAS1minBIAS3 = 247;</code>
       *
       * <pre>
       * BIAS + 1min + BIAS3
       * </pre>
       */
      public Builder setBIAS1MinBIAS3(long value) {
        bitField4_ |= 0x00040000;
        bIAS1MinBIAS3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS1minBIAS3 = 247;</code>
       *
       * <pre>
       * BIAS + 1min + BIAS3
       * </pre>
       */
      public Builder clearBIAS1MinBIAS3() {
        bitField4_ = (bitField4_ & ~0x00040000);
        bIAS1MinBIAS3_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS5MinBIAS1_ ;
      /**
       * <code>optional int64 BIAS5minBIAS1 = 248;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS1
       * </pre>
       */
      public boolean hasBIAS5MinBIAS1() {
        return ((bitField4_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 BIAS5minBIAS1 = 248;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS1
       * </pre>
       */
      public long getBIAS5MinBIAS1() {
        return bIAS5MinBIAS1_;
      }
      /**
       * <code>optional int64 BIAS5minBIAS1 = 248;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS1
       * </pre>
       */
      public Builder setBIAS5MinBIAS1(long value) {
        bitField4_ |= 0x00080000;
        bIAS5MinBIAS1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS5minBIAS1 = 248;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS1
       * </pre>
       */
      public Builder clearBIAS5MinBIAS1() {
        bitField4_ = (bitField4_ & ~0x00080000);
        bIAS5MinBIAS1_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS5MinBIAS2_ ;
      /**
       * <code>optional int64 BIAS5minBIAS2 = 249;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS2
       * </pre>
       */
      public boolean hasBIAS5MinBIAS2() {
        return ((bitField4_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 BIAS5minBIAS2 = 249;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS2
       * </pre>
       */
      public long getBIAS5MinBIAS2() {
        return bIAS5MinBIAS2_;
      }
      /**
       * <code>optional int64 BIAS5minBIAS2 = 249;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS2
       * </pre>
       */
      public Builder setBIAS5MinBIAS2(long value) {
        bitField4_ |= 0x00100000;
        bIAS5MinBIAS2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS5minBIAS2 = 249;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS2
       * </pre>
       */
      public Builder clearBIAS5MinBIAS2() {
        bitField4_ = (bitField4_ & ~0x00100000);
        bIAS5MinBIAS2_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS5MinBIAS3_ ;
      /**
       * <code>optional int64 BIAS5minBIAS3 = 250;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS3
       * </pre>
       */
      public boolean hasBIAS5MinBIAS3() {
        return ((bitField4_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 BIAS5minBIAS3 = 250;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS3
       * </pre>
       */
      public long getBIAS5MinBIAS3() {
        return bIAS5MinBIAS3_;
      }
      /**
       * <code>optional int64 BIAS5minBIAS3 = 250;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS3
       * </pre>
       */
      public Builder setBIAS5MinBIAS3(long value) {
        bitField4_ |= 0x00200000;
        bIAS5MinBIAS3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS5minBIAS3 = 250;</code>
       *
       * <pre>
       * BIAS + 5min + BIAS3
       * </pre>
       */
      public Builder clearBIAS5MinBIAS3() {
        bitField4_ = (bitField4_ & ~0x00200000);
        bIAS5MinBIAS3_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS1DayBIAS1_ ;
      /**
       * <code>optional int64 BIAS1dayBIAS1 = 251;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS1
       * </pre>
       */
      public boolean hasBIAS1DayBIAS1() {
        return ((bitField4_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 BIAS1dayBIAS1 = 251;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS1
       * </pre>
       */
      public long getBIAS1DayBIAS1() {
        return bIAS1DayBIAS1_;
      }
      /**
       * <code>optional int64 BIAS1dayBIAS1 = 251;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS1
       * </pre>
       */
      public Builder setBIAS1DayBIAS1(long value) {
        bitField4_ |= 0x00400000;
        bIAS1DayBIAS1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS1dayBIAS1 = 251;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS1
       * </pre>
       */
      public Builder clearBIAS1DayBIAS1() {
        bitField4_ = (bitField4_ & ~0x00400000);
        bIAS1DayBIAS1_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS1DayBIAS2_ ;
      /**
       * <code>optional int64 BIAS1dayBIAS2 = 252;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS2
       * </pre>
       */
      public boolean hasBIAS1DayBIAS2() {
        return ((bitField4_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 BIAS1dayBIAS2 = 252;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS2
       * </pre>
       */
      public long getBIAS1DayBIAS2() {
        return bIAS1DayBIAS2_;
      }
      /**
       * <code>optional int64 BIAS1dayBIAS2 = 252;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS2
       * </pre>
       */
      public Builder setBIAS1DayBIAS2(long value) {
        bitField4_ |= 0x00800000;
        bIAS1DayBIAS2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS1dayBIAS2 = 252;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS2
       * </pre>
       */
      public Builder clearBIAS1DayBIAS2() {
        bitField4_ = (bitField4_ & ~0x00800000);
        bIAS1DayBIAS2_ = 0L;
        onChanged();
        return this;
      }

      private long bIAS1DayBIAS3_ ;
      /**
       * <code>optional int64 BIAS1dayBIAS3 = 253;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS3
       * </pre>
       */
      public boolean hasBIAS1DayBIAS3() {
        return ((bitField4_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 BIAS1dayBIAS3 = 253;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS3
       * </pre>
       */
      public long getBIAS1DayBIAS3() {
        return bIAS1DayBIAS3_;
      }
      /**
       * <code>optional int64 BIAS1dayBIAS3 = 253;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS3
       * </pre>
       */
      public Builder setBIAS1DayBIAS3(long value) {
        bitField4_ |= 0x01000000;
        bIAS1DayBIAS3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 BIAS1dayBIAS3 = 253;</code>
       *
       * <pre>
       * BIAS + 1day + BIAS3
       * </pre>
       */
      public Builder clearBIAS1DayBIAS3() {
        bitField4_ = (bitField4_ & ~0x01000000);
        bIAS1DayBIAS3_ = 0L;
        onChanged();
        return this;
      }

      private long cCI1Min_ ;
      /**
       * <code>optional int64 CCI1min = 254;</code>
       *
       * <pre>
       * CCI
       * </pre>
       */
      public boolean hasCCI1Min() {
        return ((bitField4_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 CCI1min = 254;</code>
       *
       * <pre>
       * CCI
       * </pre>
       */
      public long getCCI1Min() {
        return cCI1Min_;
      }
      /**
       * <code>optional int64 CCI1min = 254;</code>
       *
       * <pre>
       * CCI
       * </pre>
       */
      public Builder setCCI1Min(long value) {
        bitField4_ |= 0x02000000;
        cCI1Min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CCI1min = 254;</code>
       *
       * <pre>
       * CCI
       * </pre>
       */
      public Builder clearCCI1Min() {
        bitField4_ = (bitField4_ & ~0x02000000);
        cCI1Min_ = 0L;
        onChanged();
        return this;
      }

      private long cCI5Min_ ;
      /**
       * <code>optional int64 CCI5min = 255;</code>
       *
       * <pre>
       * CCI + 5min + _
       * </pre>
       */
      public boolean hasCCI5Min() {
        return ((bitField4_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 CCI5min = 255;</code>
       *
       * <pre>
       * CCI + 5min + _
       * </pre>
       */
      public long getCCI5Min() {
        return cCI5Min_;
      }
      /**
       * <code>optional int64 CCI5min = 255;</code>
       *
       * <pre>
       * CCI + 5min + _
       * </pre>
       */
      public Builder setCCI5Min(long value) {
        bitField4_ |= 0x04000000;
        cCI5Min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CCI5min = 255;</code>
       *
       * <pre>
       * CCI + 5min + _
       * </pre>
       */
      public Builder clearCCI5Min() {
        bitField4_ = (bitField4_ & ~0x04000000);
        cCI5Min_ = 0L;
        onChanged();
        return this;
      }

      private long cCI1Day_ ;
      /**
       * <code>optional int64 CCI1day = 256;</code>
       *
       * <pre>
       * CCI + 1day + _
       * </pre>
       */
      public boolean hasCCI1Day() {
        return ((bitField4_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 CCI1day = 256;</code>
       *
       * <pre>
       * CCI + 1day + _
       * </pre>
       */
      public long getCCI1Day() {
        return cCI1Day_;
      }
      /**
       * <code>optional int64 CCI1day = 256;</code>
       *
       * <pre>
       * CCI + 1day + _
       * </pre>
       */
      public Builder setCCI1Day(long value) {
        bitField4_ |= 0x08000000;
        cCI1Day_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CCI1day = 256;</code>
       *
       * <pre>
       * CCI + 1day + _
       * </pre>
       */
      public Builder clearCCI1Day() {
        bitField4_ = (bitField4_ & ~0x08000000);
        cCI1Day_ = 0L;
        onChanged();
        return this;
      }

      private long cJBS1MinCJBS_ ;
      /**
       * <code>optional int64 CJBS1minCJBS = 257;</code>
       *
       * <pre>
       * CJBS
       * </pre>
       */
      public boolean hasCJBS1MinCJBS() {
        return ((bitField4_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 CJBS1minCJBS = 257;</code>
       *
       * <pre>
       * CJBS
       * </pre>
       */
      public long getCJBS1MinCJBS() {
        return cJBS1MinCJBS_;
      }
      /**
       * <code>optional int64 CJBS1minCJBS = 257;</code>
       *
       * <pre>
       * CJBS
       * </pre>
       */
      public Builder setCJBS1MinCJBS(long value) {
        bitField4_ |= 0x10000000;
        cJBS1MinCJBS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CJBS1minCJBS = 257;</code>
       *
       * <pre>
       * CJBS
       * </pre>
       */
      public Builder clearCJBS1MinCJBS() {
        bitField4_ = (bitField4_ & ~0x10000000);
        cJBS1MinCJBS_ = 0L;
        onChanged();
        return this;
      }

      private long cJBS5MinCJBS_ ;
      /**
       * <code>optional int64 CJBS5minCJBS = 258;</code>
       *
       * <pre>
       * CJBS + 5min + CJBS
       * </pre>
       */
      public boolean hasCJBS5MinCJBS() {
        return ((bitField4_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 CJBS5minCJBS = 258;</code>
       *
       * <pre>
       * CJBS + 5min + CJBS
       * </pre>
       */
      public long getCJBS5MinCJBS() {
        return cJBS5MinCJBS_;
      }
      /**
       * <code>optional int64 CJBS5minCJBS = 258;</code>
       *
       * <pre>
       * CJBS + 5min + CJBS
       * </pre>
       */
      public Builder setCJBS5MinCJBS(long value) {
        bitField4_ |= 0x20000000;
        cJBS5MinCJBS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CJBS5minCJBS = 258;</code>
       *
       * <pre>
       * CJBS + 5min + CJBS
       * </pre>
       */
      public Builder clearCJBS5MinCJBS() {
        bitField4_ = (bitField4_ & ~0x20000000);
        cJBS5MinCJBS_ = 0L;
        onChanged();
        return this;
      }

      private long cJBS1DayCJBS_ ;
      /**
       * <code>optional int64 CJBS1dayCJBS = 259;</code>
       *
       * <pre>
       * CJBS + 1day + CJBS
       * </pre>
       */
      public boolean hasCJBS1DayCJBS() {
        return ((bitField4_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 CJBS1dayCJBS = 259;</code>
       *
       * <pre>
       * CJBS + 1day + CJBS
       * </pre>
       */
      public long getCJBS1DayCJBS() {
        return cJBS1DayCJBS_;
      }
      /**
       * <code>optional int64 CJBS1dayCJBS = 259;</code>
       *
       * <pre>
       * CJBS + 1day + CJBS
       * </pre>
       */
      public Builder setCJBS1DayCJBS(long value) {
        bitField4_ |= 0x40000000;
        cJBS1DayCJBS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CJBS1dayCJBS = 259;</code>
       *
       * <pre>
       * CJBS + 1day + CJBS
       * </pre>
       */
      public Builder clearCJBS1DayCJBS() {
        bitField4_ = (bitField4_ & ~0x40000000);
        cJBS1DayCJBS_ = 0L;
        onChanged();
        return this;
      }

      private long cR1MinCR_ ;
      /**
       * <code>optional int64 CR1minCR = 260;</code>
       *
       * <pre>
       * CR
       * </pre>
       */
      public boolean hasCR1MinCR() {
        return ((bitField4_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 CR1minCR = 260;</code>
       *
       * <pre>
       * CR
       * </pre>
       */
      public long getCR1MinCR() {
        return cR1MinCR_;
      }
      /**
       * <code>optional int64 CR1minCR = 260;</code>
       *
       * <pre>
       * CR
       * </pre>
       */
      public Builder setCR1MinCR(long value) {
        bitField4_ |= 0x80000000;
        cR1MinCR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR1minCR = 260;</code>
       *
       * <pre>
       * CR
       * </pre>
       */
      public Builder clearCR1MinCR() {
        bitField4_ = (bitField4_ & ~0x80000000);
        cR1MinCR_ = 0L;
        onChanged();
        return this;
      }

      private long cR1MinMA1_ ;
      /**
       * <code>optional int64 CR1minMA1 = 261;</code>
       *
       * <pre>
       * CR + 1min + MA1
       * </pre>
       */
      public boolean hasCR1MinMA1() {
        return ((bitField5_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 CR1minMA1 = 261;</code>
       *
       * <pre>
       * CR + 1min + MA1
       * </pre>
       */
      public long getCR1MinMA1() {
        return cR1MinMA1_;
      }
      /**
       * <code>optional int64 CR1minMA1 = 261;</code>
       *
       * <pre>
       * CR + 1min + MA1
       * </pre>
       */
      public Builder setCR1MinMA1(long value) {
        bitField5_ |= 0x00000001;
        cR1MinMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR1minMA1 = 261;</code>
       *
       * <pre>
       * CR + 1min + MA1
       * </pre>
       */
      public Builder clearCR1MinMA1() {
        bitField5_ = (bitField5_ & ~0x00000001);
        cR1MinMA1_ = 0L;
        onChanged();
        return this;
      }

      private long cR1MinMA2_ ;
      /**
       * <code>optional int64 CR1minMA2 = 262;</code>
       *
       * <pre>
       * CR + 1min + MA2
       * </pre>
       */
      public boolean hasCR1MinMA2() {
        return ((bitField5_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 CR1minMA2 = 262;</code>
       *
       * <pre>
       * CR + 1min + MA2
       * </pre>
       */
      public long getCR1MinMA2() {
        return cR1MinMA2_;
      }
      /**
       * <code>optional int64 CR1minMA2 = 262;</code>
       *
       * <pre>
       * CR + 1min + MA2
       * </pre>
       */
      public Builder setCR1MinMA2(long value) {
        bitField5_ |= 0x00000002;
        cR1MinMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR1minMA2 = 262;</code>
       *
       * <pre>
       * CR + 1min + MA2
       * </pre>
       */
      public Builder clearCR1MinMA2() {
        bitField5_ = (bitField5_ & ~0x00000002);
        cR1MinMA2_ = 0L;
        onChanged();
        return this;
      }

      private long cR1MinMA3_ ;
      /**
       * <code>optional int64 CR1minMA3 = 263;</code>
       *
       * <pre>
       * CR + 1min + MA3
       * </pre>
       */
      public boolean hasCR1MinMA3() {
        return ((bitField5_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 CR1minMA3 = 263;</code>
       *
       * <pre>
       * CR + 1min + MA3
       * </pre>
       */
      public long getCR1MinMA3() {
        return cR1MinMA3_;
      }
      /**
       * <code>optional int64 CR1minMA3 = 263;</code>
       *
       * <pre>
       * CR + 1min + MA3
       * </pre>
       */
      public Builder setCR1MinMA3(long value) {
        bitField5_ |= 0x00000004;
        cR1MinMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR1minMA3 = 263;</code>
       *
       * <pre>
       * CR + 1min + MA3
       * </pre>
       */
      public Builder clearCR1MinMA3() {
        bitField5_ = (bitField5_ & ~0x00000004);
        cR1MinMA3_ = 0L;
        onChanged();
        return this;
      }

      private long cR5MinCR_ ;
      /**
       * <code>optional int64 CR5minCR = 264;</code>
       *
       * <pre>
       * CR + 5min + CR
       * </pre>
       */
      public boolean hasCR5MinCR() {
        return ((bitField5_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 CR5minCR = 264;</code>
       *
       * <pre>
       * CR + 5min + CR
       * </pre>
       */
      public long getCR5MinCR() {
        return cR5MinCR_;
      }
      /**
       * <code>optional int64 CR5minCR = 264;</code>
       *
       * <pre>
       * CR + 5min + CR
       * </pre>
       */
      public Builder setCR5MinCR(long value) {
        bitField5_ |= 0x00000008;
        cR5MinCR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR5minCR = 264;</code>
       *
       * <pre>
       * CR + 5min + CR
       * </pre>
       */
      public Builder clearCR5MinCR() {
        bitField5_ = (bitField5_ & ~0x00000008);
        cR5MinCR_ = 0L;
        onChanged();
        return this;
      }

      private long cR5MinMA1_ ;
      /**
       * <code>optional int64 CR5minMA1 = 265;</code>
       *
       * <pre>
       * CR + 5min + MA1
       * </pre>
       */
      public boolean hasCR5MinMA1() {
        return ((bitField5_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 CR5minMA1 = 265;</code>
       *
       * <pre>
       * CR + 5min + MA1
       * </pre>
       */
      public long getCR5MinMA1() {
        return cR5MinMA1_;
      }
      /**
       * <code>optional int64 CR5minMA1 = 265;</code>
       *
       * <pre>
       * CR + 5min + MA1
       * </pre>
       */
      public Builder setCR5MinMA1(long value) {
        bitField5_ |= 0x00000010;
        cR5MinMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR5minMA1 = 265;</code>
       *
       * <pre>
       * CR + 5min + MA1
       * </pre>
       */
      public Builder clearCR5MinMA1() {
        bitField5_ = (bitField5_ & ~0x00000010);
        cR5MinMA1_ = 0L;
        onChanged();
        return this;
      }

      private long cR5MinMA2_ ;
      /**
       * <code>optional int64 CR5minMA2 = 266;</code>
       *
       * <pre>
       * CR + 5min + MA2
       * </pre>
       */
      public boolean hasCR5MinMA2() {
        return ((bitField5_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 CR5minMA2 = 266;</code>
       *
       * <pre>
       * CR + 5min + MA2
       * </pre>
       */
      public long getCR5MinMA2() {
        return cR5MinMA2_;
      }
      /**
       * <code>optional int64 CR5minMA2 = 266;</code>
       *
       * <pre>
       * CR + 5min + MA2
       * </pre>
       */
      public Builder setCR5MinMA2(long value) {
        bitField5_ |= 0x00000020;
        cR5MinMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR5minMA2 = 266;</code>
       *
       * <pre>
       * CR + 5min + MA2
       * </pre>
       */
      public Builder clearCR5MinMA2() {
        bitField5_ = (bitField5_ & ~0x00000020);
        cR5MinMA2_ = 0L;
        onChanged();
        return this;
      }

      private long cR5MinMA3_ ;
      /**
       * <code>optional int64 CR5minMA3 = 267;</code>
       *
       * <pre>
       * CR + 5min + MA3
       * </pre>
       */
      public boolean hasCR5MinMA3() {
        return ((bitField5_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 CR5minMA3 = 267;</code>
       *
       * <pre>
       * CR + 5min + MA3
       * </pre>
       */
      public long getCR5MinMA3() {
        return cR5MinMA3_;
      }
      /**
       * <code>optional int64 CR5minMA3 = 267;</code>
       *
       * <pre>
       * CR + 5min + MA3
       * </pre>
       */
      public Builder setCR5MinMA3(long value) {
        bitField5_ |= 0x00000040;
        cR5MinMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR5minMA3 = 267;</code>
       *
       * <pre>
       * CR + 5min + MA3
       * </pre>
       */
      public Builder clearCR5MinMA3() {
        bitField5_ = (bitField5_ & ~0x00000040);
        cR5MinMA3_ = 0L;
        onChanged();
        return this;
      }

      private long cR1DayCR_ ;
      /**
       * <code>optional int64 CR1dayCR = 268;</code>
       *
       * <pre>
       * CR + 1day + CR
       * </pre>
       */
      public boolean hasCR1DayCR() {
        return ((bitField5_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 CR1dayCR = 268;</code>
       *
       * <pre>
       * CR + 1day + CR
       * </pre>
       */
      public long getCR1DayCR() {
        return cR1DayCR_;
      }
      /**
       * <code>optional int64 CR1dayCR = 268;</code>
       *
       * <pre>
       * CR + 1day + CR
       * </pre>
       */
      public Builder setCR1DayCR(long value) {
        bitField5_ |= 0x00000080;
        cR1DayCR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR1dayCR = 268;</code>
       *
       * <pre>
       * CR + 1day + CR
       * </pre>
       */
      public Builder clearCR1DayCR() {
        bitField5_ = (bitField5_ & ~0x00000080);
        cR1DayCR_ = 0L;
        onChanged();
        return this;
      }

      private long cR1DayMA1_ ;
      /**
       * <code>optional int64 CR1dayMA1 = 269;</code>
       *
       * <pre>
       * CR + 1day + MA1
       * </pre>
       */
      public boolean hasCR1DayMA1() {
        return ((bitField5_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 CR1dayMA1 = 269;</code>
       *
       * <pre>
       * CR + 1day + MA1
       * </pre>
       */
      public long getCR1DayMA1() {
        return cR1DayMA1_;
      }
      /**
       * <code>optional int64 CR1dayMA1 = 269;</code>
       *
       * <pre>
       * CR + 1day + MA1
       * </pre>
       */
      public Builder setCR1DayMA1(long value) {
        bitField5_ |= 0x00000100;
        cR1DayMA1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR1dayMA1 = 269;</code>
       *
       * <pre>
       * CR + 1day + MA1
       * </pre>
       */
      public Builder clearCR1DayMA1() {
        bitField5_ = (bitField5_ & ~0x00000100);
        cR1DayMA1_ = 0L;
        onChanged();
        return this;
      }

      private long cR1DayMA2_ ;
      /**
       * <code>optional int64 CR1dayMA2 = 270;</code>
       *
       * <pre>
       * CR + 1day + MA2
       * </pre>
       */
      public boolean hasCR1DayMA2() {
        return ((bitField5_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 CR1dayMA2 = 270;</code>
       *
       * <pre>
       * CR + 1day + MA2
       * </pre>
       */
      public long getCR1DayMA2() {
        return cR1DayMA2_;
      }
      /**
       * <code>optional int64 CR1dayMA2 = 270;</code>
       *
       * <pre>
       * CR + 1day + MA2
       * </pre>
       */
      public Builder setCR1DayMA2(long value) {
        bitField5_ |= 0x00000200;
        cR1DayMA2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR1dayMA2 = 270;</code>
       *
       * <pre>
       * CR + 1day + MA2
       * </pre>
       */
      public Builder clearCR1DayMA2() {
        bitField5_ = (bitField5_ & ~0x00000200);
        cR1DayMA2_ = 0L;
        onChanged();
        return this;
      }

      private long cR1DayMA3_ ;
      /**
       * <code>optional int64 CR1dayMA3 = 271;</code>
       *
       * <pre>
       * CR + 1day + MA3
       * </pre>
       */
      public boolean hasCR1DayMA3() {
        return ((bitField5_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 CR1dayMA3 = 271;</code>
       *
       * <pre>
       * CR + 1day + MA3
       * </pre>
       */
      public long getCR1DayMA3() {
        return cR1DayMA3_;
      }
      /**
       * <code>optional int64 CR1dayMA3 = 271;</code>
       *
       * <pre>
       * CR + 1day + MA3
       * </pre>
       */
      public Builder setCR1DayMA3(long value) {
        bitField5_ |= 0x00000400;
        cR1DayMA3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 CR1dayMA3 = 271;</code>
       *
       * <pre>
       * CR + 1day + MA3
       * </pre>
       */
      public Builder clearCR1DayMA3() {
        bitField5_ = (bitField5_ & ~0x00000400);
        cR1DayMA3_ = 0L;
        onChanged();
        return this;
      }

      private long dMA1MinDDD_ ;
      /**
       * <code>optional int64 DMA1minDDD = 272;</code>
       *
       * <pre>
       * DMA
       * </pre>
       */
      public boolean hasDMA1MinDDD() {
        return ((bitField5_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 DMA1minDDD = 272;</code>
       *
       * <pre>
       * DMA
       * </pre>
       */
      public long getDMA1MinDDD() {
        return dMA1MinDDD_;
      }
      /**
       * <code>optional int64 DMA1minDDD = 272;</code>
       *
       * <pre>
       * DMA
       * </pre>
       */
      public Builder setDMA1MinDDD(long value) {
        bitField5_ |= 0x00000800;
        dMA1MinDDD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMA1minDDD = 272;</code>
       *
       * <pre>
       * DMA
       * </pre>
       */
      public Builder clearDMA1MinDDD() {
        bitField5_ = (bitField5_ & ~0x00000800);
        dMA1MinDDD_ = 0L;
        onChanged();
        return this;
      }

      private long dMA1MinAMA_ ;
      /**
       * <code>optional int64 DMA1minAMA = 273;</code>
       *
       * <pre>
       * DMA + 1min + AMA
       * </pre>
       */
      public boolean hasDMA1MinAMA() {
        return ((bitField5_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 DMA1minAMA = 273;</code>
       *
       * <pre>
       * DMA + 1min + AMA
       * </pre>
       */
      public long getDMA1MinAMA() {
        return dMA1MinAMA_;
      }
      /**
       * <code>optional int64 DMA1minAMA = 273;</code>
       *
       * <pre>
       * DMA + 1min + AMA
       * </pre>
       */
      public Builder setDMA1MinAMA(long value) {
        bitField5_ |= 0x00001000;
        dMA1MinAMA_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMA1minAMA = 273;</code>
       *
       * <pre>
       * DMA + 1min + AMA
       * </pre>
       */
      public Builder clearDMA1MinAMA() {
        bitField5_ = (bitField5_ & ~0x00001000);
        dMA1MinAMA_ = 0L;
        onChanged();
        return this;
      }

      private long dMA5MinDDD_ ;
      /**
       * <code>optional int64 DMA5minDDD = 274;</code>
       *
       * <pre>
       * DMA + 5min + DDD
       * </pre>
       */
      public boolean hasDMA5MinDDD() {
        return ((bitField5_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 DMA5minDDD = 274;</code>
       *
       * <pre>
       * DMA + 5min + DDD
       * </pre>
       */
      public long getDMA5MinDDD() {
        return dMA5MinDDD_;
      }
      /**
       * <code>optional int64 DMA5minDDD = 274;</code>
       *
       * <pre>
       * DMA + 5min + DDD
       * </pre>
       */
      public Builder setDMA5MinDDD(long value) {
        bitField5_ |= 0x00002000;
        dMA5MinDDD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMA5minDDD = 274;</code>
       *
       * <pre>
       * DMA + 5min + DDD
       * </pre>
       */
      public Builder clearDMA5MinDDD() {
        bitField5_ = (bitField5_ & ~0x00002000);
        dMA5MinDDD_ = 0L;
        onChanged();
        return this;
      }

      private long dMA5MinAMA_ ;
      /**
       * <code>optional int64 DMA5minAMA = 275;</code>
       *
       * <pre>
       * DMA + 5min + AMA
       * </pre>
       */
      public boolean hasDMA5MinAMA() {
        return ((bitField5_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 DMA5minAMA = 275;</code>
       *
       * <pre>
       * DMA + 5min + AMA
       * </pre>
       */
      public long getDMA5MinAMA() {
        return dMA5MinAMA_;
      }
      /**
       * <code>optional int64 DMA5minAMA = 275;</code>
       *
       * <pre>
       * DMA + 5min + AMA
       * </pre>
       */
      public Builder setDMA5MinAMA(long value) {
        bitField5_ |= 0x00004000;
        dMA5MinAMA_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMA5minAMA = 275;</code>
       *
       * <pre>
       * DMA + 5min + AMA
       * </pre>
       */
      public Builder clearDMA5MinAMA() {
        bitField5_ = (bitField5_ & ~0x00004000);
        dMA5MinAMA_ = 0L;
        onChanged();
        return this;
      }

      private long dMA1DayDDD_ ;
      /**
       * <code>optional int64 DMA1dayDDD = 276;</code>
       *
       * <pre>
       * DMA + 1day + DDD
       * </pre>
       */
      public boolean hasDMA1DayDDD() {
        return ((bitField5_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 DMA1dayDDD = 276;</code>
       *
       * <pre>
       * DMA + 1day + DDD
       * </pre>
       */
      public long getDMA1DayDDD() {
        return dMA1DayDDD_;
      }
      /**
       * <code>optional int64 DMA1dayDDD = 276;</code>
       *
       * <pre>
       * DMA + 1day + DDD
       * </pre>
       */
      public Builder setDMA1DayDDD(long value) {
        bitField5_ |= 0x00008000;
        dMA1DayDDD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMA1dayDDD = 276;</code>
       *
       * <pre>
       * DMA + 1day + DDD
       * </pre>
       */
      public Builder clearDMA1DayDDD() {
        bitField5_ = (bitField5_ & ~0x00008000);
        dMA1DayDDD_ = 0L;
        onChanged();
        return this;
      }

      private long dMA1DayAMA_ ;
      /**
       * <code>optional int64 DMA1dayAMA = 277;</code>
       *
       * <pre>
       * DMA + 1day + AMA
       * </pre>
       */
      public boolean hasDMA1DayAMA() {
        return ((bitField5_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 DMA1dayAMA = 277;</code>
       *
       * <pre>
       * DMA + 1day + AMA
       * </pre>
       */
      public long getDMA1DayAMA() {
        return dMA1DayAMA_;
      }
      /**
       * <code>optional int64 DMA1dayAMA = 277;</code>
       *
       * <pre>
       * DMA + 1day + AMA
       * </pre>
       */
      public Builder setDMA1DayAMA(long value) {
        bitField5_ |= 0x00010000;
        dMA1DayAMA_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMA1dayAMA = 277;</code>
       *
       * <pre>
       * DMA + 1day + AMA
       * </pre>
       */
      public Builder clearDMA1DayAMA() {
        bitField5_ = (bitField5_ & ~0x00010000);
        dMA1DayAMA_ = 0L;
        onChanged();
        return this;
      }

      private long dMI1MinPDI_ ;
      /**
       * <code>optional int64 DMI1minPDI = 278;</code>
       *
       * <pre>
       * DMI
       * </pre>
       */
      public boolean hasDMI1MinPDI() {
        return ((bitField5_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 DMI1minPDI = 278;</code>
       *
       * <pre>
       * DMI
       * </pre>
       */
      public long getDMI1MinPDI() {
        return dMI1MinPDI_;
      }
      /**
       * <code>optional int64 DMI1minPDI = 278;</code>
       *
       * <pre>
       * DMI
       * </pre>
       */
      public Builder setDMI1MinPDI(long value) {
        bitField5_ |= 0x00020000;
        dMI1MinPDI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI1minPDI = 278;</code>
       *
       * <pre>
       * DMI
       * </pre>
       */
      public Builder clearDMI1MinPDI() {
        bitField5_ = (bitField5_ & ~0x00020000);
        dMI1MinPDI_ = 0L;
        onChanged();
        return this;
      }

      private long dMI1MinMDI_ ;
      /**
       * <code>optional int64 DMI1minMDI = 279;</code>
       *
       * <pre>
       * DMI + 1min + MDI
       * </pre>
       */
      public boolean hasDMI1MinMDI() {
        return ((bitField5_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 DMI1minMDI = 279;</code>
       *
       * <pre>
       * DMI + 1min + MDI
       * </pre>
       */
      public long getDMI1MinMDI() {
        return dMI1MinMDI_;
      }
      /**
       * <code>optional int64 DMI1minMDI = 279;</code>
       *
       * <pre>
       * DMI + 1min + MDI
       * </pre>
       */
      public Builder setDMI1MinMDI(long value) {
        bitField5_ |= 0x00040000;
        dMI1MinMDI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI1minMDI = 279;</code>
       *
       * <pre>
       * DMI + 1min + MDI
       * </pre>
       */
      public Builder clearDMI1MinMDI() {
        bitField5_ = (bitField5_ & ~0x00040000);
        dMI1MinMDI_ = 0L;
        onChanged();
        return this;
      }

      private long dMI1MinADX_ ;
      /**
       * <code>optional int64 DMI1minADX = 280;</code>
       *
       * <pre>
       * DMI + 1min + ADX
       * </pre>
       */
      public boolean hasDMI1MinADX() {
        return ((bitField5_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 DMI1minADX = 280;</code>
       *
       * <pre>
       * DMI + 1min + ADX
       * </pre>
       */
      public long getDMI1MinADX() {
        return dMI1MinADX_;
      }
      /**
       * <code>optional int64 DMI1minADX = 280;</code>
       *
       * <pre>
       * DMI + 1min + ADX
       * </pre>
       */
      public Builder setDMI1MinADX(long value) {
        bitField5_ |= 0x00080000;
        dMI1MinADX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI1minADX = 280;</code>
       *
       * <pre>
       * DMI + 1min + ADX
       * </pre>
       */
      public Builder clearDMI1MinADX() {
        bitField5_ = (bitField5_ & ~0x00080000);
        dMI1MinADX_ = 0L;
        onChanged();
        return this;
      }

      private long dMI1MinADXR_ ;
      /**
       * <code>optional int64 DMI1minADXR = 281;</code>
       *
       * <pre>
       * DMI + 1min + ADXR
       * </pre>
       */
      public boolean hasDMI1MinADXR() {
        return ((bitField5_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 DMI1minADXR = 281;</code>
       *
       * <pre>
       * DMI + 1min + ADXR
       * </pre>
       */
      public long getDMI1MinADXR() {
        return dMI1MinADXR_;
      }
      /**
       * <code>optional int64 DMI1minADXR = 281;</code>
       *
       * <pre>
       * DMI + 1min + ADXR
       * </pre>
       */
      public Builder setDMI1MinADXR(long value) {
        bitField5_ |= 0x00100000;
        dMI1MinADXR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI1minADXR = 281;</code>
       *
       * <pre>
       * DMI + 1min + ADXR
       * </pre>
       */
      public Builder clearDMI1MinADXR() {
        bitField5_ = (bitField5_ & ~0x00100000);
        dMI1MinADXR_ = 0L;
        onChanged();
        return this;
      }

      private long dMI5MinPDI_ ;
      /**
       * <code>optional int64 DMI5minPDI = 282;</code>
       *
       * <pre>
       * DMI + 5min + PDI
       * </pre>
       */
      public boolean hasDMI5MinPDI() {
        return ((bitField5_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 DMI5minPDI = 282;</code>
       *
       * <pre>
       * DMI + 5min + PDI
       * </pre>
       */
      public long getDMI5MinPDI() {
        return dMI5MinPDI_;
      }
      /**
       * <code>optional int64 DMI5minPDI = 282;</code>
       *
       * <pre>
       * DMI + 5min + PDI
       * </pre>
       */
      public Builder setDMI5MinPDI(long value) {
        bitField5_ |= 0x00200000;
        dMI5MinPDI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI5minPDI = 282;</code>
       *
       * <pre>
       * DMI + 5min + PDI
       * </pre>
       */
      public Builder clearDMI5MinPDI() {
        bitField5_ = (bitField5_ & ~0x00200000);
        dMI5MinPDI_ = 0L;
        onChanged();
        return this;
      }

      private long dMI5MinMDI_ ;
      /**
       * <code>optional int64 DMI5minMDI = 283;</code>
       *
       * <pre>
       * DMI + 5min + MDI
       * </pre>
       */
      public boolean hasDMI5MinMDI() {
        return ((bitField5_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 DMI5minMDI = 283;</code>
       *
       * <pre>
       * DMI + 5min + MDI
       * </pre>
       */
      public long getDMI5MinMDI() {
        return dMI5MinMDI_;
      }
      /**
       * <code>optional int64 DMI5minMDI = 283;</code>
       *
       * <pre>
       * DMI + 5min + MDI
       * </pre>
       */
      public Builder setDMI5MinMDI(long value) {
        bitField5_ |= 0x00400000;
        dMI5MinMDI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI5minMDI = 283;</code>
       *
       * <pre>
       * DMI + 5min + MDI
       * </pre>
       */
      public Builder clearDMI5MinMDI() {
        bitField5_ = (bitField5_ & ~0x00400000);
        dMI5MinMDI_ = 0L;
        onChanged();
        return this;
      }

      private long dMI5MinADX_ ;
      /**
       * <code>optional int64 DMI5minADX = 284;</code>
       *
       * <pre>
       * DMI + 5min + ADX
       * </pre>
       */
      public boolean hasDMI5MinADX() {
        return ((bitField5_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 DMI5minADX = 284;</code>
       *
       * <pre>
       * DMI + 5min + ADX
       * </pre>
       */
      public long getDMI5MinADX() {
        return dMI5MinADX_;
      }
      /**
       * <code>optional int64 DMI5minADX = 284;</code>
       *
       * <pre>
       * DMI + 5min + ADX
       * </pre>
       */
      public Builder setDMI5MinADX(long value) {
        bitField5_ |= 0x00800000;
        dMI5MinADX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI5minADX = 284;</code>
       *
       * <pre>
       * DMI + 5min + ADX
       * </pre>
       */
      public Builder clearDMI5MinADX() {
        bitField5_ = (bitField5_ & ~0x00800000);
        dMI5MinADX_ = 0L;
        onChanged();
        return this;
      }

      private long dMI5MinADXR_ ;
      /**
       * <code>optional int64 DMI5minADXR = 285;</code>
       *
       * <pre>
       * DMI + 5min + ADXR
       * </pre>
       */
      public boolean hasDMI5MinADXR() {
        return ((bitField5_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 DMI5minADXR = 285;</code>
       *
       * <pre>
       * DMI + 5min + ADXR
       * </pre>
       */
      public long getDMI5MinADXR() {
        return dMI5MinADXR_;
      }
      /**
       * <code>optional int64 DMI5minADXR = 285;</code>
       *
       * <pre>
       * DMI + 5min + ADXR
       * </pre>
       */
      public Builder setDMI5MinADXR(long value) {
        bitField5_ |= 0x01000000;
        dMI5MinADXR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI5minADXR = 285;</code>
       *
       * <pre>
       * DMI + 5min + ADXR
       * </pre>
       */
      public Builder clearDMI5MinADXR() {
        bitField5_ = (bitField5_ & ~0x01000000);
        dMI5MinADXR_ = 0L;
        onChanged();
        return this;
      }

      private long dMI1DayPDI_ ;
      /**
       * <code>optional int64 DMI1dayPDI = 286;</code>
       *
       * <pre>
       * DMI + 1day + PDI
       * </pre>
       */
      public boolean hasDMI1DayPDI() {
        return ((bitField5_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 DMI1dayPDI = 286;</code>
       *
       * <pre>
       * DMI + 1day + PDI
       * </pre>
       */
      public long getDMI1DayPDI() {
        return dMI1DayPDI_;
      }
      /**
       * <code>optional int64 DMI1dayPDI = 286;</code>
       *
       * <pre>
       * DMI + 1day + PDI
       * </pre>
       */
      public Builder setDMI1DayPDI(long value) {
        bitField5_ |= 0x02000000;
        dMI1DayPDI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI1dayPDI = 286;</code>
       *
       * <pre>
       * DMI + 1day + PDI
       * </pre>
       */
      public Builder clearDMI1DayPDI() {
        bitField5_ = (bitField5_ & ~0x02000000);
        dMI1DayPDI_ = 0L;
        onChanged();
        return this;
      }

      private long dMI1DayMDI_ ;
      /**
       * <code>optional int64 DMI1dayMDI = 287;</code>
       *
       * <pre>
       * DMI + 1day + MDI
       * </pre>
       */
      public boolean hasDMI1DayMDI() {
        return ((bitField5_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 DMI1dayMDI = 287;</code>
       *
       * <pre>
       * DMI + 1day + MDI
       * </pre>
       */
      public long getDMI1DayMDI() {
        return dMI1DayMDI_;
      }
      /**
       * <code>optional int64 DMI1dayMDI = 287;</code>
       *
       * <pre>
       * DMI + 1day + MDI
       * </pre>
       */
      public Builder setDMI1DayMDI(long value) {
        bitField5_ |= 0x04000000;
        dMI1DayMDI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI1dayMDI = 287;</code>
       *
       * <pre>
       * DMI + 1day + MDI
       * </pre>
       */
      public Builder clearDMI1DayMDI() {
        bitField5_ = (bitField5_ & ~0x04000000);
        dMI1DayMDI_ = 0L;
        onChanged();
        return this;
      }

      private long dMI1DayADX_ ;
      /**
       * <code>optional int64 DMI1dayADX = 288;</code>
       *
       * <pre>
       * DMI + 1day + ADX
       * </pre>
       */
      public boolean hasDMI1DayADX() {
        return ((bitField5_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 DMI1dayADX = 288;</code>
       *
       * <pre>
       * DMI + 1day + ADX
       * </pre>
       */
      public long getDMI1DayADX() {
        return dMI1DayADX_;
      }
      /**
       * <code>optional int64 DMI1dayADX = 288;</code>
       *
       * <pre>
       * DMI + 1day + ADX
       * </pre>
       */
      public Builder setDMI1DayADX(long value) {
        bitField5_ |= 0x08000000;
        dMI1DayADX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI1dayADX = 288;</code>
       *
       * <pre>
       * DMI + 1day + ADX
       * </pre>
       */
      public Builder clearDMI1DayADX() {
        bitField5_ = (bitField5_ & ~0x08000000);
        dMI1DayADX_ = 0L;
        onChanged();
        return this;
      }

      private long dMI1DayADXR_ ;
      /**
       * <code>optional int64 DMI1dayADXR = 289;</code>
       *
       * <pre>
       * DMI + 1day + ADXR
       * </pre>
       */
      public boolean hasDMI1DayADXR() {
        return ((bitField5_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 DMI1dayADXR = 289;</code>
       *
       * <pre>
       * DMI + 1day + ADXR
       * </pre>
       */
      public long getDMI1DayADXR() {
        return dMI1DayADXR_;
      }
      /**
       * <code>optional int64 DMI1dayADXR = 289;</code>
       *
       * <pre>
       * DMI + 1day + ADXR
       * </pre>
       */
      public Builder setDMI1DayADXR(long value) {
        bitField5_ |= 0x10000000;
        dMI1DayADXR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 DMI1dayADXR = 289;</code>
       *
       * <pre>
       * DMI + 1day + ADXR
       * </pre>
       */
      public Builder clearDMI1DayADXR() {
        bitField5_ = (bitField5_ & ~0x10000000);
        dMI1DayADXR_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ1MinK_ ;
      /**
       * <code>optional int64 KDJ1minK = 290;</code>
       *
       * <pre>
       * KDJ
       * </pre>
       */
      public boolean hasKDJ1MinK() {
        return ((bitField5_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 KDJ1minK = 290;</code>
       *
       * <pre>
       * KDJ
       * </pre>
       */
      public long getKDJ1MinK() {
        return kDJ1MinK_;
      }
      /**
       * <code>optional int64 KDJ1minK = 290;</code>
       *
       * <pre>
       * KDJ
       * </pre>
       */
      public Builder setKDJ1MinK(long value) {
        bitField5_ |= 0x20000000;
        kDJ1MinK_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ1minK = 290;</code>
       *
       * <pre>
       * KDJ
       * </pre>
       */
      public Builder clearKDJ1MinK() {
        bitField5_ = (bitField5_ & ~0x20000000);
        kDJ1MinK_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ1MinD_ ;
      /**
       * <code>optional int64 KDJ1minD = 291;</code>
       *
       * <pre>
       * KDJ + 1min + D
       * </pre>
       */
      public boolean hasKDJ1MinD() {
        return ((bitField5_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 KDJ1minD = 291;</code>
       *
       * <pre>
       * KDJ + 1min + D
       * </pre>
       */
      public long getKDJ1MinD() {
        return kDJ1MinD_;
      }
      /**
       * <code>optional int64 KDJ1minD = 291;</code>
       *
       * <pre>
       * KDJ + 1min + D
       * </pre>
       */
      public Builder setKDJ1MinD(long value) {
        bitField5_ |= 0x40000000;
        kDJ1MinD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ1minD = 291;</code>
       *
       * <pre>
       * KDJ + 1min + D
       * </pre>
       */
      public Builder clearKDJ1MinD() {
        bitField5_ = (bitField5_ & ~0x40000000);
        kDJ1MinD_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ1MinJ_ ;
      /**
       * <code>optional int64 KDJ1minJ = 292;</code>
       *
       * <pre>
       * KDJ + 1min + J
       * </pre>
       */
      public boolean hasKDJ1MinJ() {
        return ((bitField5_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 KDJ1minJ = 292;</code>
       *
       * <pre>
       * KDJ + 1min + J
       * </pre>
       */
      public long getKDJ1MinJ() {
        return kDJ1MinJ_;
      }
      /**
       * <code>optional int64 KDJ1minJ = 292;</code>
       *
       * <pre>
       * KDJ + 1min + J
       * </pre>
       */
      public Builder setKDJ1MinJ(long value) {
        bitField5_ |= 0x80000000;
        kDJ1MinJ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ1minJ = 292;</code>
       *
       * <pre>
       * KDJ + 1min + J
       * </pre>
       */
      public Builder clearKDJ1MinJ() {
        bitField5_ = (bitField5_ & ~0x80000000);
        kDJ1MinJ_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ5MinK_ ;
      /**
       * <code>optional int64 KDJ5minK = 293;</code>
       *
       * <pre>
       * KDJ + 5min + K
       * </pre>
       */
      public boolean hasKDJ5MinK() {
        return ((bitField6_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 KDJ5minK = 293;</code>
       *
       * <pre>
       * KDJ + 5min + K
       * </pre>
       */
      public long getKDJ5MinK() {
        return kDJ5MinK_;
      }
      /**
       * <code>optional int64 KDJ5minK = 293;</code>
       *
       * <pre>
       * KDJ + 5min + K
       * </pre>
       */
      public Builder setKDJ5MinK(long value) {
        bitField6_ |= 0x00000001;
        kDJ5MinK_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ5minK = 293;</code>
       *
       * <pre>
       * KDJ + 5min + K
       * </pre>
       */
      public Builder clearKDJ5MinK() {
        bitField6_ = (bitField6_ & ~0x00000001);
        kDJ5MinK_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ5MinD_ ;
      /**
       * <code>optional int64 KDJ5minD = 294;</code>
       *
       * <pre>
       * KDJ + 5min + D
       * </pre>
       */
      public boolean hasKDJ5MinD() {
        return ((bitField6_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 KDJ5minD = 294;</code>
       *
       * <pre>
       * KDJ + 5min + D
       * </pre>
       */
      public long getKDJ5MinD() {
        return kDJ5MinD_;
      }
      /**
       * <code>optional int64 KDJ5minD = 294;</code>
       *
       * <pre>
       * KDJ + 5min + D
       * </pre>
       */
      public Builder setKDJ5MinD(long value) {
        bitField6_ |= 0x00000002;
        kDJ5MinD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ5minD = 294;</code>
       *
       * <pre>
       * KDJ + 5min + D
       * </pre>
       */
      public Builder clearKDJ5MinD() {
        bitField6_ = (bitField6_ & ~0x00000002);
        kDJ5MinD_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ5MinJ_ ;
      /**
       * <code>optional int64 KDJ5minJ = 295;</code>
       *
       * <pre>
       * KDJ + 5min + J
       * </pre>
       */
      public boolean hasKDJ5MinJ() {
        return ((bitField6_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 KDJ5minJ = 295;</code>
       *
       * <pre>
       * KDJ + 5min + J
       * </pre>
       */
      public long getKDJ5MinJ() {
        return kDJ5MinJ_;
      }
      /**
       * <code>optional int64 KDJ5minJ = 295;</code>
       *
       * <pre>
       * KDJ + 5min + J
       * </pre>
       */
      public Builder setKDJ5MinJ(long value) {
        bitField6_ |= 0x00000004;
        kDJ5MinJ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ5minJ = 295;</code>
       *
       * <pre>
       * KDJ + 5min + J
       * </pre>
       */
      public Builder clearKDJ5MinJ() {
        bitField6_ = (bitField6_ & ~0x00000004);
        kDJ5MinJ_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ1DayK_ ;
      /**
       * <code>optional int64 KDJ1dayK = 296;</code>
       *
       * <pre>
       * KDJ + 1day + K
       * </pre>
       */
      public boolean hasKDJ1DayK() {
        return ((bitField6_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 KDJ1dayK = 296;</code>
       *
       * <pre>
       * KDJ + 1day + K
       * </pre>
       */
      public long getKDJ1DayK() {
        return kDJ1DayK_;
      }
      /**
       * <code>optional int64 KDJ1dayK = 296;</code>
       *
       * <pre>
       * KDJ + 1day + K
       * </pre>
       */
      public Builder setKDJ1DayK(long value) {
        bitField6_ |= 0x00000008;
        kDJ1DayK_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ1dayK = 296;</code>
       *
       * <pre>
       * KDJ + 1day + K
       * </pre>
       */
      public Builder clearKDJ1DayK() {
        bitField6_ = (bitField6_ & ~0x00000008);
        kDJ1DayK_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ1DayD_ ;
      /**
       * <code>optional int64 KDJ1dayD = 297;</code>
       *
       * <pre>
       * KDJ + 1day + D
       * </pre>
       */
      public boolean hasKDJ1DayD() {
        return ((bitField6_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 KDJ1dayD = 297;</code>
       *
       * <pre>
       * KDJ + 1day + D
       * </pre>
       */
      public long getKDJ1DayD() {
        return kDJ1DayD_;
      }
      /**
       * <code>optional int64 KDJ1dayD = 297;</code>
       *
       * <pre>
       * KDJ + 1day + D
       * </pre>
       */
      public Builder setKDJ1DayD(long value) {
        bitField6_ |= 0x00000010;
        kDJ1DayD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ1dayD = 297;</code>
       *
       * <pre>
       * KDJ + 1day + D
       * </pre>
       */
      public Builder clearKDJ1DayD() {
        bitField6_ = (bitField6_ & ~0x00000010);
        kDJ1DayD_ = 0L;
        onChanged();
        return this;
      }

      private long kDJ1DayJ_ ;
      /**
       * <code>optional int64 KDJ1dayJ = 298;</code>
       *
       * <pre>
       * KDJ + 1day + J
       * </pre>
       */
      public boolean hasKDJ1DayJ() {
        return ((bitField6_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 KDJ1dayJ = 298;</code>
       *
       * <pre>
       * KDJ + 1day + J
       * </pre>
       */
      public long getKDJ1DayJ() {
        return kDJ1DayJ_;
      }
      /**
       * <code>optional int64 KDJ1dayJ = 298;</code>
       *
       * <pre>
       * KDJ + 1day + J
       * </pre>
       */
      public Builder setKDJ1DayJ(long value) {
        bitField6_ |= 0x00000020;
        kDJ1DayJ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 KDJ1dayJ = 298;</code>
       *
       * <pre>
       * KDJ + 1day + J
       * </pre>
       */
      public Builder clearKDJ1DayJ() {
        bitField6_ = (bitField6_ & ~0x00000020);
        kDJ1DayJ_ = 0L;
        onChanged();
        return this;
      }

      private long mACD1MinDIFF_ ;
      /**
       * <code>optional int64 MACD1minDIFF = 299;</code>
       *
       * <pre>
       * MACD
       * </pre>
       */
      public boolean hasMACD1MinDIFF() {
        return ((bitField6_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 MACD1minDIFF = 299;</code>
       *
       * <pre>
       * MACD
       * </pre>
       */
      public long getMACD1MinDIFF() {
        return mACD1MinDIFF_;
      }
      /**
       * <code>optional int64 MACD1minDIFF = 299;</code>
       *
       * <pre>
       * MACD
       * </pre>
       */
      public Builder setMACD1MinDIFF(long value) {
        bitField6_ |= 0x00000040;
        mACD1MinDIFF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD1minDIFF = 299;</code>
       *
       * <pre>
       * MACD
       * </pre>
       */
      public Builder clearMACD1MinDIFF() {
        bitField6_ = (bitField6_ & ~0x00000040);
        mACD1MinDIFF_ = 0L;
        onChanged();
        return this;
      }

      private long mACD1MinDEA_ ;
      /**
       * <code>optional int64 MACD1minDEA = 300;</code>
       *
       * <pre>
       * MACD + 1min + DEA
       * </pre>
       */
      public boolean hasMACD1MinDEA() {
        return ((bitField6_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 MACD1minDEA = 300;</code>
       *
       * <pre>
       * MACD + 1min + DEA
       * </pre>
       */
      public long getMACD1MinDEA() {
        return mACD1MinDEA_;
      }
      /**
       * <code>optional int64 MACD1minDEA = 300;</code>
       *
       * <pre>
       * MACD + 1min + DEA
       * </pre>
       */
      public Builder setMACD1MinDEA(long value) {
        bitField6_ |= 0x00000080;
        mACD1MinDEA_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD1minDEA = 300;</code>
       *
       * <pre>
       * MACD + 1min + DEA
       * </pre>
       */
      public Builder clearMACD1MinDEA() {
        bitField6_ = (bitField6_ & ~0x00000080);
        mACD1MinDEA_ = 0L;
        onChanged();
        return this;
      }

      private long mACD1MinMACD_ ;
      /**
       * <code>optional int64 MACD1minMACD = 301;</code>
       *
       * <pre>
       * MACD + 1min + MACD
       * </pre>
       */
      public boolean hasMACD1MinMACD() {
        return ((bitField6_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 MACD1minMACD = 301;</code>
       *
       * <pre>
       * MACD + 1min + MACD
       * </pre>
       */
      public long getMACD1MinMACD() {
        return mACD1MinMACD_;
      }
      /**
       * <code>optional int64 MACD1minMACD = 301;</code>
       *
       * <pre>
       * MACD + 1min + MACD
       * </pre>
       */
      public Builder setMACD1MinMACD(long value) {
        bitField6_ |= 0x00000100;
        mACD1MinMACD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD1minMACD = 301;</code>
       *
       * <pre>
       * MACD + 1min + MACD
       * </pre>
       */
      public Builder clearMACD1MinMACD() {
        bitField6_ = (bitField6_ & ~0x00000100);
        mACD1MinMACD_ = 0L;
        onChanged();
        return this;
      }

      private long mACD5MinDIFF_ ;
      /**
       * <code>optional int64 MACD5minDIFF = 302;</code>
       *
       * <pre>
       * MACD + 5min + DIFF
       * </pre>
       */
      public boolean hasMACD5MinDIFF() {
        return ((bitField6_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 MACD5minDIFF = 302;</code>
       *
       * <pre>
       * MACD + 5min + DIFF
       * </pre>
       */
      public long getMACD5MinDIFF() {
        return mACD5MinDIFF_;
      }
      /**
       * <code>optional int64 MACD5minDIFF = 302;</code>
       *
       * <pre>
       * MACD + 5min + DIFF
       * </pre>
       */
      public Builder setMACD5MinDIFF(long value) {
        bitField6_ |= 0x00000200;
        mACD5MinDIFF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD5minDIFF = 302;</code>
       *
       * <pre>
       * MACD + 5min + DIFF
       * </pre>
       */
      public Builder clearMACD5MinDIFF() {
        bitField6_ = (bitField6_ & ~0x00000200);
        mACD5MinDIFF_ = 0L;
        onChanged();
        return this;
      }

      private long mACD5MinDEA_ ;
      /**
       * <code>optional int64 MACD5minDEA = 303;</code>
       *
       * <pre>
       * MACD + 5min + DEA
       * </pre>
       */
      public boolean hasMACD5MinDEA() {
        return ((bitField6_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 MACD5minDEA = 303;</code>
       *
       * <pre>
       * MACD + 5min + DEA
       * </pre>
       */
      public long getMACD5MinDEA() {
        return mACD5MinDEA_;
      }
      /**
       * <code>optional int64 MACD5minDEA = 303;</code>
       *
       * <pre>
       * MACD + 5min + DEA
       * </pre>
       */
      public Builder setMACD5MinDEA(long value) {
        bitField6_ |= 0x00000400;
        mACD5MinDEA_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD5minDEA = 303;</code>
       *
       * <pre>
       * MACD + 5min + DEA
       * </pre>
       */
      public Builder clearMACD5MinDEA() {
        bitField6_ = (bitField6_ & ~0x00000400);
        mACD5MinDEA_ = 0L;
        onChanged();
        return this;
      }

      private long mACD5MinMACD_ ;
      /**
       * <code>optional int64 MACD5minMACD = 304;</code>
       *
       * <pre>
       * MACD + 5min + MACD
       * </pre>
       */
      public boolean hasMACD5MinMACD() {
        return ((bitField6_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 MACD5minMACD = 304;</code>
       *
       * <pre>
       * MACD + 5min + MACD
       * </pre>
       */
      public long getMACD5MinMACD() {
        return mACD5MinMACD_;
      }
      /**
       * <code>optional int64 MACD5minMACD = 304;</code>
       *
       * <pre>
       * MACD + 5min + MACD
       * </pre>
       */
      public Builder setMACD5MinMACD(long value) {
        bitField6_ |= 0x00000800;
        mACD5MinMACD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD5minMACD = 304;</code>
       *
       * <pre>
       * MACD + 5min + MACD
       * </pre>
       */
      public Builder clearMACD5MinMACD() {
        bitField6_ = (bitField6_ & ~0x00000800);
        mACD5MinMACD_ = 0L;
        onChanged();
        return this;
      }

      private long mACD1DayDIFF_ ;
      /**
       * <code>optional int64 MACD1dayDIFF = 305;</code>
       *
       * <pre>
       * MACD + 1day + DIFF
       * </pre>
       */
      public boolean hasMACD1DayDIFF() {
        return ((bitField6_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 MACD1dayDIFF = 305;</code>
       *
       * <pre>
       * MACD + 1day + DIFF
       * </pre>
       */
      public long getMACD1DayDIFF() {
        return mACD1DayDIFF_;
      }
      /**
       * <code>optional int64 MACD1dayDIFF = 305;</code>
       *
       * <pre>
       * MACD + 1day + DIFF
       * </pre>
       */
      public Builder setMACD1DayDIFF(long value) {
        bitField6_ |= 0x00001000;
        mACD1DayDIFF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD1dayDIFF = 305;</code>
       *
       * <pre>
       * MACD + 1day + DIFF
       * </pre>
       */
      public Builder clearMACD1DayDIFF() {
        bitField6_ = (bitField6_ & ~0x00001000);
        mACD1DayDIFF_ = 0L;
        onChanged();
        return this;
      }

      private long mACD1DayDEA_ ;
      /**
       * <code>optional int64 MACD1dayDEA = 306;</code>
       *
       * <pre>
       * MACD + 1day + DEA
       * </pre>
       */
      public boolean hasMACD1DayDEA() {
        return ((bitField6_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 MACD1dayDEA = 306;</code>
       *
       * <pre>
       * MACD + 1day + DEA
       * </pre>
       */
      public long getMACD1DayDEA() {
        return mACD1DayDEA_;
      }
      /**
       * <code>optional int64 MACD1dayDEA = 306;</code>
       *
       * <pre>
       * MACD + 1day + DEA
       * </pre>
       */
      public Builder setMACD1DayDEA(long value) {
        bitField6_ |= 0x00002000;
        mACD1DayDEA_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD1dayDEA = 306;</code>
       *
       * <pre>
       * MACD + 1day + DEA
       * </pre>
       */
      public Builder clearMACD1DayDEA() {
        bitField6_ = (bitField6_ & ~0x00002000);
        mACD1DayDEA_ = 0L;
        onChanged();
        return this;
      }

      private long mACD1DayMACD_ ;
      /**
       * <code>optional int64 MACD1dayMACD = 307;</code>
       *
       * <pre>
       * MACD + 1day + MACD
       * </pre>
       */
      public boolean hasMACD1DayMACD() {
        return ((bitField6_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 MACD1dayMACD = 307;</code>
       *
       * <pre>
       * MACD + 1day + MACD
       * </pre>
       */
      public long getMACD1DayMACD() {
        return mACD1DayMACD_;
      }
      /**
       * <code>optional int64 MACD1dayMACD = 307;</code>
       *
       * <pre>
       * MACD + 1day + MACD
       * </pre>
       */
      public Builder setMACD1DayMACD(long value) {
        bitField6_ |= 0x00004000;
        mACD1DayMACD_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MACD1dayMACD = 307;</code>
       *
       * <pre>
       * MACD + 1day + MACD
       * </pre>
       */
      public Builder clearMACD1DayMACD() {
        bitField6_ = (bitField6_ & ~0x00004000);
        mACD1DayMACD_ = 0L;
        onChanged();
        return this;
      }

      private long oBV1Min_ ;
      /**
       * <code>optional int64 OBV1min = 308;</code>
       *
       * <pre>
       * OBV
       * </pre>
       */
      public boolean hasOBV1Min() {
        return ((bitField6_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 OBV1min = 308;</code>
       *
       * <pre>
       * OBV
       * </pre>
       */
      public long getOBV1Min() {
        return oBV1Min_;
      }
      /**
       * <code>optional int64 OBV1min = 308;</code>
       *
       * <pre>
       * OBV
       * </pre>
       */
      public Builder setOBV1Min(long value) {
        bitField6_ |= 0x00008000;
        oBV1Min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 OBV1min = 308;</code>
       *
       * <pre>
       * OBV
       * </pre>
       */
      public Builder clearOBV1Min() {
        bitField6_ = (bitField6_ & ~0x00008000);
        oBV1Min_ = 0L;
        onChanged();
        return this;
      }

      private long oBV5Min_ ;
      /**
       * <code>optional int64 OBV5min = 309;</code>
       *
       * <pre>
       * OBV + 5min + _
       * </pre>
       */
      public boolean hasOBV5Min() {
        return ((bitField6_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 OBV5min = 309;</code>
       *
       * <pre>
       * OBV + 5min + _
       * </pre>
       */
      public long getOBV5Min() {
        return oBV5Min_;
      }
      /**
       * <code>optional int64 OBV5min = 309;</code>
       *
       * <pre>
       * OBV + 5min + _
       * </pre>
       */
      public Builder setOBV5Min(long value) {
        bitField6_ |= 0x00010000;
        oBV5Min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 OBV5min = 309;</code>
       *
       * <pre>
       * OBV + 5min + _
       * </pre>
       */
      public Builder clearOBV5Min() {
        bitField6_ = (bitField6_ & ~0x00010000);
        oBV5Min_ = 0L;
        onChanged();
        return this;
      }

      private long oBV1Day_ ;
      /**
       * <code>optional int64 OBV1day = 310;</code>
       *
       * <pre>
       * OBV + 1day + _
       * </pre>
       */
      public boolean hasOBV1Day() {
        return ((bitField6_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 OBV1day = 310;</code>
       *
       * <pre>
       * OBV + 1day + _
       * </pre>
       */
      public long getOBV1Day() {
        return oBV1Day_;
      }
      /**
       * <code>optional int64 OBV1day = 310;</code>
       *
       * <pre>
       * OBV + 1day + _
       * </pre>
       */
      public Builder setOBV1Day(long value) {
        bitField6_ |= 0x00020000;
        oBV1Day_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 OBV1day = 310;</code>
       *
       * <pre>
       * OBV + 1day + _
       * </pre>
       */
      public Builder clearOBV1Day() {
        bitField6_ = (bitField6_ & ~0x00020000);
        oBV1Day_ = 0L;
        onChanged();
        return this;
      }

      private long pSY1Min_ ;
      /**
       * <code>optional int64 PSY1min = 311;</code>
       *
       * <pre>
       * PSY
       * </pre>
       */
      public boolean hasPSY1Min() {
        return ((bitField6_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 PSY1min = 311;</code>
       *
       * <pre>
       * PSY
       * </pre>
       */
      public long getPSY1Min() {
        return pSY1Min_;
      }
      /**
       * <code>optional int64 PSY1min = 311;</code>
       *
       * <pre>
       * PSY
       * </pre>
       */
      public Builder setPSY1Min(long value) {
        bitField6_ |= 0x00040000;
        pSY1Min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 PSY1min = 311;</code>
       *
       * <pre>
       * PSY
       * </pre>
       */
      public Builder clearPSY1Min() {
        bitField6_ = (bitField6_ & ~0x00040000);
        pSY1Min_ = 0L;
        onChanged();
        return this;
      }

      private long pSY5Min_ ;
      /**
       * <code>optional int64 PSY5min = 312;</code>
       *
       * <pre>
       * PSY + 5min + _
       * </pre>
       */
      public boolean hasPSY5Min() {
        return ((bitField6_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 PSY5min = 312;</code>
       *
       * <pre>
       * PSY + 5min + _
       * </pre>
       */
      public long getPSY5Min() {
        return pSY5Min_;
      }
      /**
       * <code>optional int64 PSY5min = 312;</code>
       *
       * <pre>
       * PSY + 5min + _
       * </pre>
       */
      public Builder setPSY5Min(long value) {
        bitField6_ |= 0x00080000;
        pSY5Min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 PSY5min = 312;</code>
       *
       * <pre>
       * PSY + 5min + _
       * </pre>
       */
      public Builder clearPSY5Min() {
        bitField6_ = (bitField6_ & ~0x00080000);
        pSY5Min_ = 0L;
        onChanged();
        return this;
      }

      private long pSY1Day_ ;
      /**
       * <code>optional int64 PSY1day = 313;</code>
       *
       * <pre>
       * PSY + 1day + _
       * </pre>
       */
      public boolean hasPSY1Day() {
        return ((bitField6_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 PSY1day = 313;</code>
       *
       * <pre>
       * PSY + 1day + _
       * </pre>
       */
      public long getPSY1Day() {
        return pSY1Day_;
      }
      /**
       * <code>optional int64 PSY1day = 313;</code>
       *
       * <pre>
       * PSY + 1day + _
       * </pre>
       */
      public Builder setPSY1Day(long value) {
        bitField6_ |= 0x00100000;
        pSY1Day_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 PSY1day = 313;</code>
       *
       * <pre>
       * PSY + 1day + _
       * </pre>
       */
      public Builder clearPSY1Day() {
        bitField6_ = (bitField6_ & ~0x00100000);
        pSY1Day_ = 0L;
        onChanged();
        return this;
      }

      private long rSI1MinRSI1_ ;
      /**
       * <code>optional int64 RSI1minRSI1 = 314;</code>
       *
       * <pre>
       * RSI
       * </pre>
       */
      public boolean hasRSI1MinRSI1() {
        return ((bitField6_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 RSI1minRSI1 = 314;</code>
       *
       * <pre>
       * RSI
       * </pre>
       */
      public long getRSI1MinRSI1() {
        return rSI1MinRSI1_;
      }
      /**
       * <code>optional int64 RSI1minRSI1 = 314;</code>
       *
       * <pre>
       * RSI
       * </pre>
       */
      public Builder setRSI1MinRSI1(long value) {
        bitField6_ |= 0x00200000;
        rSI1MinRSI1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI1minRSI1 = 314;</code>
       *
       * <pre>
       * RSI
       * </pre>
       */
      public Builder clearRSI1MinRSI1() {
        bitField6_ = (bitField6_ & ~0x00200000);
        rSI1MinRSI1_ = 0L;
        onChanged();
        return this;
      }

      private long rSI1MinRSI2_ ;
      /**
       * <code>optional int64 RSI1minRSI2 = 315;</code>
       *
       * <pre>
       * RSI + 1min + RSI2
       * </pre>
       */
      public boolean hasRSI1MinRSI2() {
        return ((bitField6_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 RSI1minRSI2 = 315;</code>
       *
       * <pre>
       * RSI + 1min + RSI2
       * </pre>
       */
      public long getRSI1MinRSI2() {
        return rSI1MinRSI2_;
      }
      /**
       * <code>optional int64 RSI1minRSI2 = 315;</code>
       *
       * <pre>
       * RSI + 1min + RSI2
       * </pre>
       */
      public Builder setRSI1MinRSI2(long value) {
        bitField6_ |= 0x00400000;
        rSI1MinRSI2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI1minRSI2 = 315;</code>
       *
       * <pre>
       * RSI + 1min + RSI2
       * </pre>
       */
      public Builder clearRSI1MinRSI2() {
        bitField6_ = (bitField6_ & ~0x00400000);
        rSI1MinRSI2_ = 0L;
        onChanged();
        return this;
      }

      private long rSI1MinRSI3_ ;
      /**
       * <code>optional int64 RSI1minRSI3 = 316;</code>
       *
       * <pre>
       * RSI + 1min + RSI3
       * </pre>
       */
      public boolean hasRSI1MinRSI3() {
        return ((bitField6_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 RSI1minRSI3 = 316;</code>
       *
       * <pre>
       * RSI + 1min + RSI3
       * </pre>
       */
      public long getRSI1MinRSI3() {
        return rSI1MinRSI3_;
      }
      /**
       * <code>optional int64 RSI1minRSI3 = 316;</code>
       *
       * <pre>
       * RSI + 1min + RSI3
       * </pre>
       */
      public Builder setRSI1MinRSI3(long value) {
        bitField6_ |= 0x00800000;
        rSI1MinRSI3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI1minRSI3 = 316;</code>
       *
       * <pre>
       * RSI + 1min + RSI3
       * </pre>
       */
      public Builder clearRSI1MinRSI3() {
        bitField6_ = (bitField6_ & ~0x00800000);
        rSI1MinRSI3_ = 0L;
        onChanged();
        return this;
      }

      private long rSI5MinRSI1_ ;
      /**
       * <code>optional int64 RSI5minRSI1 = 317;</code>
       *
       * <pre>
       * RSI + 5min + RSI1
       * </pre>
       */
      public boolean hasRSI5MinRSI1() {
        return ((bitField6_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 RSI5minRSI1 = 317;</code>
       *
       * <pre>
       * RSI + 5min + RSI1
       * </pre>
       */
      public long getRSI5MinRSI1() {
        return rSI5MinRSI1_;
      }
      /**
       * <code>optional int64 RSI5minRSI1 = 317;</code>
       *
       * <pre>
       * RSI + 5min + RSI1
       * </pre>
       */
      public Builder setRSI5MinRSI1(long value) {
        bitField6_ |= 0x01000000;
        rSI5MinRSI1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI5minRSI1 = 317;</code>
       *
       * <pre>
       * RSI + 5min + RSI1
       * </pre>
       */
      public Builder clearRSI5MinRSI1() {
        bitField6_ = (bitField6_ & ~0x01000000);
        rSI5MinRSI1_ = 0L;
        onChanged();
        return this;
      }

      private long rSI5MinRSI2_ ;
      /**
       * <code>optional int64 RSI5minRSI2 = 318;</code>
       *
       * <pre>
       * RSI + 5min + RSI2
       * </pre>
       */
      public boolean hasRSI5MinRSI2() {
        return ((bitField6_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 RSI5minRSI2 = 318;</code>
       *
       * <pre>
       * RSI + 5min + RSI2
       * </pre>
       */
      public long getRSI5MinRSI2() {
        return rSI5MinRSI2_;
      }
      /**
       * <code>optional int64 RSI5minRSI2 = 318;</code>
       *
       * <pre>
       * RSI + 5min + RSI2
       * </pre>
       */
      public Builder setRSI5MinRSI2(long value) {
        bitField6_ |= 0x02000000;
        rSI5MinRSI2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI5minRSI2 = 318;</code>
       *
       * <pre>
       * RSI + 5min + RSI2
       * </pre>
       */
      public Builder clearRSI5MinRSI2() {
        bitField6_ = (bitField6_ & ~0x02000000);
        rSI5MinRSI2_ = 0L;
        onChanged();
        return this;
      }

      private long rSI5MinRSI3_ ;
      /**
       * <code>optional int64 RSI5minRSI3 = 319;</code>
       *
       * <pre>
       * RSI + 5min + RSI3
       * </pre>
       */
      public boolean hasRSI5MinRSI3() {
        return ((bitField6_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 RSI5minRSI3 = 319;</code>
       *
       * <pre>
       * RSI + 5min + RSI3
       * </pre>
       */
      public long getRSI5MinRSI3() {
        return rSI5MinRSI3_;
      }
      /**
       * <code>optional int64 RSI5minRSI3 = 319;</code>
       *
       * <pre>
       * RSI + 5min + RSI3
       * </pre>
       */
      public Builder setRSI5MinRSI3(long value) {
        bitField6_ |= 0x04000000;
        rSI5MinRSI3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI5minRSI3 = 319;</code>
       *
       * <pre>
       * RSI + 5min + RSI3
       * </pre>
       */
      public Builder clearRSI5MinRSI3() {
        bitField6_ = (bitField6_ & ~0x04000000);
        rSI5MinRSI3_ = 0L;
        onChanged();
        return this;
      }

      private long rSI1DayRSI1_ ;
      /**
       * <code>optional int64 RSI1dayRSI1 = 320;</code>
       *
       * <pre>
       * RSI + 1day + RSI1
       * </pre>
       */
      public boolean hasRSI1DayRSI1() {
        return ((bitField6_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 RSI1dayRSI1 = 320;</code>
       *
       * <pre>
       * RSI + 1day + RSI1
       * </pre>
       */
      public long getRSI1DayRSI1() {
        return rSI1DayRSI1_;
      }
      /**
       * <code>optional int64 RSI1dayRSI1 = 320;</code>
       *
       * <pre>
       * RSI + 1day + RSI1
       * </pre>
       */
      public Builder setRSI1DayRSI1(long value) {
        bitField6_ |= 0x08000000;
        rSI1DayRSI1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI1dayRSI1 = 320;</code>
       *
       * <pre>
       * RSI + 1day + RSI1
       * </pre>
       */
      public Builder clearRSI1DayRSI1() {
        bitField6_ = (bitField6_ & ~0x08000000);
        rSI1DayRSI1_ = 0L;
        onChanged();
        return this;
      }

      private long rSI1DayRSI2_ ;
      /**
       * <code>optional int64 RSI1dayRSI2 = 321;</code>
       *
       * <pre>
       * RSI + 1day + RSI2
       * </pre>
       */
      public boolean hasRSI1DayRSI2() {
        return ((bitField6_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 RSI1dayRSI2 = 321;</code>
       *
       * <pre>
       * RSI + 1day + RSI2
       * </pre>
       */
      public long getRSI1DayRSI2() {
        return rSI1DayRSI2_;
      }
      /**
       * <code>optional int64 RSI1dayRSI2 = 321;</code>
       *
       * <pre>
       * RSI + 1day + RSI2
       * </pre>
       */
      public Builder setRSI1DayRSI2(long value) {
        bitField6_ |= 0x10000000;
        rSI1DayRSI2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI1dayRSI2 = 321;</code>
       *
       * <pre>
       * RSI + 1day + RSI2
       * </pre>
       */
      public Builder clearRSI1DayRSI2() {
        bitField6_ = (bitField6_ & ~0x10000000);
        rSI1DayRSI2_ = 0L;
        onChanged();
        return this;
      }

      private long rSI1DayRSI3_ ;
      /**
       * <code>optional int64 RSI1dayRSI3 = 322;</code>
       *
       * <pre>
       * RSI + 1day + RSI3
       * </pre>
       */
      public boolean hasRSI1DayRSI3() {
        return ((bitField6_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 RSI1dayRSI3 = 322;</code>
       *
       * <pre>
       * RSI + 1day + RSI3
       * </pre>
       */
      public long getRSI1DayRSI3() {
        return rSI1DayRSI3_;
      }
      /**
       * <code>optional int64 RSI1dayRSI3 = 322;</code>
       *
       * <pre>
       * RSI + 1day + RSI3
       * </pre>
       */
      public Builder setRSI1DayRSI3(long value) {
        bitField6_ |= 0x20000000;
        rSI1DayRSI3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 RSI1dayRSI3 = 322;</code>
       *
       * <pre>
       * RSI + 1day + RSI3
       * </pre>
       */
      public Builder clearRSI1DayRSI3() {
        bitField6_ = (bitField6_ & ~0x20000000);
        rSI1DayRSI3_ = 0L;
        onChanged();
        return this;
      }

      private long wR1MinWR1_ ;
      /**
       * <code>optional int64 WR1minWR1 = 323;</code>
       *
       * <pre>
       * WR
       * </pre>
       */
      public boolean hasWR1MinWR1() {
        return ((bitField6_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 WR1minWR1 = 323;</code>
       *
       * <pre>
       * WR
       * </pre>
       */
      public long getWR1MinWR1() {
        return wR1MinWR1_;
      }
      /**
       * <code>optional int64 WR1minWR1 = 323;</code>
       *
       * <pre>
       * WR
       * </pre>
       */
      public Builder setWR1MinWR1(long value) {
        bitField6_ |= 0x40000000;
        wR1MinWR1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WR1minWR1 = 323;</code>
       *
       * <pre>
       * WR
       * </pre>
       */
      public Builder clearWR1MinWR1() {
        bitField6_ = (bitField6_ & ~0x40000000);
        wR1MinWR1_ = 0L;
        onChanged();
        return this;
      }

      private long wR1MinWR2_ ;
      /**
       * <code>optional int64 WR1minWR2 = 324;</code>
       *
       * <pre>
       * WR + 1min + WR2
       * </pre>
       */
      public boolean hasWR1MinWR2() {
        return ((bitField6_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 WR1minWR2 = 324;</code>
       *
       * <pre>
       * WR + 1min + WR2
       * </pre>
       */
      public long getWR1MinWR2() {
        return wR1MinWR2_;
      }
      /**
       * <code>optional int64 WR1minWR2 = 324;</code>
       *
       * <pre>
       * WR + 1min + WR2
       * </pre>
       */
      public Builder setWR1MinWR2(long value) {
        bitField6_ |= 0x80000000;
        wR1MinWR2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WR1minWR2 = 324;</code>
       *
       * <pre>
       * WR + 1min + WR2
       * </pre>
       */
      public Builder clearWR1MinWR2() {
        bitField6_ = (bitField6_ & ~0x80000000);
        wR1MinWR2_ = 0L;
        onChanged();
        return this;
      }

      private long wR5MinWR1_ ;
      /**
       * <code>optional int64 WR5minWR1 = 325;</code>
       *
       * <pre>
       * WR + 5min + WR1
       * </pre>
       */
      public boolean hasWR5MinWR1() {
        return ((bitField7_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 WR5minWR1 = 325;</code>
       *
       * <pre>
       * WR + 5min + WR1
       * </pre>
       */
      public long getWR5MinWR1() {
        return wR5MinWR1_;
      }
      /**
       * <code>optional int64 WR5minWR1 = 325;</code>
       *
       * <pre>
       * WR + 5min + WR1
       * </pre>
       */
      public Builder setWR5MinWR1(long value) {
        bitField7_ |= 0x00000001;
        wR5MinWR1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WR5minWR1 = 325;</code>
       *
       * <pre>
       * WR + 5min + WR1
       * </pre>
       */
      public Builder clearWR5MinWR1() {
        bitField7_ = (bitField7_ & ~0x00000001);
        wR5MinWR1_ = 0L;
        onChanged();
        return this;
      }

      private long wR5MinWR2_ ;
      /**
       * <code>optional int64 WR5minWR2 = 326;</code>
       *
       * <pre>
       * WR + 5min + WR2
       * </pre>
       */
      public boolean hasWR5MinWR2() {
        return ((bitField7_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 WR5minWR2 = 326;</code>
       *
       * <pre>
       * WR + 5min + WR2
       * </pre>
       */
      public long getWR5MinWR2() {
        return wR5MinWR2_;
      }
      /**
       * <code>optional int64 WR5minWR2 = 326;</code>
       *
       * <pre>
       * WR + 5min + WR2
       * </pre>
       */
      public Builder setWR5MinWR2(long value) {
        bitField7_ |= 0x00000002;
        wR5MinWR2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WR5minWR2 = 326;</code>
       *
       * <pre>
       * WR + 5min + WR2
       * </pre>
       */
      public Builder clearWR5MinWR2() {
        bitField7_ = (bitField7_ & ~0x00000002);
        wR5MinWR2_ = 0L;
        onChanged();
        return this;
      }

      private long wR1DayWR1_ ;
      /**
       * <code>optional int64 WR1dayWR1 = 327;</code>
       *
       * <pre>
       * WR + 1day + WR1
       * </pre>
       */
      public boolean hasWR1DayWR1() {
        return ((bitField7_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 WR1dayWR1 = 327;</code>
       *
       * <pre>
       * WR + 1day + WR1
       * </pre>
       */
      public long getWR1DayWR1() {
        return wR1DayWR1_;
      }
      /**
       * <code>optional int64 WR1dayWR1 = 327;</code>
       *
       * <pre>
       * WR + 1day + WR1
       * </pre>
       */
      public Builder setWR1DayWR1(long value) {
        bitField7_ |= 0x00000004;
        wR1DayWR1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WR1dayWR1 = 327;</code>
       *
       * <pre>
       * WR + 1day + WR1
       * </pre>
       */
      public Builder clearWR1DayWR1() {
        bitField7_ = (bitField7_ & ~0x00000004);
        wR1DayWR1_ = 0L;
        onChanged();
        return this;
      }

      private long wR1DayWR2_ ;
      /**
       * <code>optional int64 WR1dayWR2 = 328;</code>
       *
       * <pre>
       * WR + 1day + WR2
       * </pre>
       */
      public boolean hasWR1DayWR2() {
        return ((bitField7_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 WR1dayWR2 = 328;</code>
       *
       * <pre>
       * WR + 1day + WR2
       * </pre>
       */
      public long getWR1DayWR2() {
        return wR1DayWR2_;
      }
      /**
       * <code>optional int64 WR1dayWR2 = 328;</code>
       *
       * <pre>
       * WR + 1day + WR2
       * </pre>
       */
      public Builder setWR1DayWR2(long value) {
        bitField7_ |= 0x00000008;
        wR1DayWR2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WR1dayWR2 = 328;</code>
       *
       * <pre>
       * WR + 1day + WR2
       * </pre>
       */
      public Builder clearWR1DayWR2() {
        bitField7_ = (bitField7_ & ~0x00000008);
        wR1DayWR2_ = 0L;
        onChanged();
        return this;
      }

      private long leiXing_ ;
      /**
       * <code>optional int64 LeiXing = 400;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public boolean hasLeiXing() {
        return ((bitField7_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 LeiXing = 400;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public long getLeiXing() {
        return leiXing_;
      }
      /**
       * <code>optional int64 LeiXing = 400;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public Builder setLeiXing(long value) {
        bitField7_ |= 0x00000010;
        leiXing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LeiXing = 400;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public Builder clearLeiXing() {
        bitField7_ = (bitField7_ & ~0x00000010);
        leiXing_ = 0L;
        onChanged();
        return this;
      }

      private long ziLeiXing_ ;
      /**
       * <code>optional int64 ZiLeiXing = 401;</code>
       *
       * <pre>
       * 子类型
       * </pre>
       */
      public boolean hasZiLeiXing() {
        return ((bitField7_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 ZiLeiXing = 401;</code>
       *
       * <pre>
       * 子类型
       * </pre>
       */
      public long getZiLeiXing() {
        return ziLeiXing_;
      }
      /**
       * <code>optional int64 ZiLeiXing = 401;</code>
       *
       * <pre>
       * 子类型
       * </pre>
       */
      public Builder setZiLeiXing(long value) {
        bitField7_ |= 0x00000020;
        ziLeiXing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZiLeiXing = 401;</code>
       *
       * <pre>
       * 子类型
       * </pre>
       */
      public Builder clearZiLeiXing() {
        bitField7_ = (bitField7_ & ~0x00000020);
        ziLeiXing_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object leiXingMingCheng_ = "";
      /**
       * <code>optional string LeiXingMingCheng = 402;</code>
       *
       * <pre>
       * 类型名称
       * </pre>
       */
      public boolean hasLeiXingMingCheng() {
        return ((bitField7_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string LeiXingMingCheng = 402;</code>
       *
       * <pre>
       * 类型名称
       * </pre>
       */
      public java.lang.String getLeiXingMingCheng() {
        java.lang.Object ref = leiXingMingCheng_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            leiXingMingCheng_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string LeiXingMingCheng = 402;</code>
       *
       * <pre>
       * 类型名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLeiXingMingChengBytes() {
        java.lang.Object ref = leiXingMingCheng_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          leiXingMingCheng_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string LeiXingMingCheng = 402;</code>
       *
       * <pre>
       * 类型名称
       * </pre>
       */
      public Builder setLeiXingMingCheng(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField7_ |= 0x00000040;
        leiXingMingCheng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string LeiXingMingCheng = 402;</code>
       *
       * <pre>
       * 类型名称
       * </pre>
       */
      public Builder clearLeiXingMingCheng() {
        bitField7_ = (bitField7_ & ~0x00000040);
        leiXingMingCheng_ = getDefaultInstance().getLeiXingMingCheng();
        onChanged();
        return this;
      }
      /**
       * <code>optional string LeiXingMingCheng = 402;</code>
       *
       * <pre>
       * 类型名称
       * </pre>
       */
      public Builder setLeiXingMingChengBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField7_ |= 0x00000040;
        leiXingMingCheng_ = value;
        onChanged();
        return this;
      }

      private long chengJiaoLiangDanWei_ ;
      /**
       * <code>optional int64 ChengJiaoLiangDanWei = 403;</code>
       *
       * <pre>
       * 成交量单位
       * </pre>
       */
      public boolean hasChengJiaoLiangDanWei() {
        return ((bitField7_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 ChengJiaoLiangDanWei = 403;</code>
       *
       * <pre>
       * 成交量单位
       * </pre>
       */
      public long getChengJiaoLiangDanWei() {
        return chengJiaoLiangDanWei_;
      }
      /**
       * <code>optional int64 ChengJiaoLiangDanWei = 403;</code>
       *
       * <pre>
       * 成交量单位
       * </pre>
       */
      public Builder setChengJiaoLiangDanWei(long value) {
        bitField7_ |= 0x00000080;
        chengJiaoLiangDanWei_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChengJiaoLiangDanWei = 403;</code>
       *
       * <pre>
       * 成交量单位
       * </pre>
       */
      public Builder clearChengJiaoLiangDanWei() {
        bitField7_ = (bitField7_ & ~0x00000080);
        chengJiaoLiangDanWei_ = 0L;
        onChanged();
        return this;
      }

      private long fJJJLeiXing_ ;
      /**
       * <code>optional int64 FJJJLeiXing = 501;</code>
       *
       * <pre>
       * 分级基金
       * </pre>
       */
      public boolean hasFJJJLeiXing() {
        return ((bitField7_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 FJJJLeiXing = 501;</code>
       *
       * <pre>
       * 分级基金
       * </pre>
       */
      public long getFJJJLeiXing() {
        return fJJJLeiXing_;
      }
      /**
       * <code>optional int64 FJJJLeiXing = 501;</code>
       *
       * <pre>
       * 分级基金
       * </pre>
       */
      public Builder setFJJJLeiXing(long value) {
        bitField7_ |= 0x00000100;
        fJJJLeiXing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 FJJJLeiXing = 501;</code>
       *
       * <pre>
       * 分级基金
       * </pre>
       */
      public Builder clearFJJJLeiXing() {
        bitField7_ = (bitField7_ & ~0x00000100);
        fJJJLeiXing_ = 0L;
        onChanged();
        return this;
      }

      private long zhengTiYiJia_ ;
      /**
       * <code>optional int64 ZhengTiYiJia = 502;</code>
       *
       * <pre>
       * 整体溢价
       * </pre>
       */
      public boolean hasZhengTiYiJia() {
        return ((bitField7_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 ZhengTiYiJia = 502;</code>
       *
       * <pre>
       * 整体溢价
       * </pre>
       */
      public long getZhengTiYiJia() {
        return zhengTiYiJia_;
      }
      /**
       * <code>optional int64 ZhengTiYiJia = 502;</code>
       *
       * <pre>
       * 整体溢价
       * </pre>
       */
      public Builder setZhengTiYiJia(long value) {
        bitField7_ |= 0x00000200;
        zhengTiYiJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhengTiYiJia = 502;</code>
       *
       * <pre>
       * 整体溢价
       * </pre>
       */
      public Builder clearZhengTiYiJia() {
        bitField7_ = (bitField7_ & ~0x00000200);
        zhengTiYiJia_ = 0L;
        onChanged();
        return this;
      }

      private long mYiJia_ ;
      /**
       * <code>optional int64 MYiJia = 551;</code>
       *
       * <pre>
       *母基金溢价
       * </pre>
       */
      public boolean hasMYiJia() {
        return ((bitField7_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 MYiJia = 551;</code>
       *
       * <pre>
       *母基金溢价
       * </pre>
       */
      public long getMYiJia() {
        return mYiJia_;
      }
      /**
       * <code>optional int64 MYiJia = 551;</code>
       *
       * <pre>
       *母基金溢价
       * </pre>
       */
      public Builder setMYiJia(long value) {
        bitField7_ |= 0x00000400;
        mYiJia_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MYiJia = 551;</code>
       *
       * <pre>
       *母基金溢价
       * </pre>
       */
      public Builder clearMYiJia() {
        bitField7_ = (bitField7_ & ~0x00000400);
        mYiJia_ = 0L;
        onChanged();
        return this;
      }

      private long mShiShiJingZhi_ ;
      /**
       * <code>optional int64 MShiShiJingZhi = 552;</code>
       *
       * <pre>
       * 母基金实时净值
       * </pre>
       */
      public boolean hasMShiShiJingZhi() {
        return ((bitField7_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 MShiShiJingZhi = 552;</code>
       *
       * <pre>
       * 母基金实时净值
       * </pre>
       */
      public long getMShiShiJingZhi() {
        return mShiShiJingZhi_;
      }
      /**
       * <code>optional int64 MShiShiJingZhi = 552;</code>
       *
       * <pre>
       * 母基金实时净值
       * </pre>
       */
      public Builder setMShiShiJingZhi(long value) {
        bitField7_ |= 0x00000800;
        mShiShiJingZhi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MShiShiJingZhi = 552;</code>
       *
       * <pre>
       * 母基金实时净值
       * </pre>
       */
      public Builder clearMShiShiJingZhi() {
        bitField7_ = (bitField7_ & ~0x00000800);
        mShiShiJingZhi_ = 0L;
        onChanged();
        return this;
      }

      private long mShangZheXuZhang_ ;
      /**
       * <code>optional int64 MShangZheXuZhang = 553;</code>
       *
       * <pre>
       * 上折母基需涨
       * </pre>
       */
      public boolean hasMShangZheXuZhang() {
        return ((bitField7_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 MShangZheXuZhang = 553;</code>
       *
       * <pre>
       * 上折母基需涨
       * </pre>
       */
      public long getMShangZheXuZhang() {
        return mShangZheXuZhang_;
      }
      /**
       * <code>optional int64 MShangZheXuZhang = 553;</code>
       *
       * <pre>
       * 上折母基需涨
       * </pre>
       */
      public Builder setMShangZheXuZhang(long value) {
        bitField7_ |= 0x00001000;
        mShangZheXuZhang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MShangZheXuZhang = 553;</code>
       *
       * <pre>
       * 上折母基需涨
       * </pre>
       */
      public Builder clearMShangZheXuZhang() {
        bitField7_ = (bitField7_ & ~0x00001000);
        mShangZheXuZhang_ = 0L;
        onChanged();
        return this;
      }

      private long mXiaZheXuDie_ ;
      /**
       * <code>optional int64 MXiaZheXuDie = 554;</code>
       *
       * <pre>
       * 下折母基需跌
       * </pre>
       */
      public boolean hasMXiaZheXuDie() {
        return ((bitField7_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 MXiaZheXuDie = 554;</code>
       *
       * <pre>
       * 下折母基需跌
       * </pre>
       */
      public long getMXiaZheXuDie() {
        return mXiaZheXuDie_;
      }
      /**
       * <code>optional int64 MXiaZheXuDie = 554;</code>
       *
       * <pre>
       * 下折母基需跌
       * </pre>
       */
      public Builder setMXiaZheXuDie(long value) {
        bitField7_ |= 0x00002000;
        mXiaZheXuDie_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MXiaZheXuDie = 554;</code>
       *
       * <pre>
       * 下折母基需跌
       * </pre>
       */
      public Builder clearMXiaZheXuDie() {
        bitField7_ = (bitField7_ & ~0x00002000);
        mXiaZheXuDie_ = 0L;
        onChanged();
        return this;
      }

      private long yinHanShouYi_ ;
      /**
       * <code>optional int64 YinHanShouYi = 511;</code>
       *
       * <pre>
       * 隐含收益，仅A基金
       * </pre>
       */
      public boolean hasYinHanShouYi() {
        return ((bitField7_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 YinHanShouYi = 511;</code>
       *
       * <pre>
       * 隐含收益，仅A基金
       * </pre>
       */
      public long getYinHanShouYi() {
        return yinHanShouYi_;
      }
      /**
       * <code>optional int64 YinHanShouYi = 511;</code>
       *
       * <pre>
       * 隐含收益，仅A基金
       * </pre>
       */
      public Builder setYinHanShouYi(long value) {
        bitField7_ |= 0x00004000;
        yinHanShouYi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 YinHanShouYi = 511;</code>
       *
       * <pre>
       * 隐含收益，仅A基金
       * </pre>
       */
      public Builder clearYinHanShouYi() {
        bitField7_ = (bitField7_ & ~0x00004000);
        yinHanShouYi_ = 0L;
        onChanged();
        return this;
      }

      private long jiaGeGangGan_ ;
      /**
       * <code>optional int64 JiaGeGangGan = 512;</code>
       *
       * <pre>
       * 价格杠杆，仅B基金
       * </pre>
       */
      public boolean hasJiaGeGangGan() {
        return ((bitField7_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 JiaGeGangGan = 512;</code>
       *
       * <pre>
       * 价格杠杆，仅B基金
       * </pre>
       */
      public long getJiaGeGangGan() {
        return jiaGeGangGan_;
      }
      /**
       * <code>optional int64 JiaGeGangGan = 512;</code>
       *
       * <pre>
       * 价格杠杆，仅B基金
       * </pre>
       */
      public Builder setJiaGeGangGan(long value) {
        bitField7_ |= 0x00008000;
        jiaGeGangGan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JiaGeGangGan = 512;</code>
       *
       * <pre>
       * 价格杠杆，仅B基金
       * </pre>
       */
      public Builder clearJiaGeGangGan() {
        bitField7_ = (bitField7_ & ~0x00008000);
        jiaGeGangGan_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object pinZhongObj_ = "";
      /**
       * <code>optional string PinZhongObj = 601;</code>
       *
       * <pre>
       *财务数据
       * </pre>
       */
      public boolean hasPinZhongObj() {
        return ((bitField7_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string PinZhongObj = 601;</code>
       *
       * <pre>
       *财务数据
       * </pre>
       */
      public java.lang.String getPinZhongObj() {
        java.lang.Object ref = pinZhongObj_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pinZhongObj_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string PinZhongObj = 601;</code>
       *
       * <pre>
       *财务数据
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPinZhongObjBytes() {
        java.lang.Object ref = pinZhongObj_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pinZhongObj_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string PinZhongObj = 601;</code>
       *
       * <pre>
       *财务数据
       * </pre>
       */
      public Builder setPinZhongObj(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField7_ |= 0x00010000;
        pinZhongObj_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string PinZhongObj = 601;</code>
       *
       * <pre>
       *财务数据
       * </pre>
       */
      public Builder clearPinZhongObj() {
        bitField7_ = (bitField7_ & ~0x00010000);
        pinZhongObj_ = getDefaultInstance().getPinZhongObj();
        onChanged();
        return this;
      }
      /**
       * <code>optional string PinZhongObj = 601;</code>
       *
       * <pre>
       *财务数据
       * </pre>
       */
      public Builder setPinZhongObjBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField7_ |= 0x00010000;
        pinZhongObj_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object baoGaoQi_ = "";
      /**
       * <code>optional string BaoGaoQi = 602;</code>
       *
       * <pre>
       * 报告期YYYYMMDDttmmss EndDate
       * </pre>
       */
      public boolean hasBaoGaoQi() {
        return ((bitField7_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string BaoGaoQi = 602;</code>
       *
       * <pre>
       * 报告期YYYYMMDDttmmss EndDate
       * </pre>
       */
      public java.lang.String getBaoGaoQi() {
        java.lang.Object ref = baoGaoQi_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            baoGaoQi_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string BaoGaoQi = 602;</code>
       *
       * <pre>
       * 报告期YYYYMMDDttmmss EndDate
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBaoGaoQiBytes() {
        java.lang.Object ref = baoGaoQi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          baoGaoQi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string BaoGaoQi = 602;</code>
       *
       * <pre>
       * 报告期YYYYMMDDttmmss EndDate
       * </pre>
       */
      public Builder setBaoGaoQi(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField7_ |= 0x00020000;
        baoGaoQi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string BaoGaoQi = 602;</code>
       *
       * <pre>
       * 报告期YYYYMMDDttmmss EndDate
       * </pre>
       */
      public Builder clearBaoGaoQi() {
        bitField7_ = (bitField7_ & ~0x00020000);
        baoGaoQi_ = getDefaultInstance().getBaoGaoQi();
        onChanged();
        return this;
      }
      /**
       * <code>optional string BaoGaoQi = 602;</code>
       *
       * <pre>
       * 报告期YYYYMMDDttmmss EndDate
       * </pre>
       */
      public Builder setBaoGaoQiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField7_ |= 0x00020000;
        baoGaoQi_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object shangShiRiQi_ = "";
      /**
       * <code>optional string ShangShiRiQi = 603;</code>
       *
       * <pre>
       * 上市日期YYYYMMDDttmmss C35
       * </pre>
       */
      public boolean hasShangShiRiQi() {
        return ((bitField7_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string ShangShiRiQi = 603;</code>
       *
       * <pre>
       * 上市日期YYYYMMDDttmmss C35
       * </pre>
       */
      public java.lang.String getShangShiRiQi() {
        java.lang.Object ref = shangShiRiQi_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            shangShiRiQi_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ShangShiRiQi = 603;</code>
       *
       * <pre>
       * 上市日期YYYYMMDDttmmss C35
       * </pre>
       */
      public com.google.protobuf.ByteString
          getShangShiRiQiBytes() {
        java.lang.Object ref = shangShiRiQi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shangShiRiQi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ShangShiRiQi = 603;</code>
       *
       * <pre>
       * 上市日期YYYYMMDDttmmss C35
       * </pre>
       */
      public Builder setShangShiRiQi(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField7_ |= 0x00040000;
        shangShiRiQi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ShangShiRiQi = 603;</code>
       *
       * <pre>
       * 上市日期YYYYMMDDttmmss C35
       * </pre>
       */
      public Builder clearShangShiRiQi() {
        bitField7_ = (bitField7_ & ~0x00040000);
        shangShiRiQi_ = getDefaultInstance().getShangShiRiQi();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ShangShiRiQi = 603;</code>
       *
       * <pre>
       * 上市日期YYYYMMDDttmmss C35
       * </pre>
       */
      public Builder setShangShiRiQiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField7_ |= 0x00040000;
        shangShiRiQi_ = value;
        onChanged();
        return this;
      }

      private long meiGuShouYi_ ;
      /**
       * <code>optional int64 MeiGuShouYi = 604;</code>
       *
       * <pre>
       * 每股收益 C3   
       * </pre>
       */
      public boolean hasMeiGuShouYi() {
        return ((bitField7_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 MeiGuShouYi = 604;</code>
       *
       * <pre>
       * 每股收益 C3   
       * </pre>
       */
      public long getMeiGuShouYi() {
        return meiGuShouYi_;
      }
      /**
       * <code>optional int64 MeiGuShouYi = 604;</code>
       *
       * <pre>
       * 每股收益 C3   
       * </pre>
       */
      public Builder setMeiGuShouYi(long value) {
        bitField7_ |= 0x00080000;
        meiGuShouYi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MeiGuShouYi = 604;</code>
       *
       * <pre>
       * 每股收益 C3   
       * </pre>
       */
      public Builder clearMeiGuShouYi() {
        bitField7_ = (bitField7_ & ~0x00080000);
        meiGuShouYi_ = 0L;
        onChanged();
        return this;
      }

      private long meiGuJingZiChan_ ;
      /**
       * <code>optional int64 MeiGuJingZiChan = 605;</code>
       *
       * <pre>
       * 每股净资产 C4
       * </pre>
       */
      public boolean hasMeiGuJingZiChan() {
        return ((bitField7_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 MeiGuJingZiChan = 605;</code>
       *
       * <pre>
       * 每股净资产 C4
       * </pre>
       */
      public long getMeiGuJingZiChan() {
        return meiGuJingZiChan_;
      }
      /**
       * <code>optional int64 MeiGuJingZiChan = 605;</code>
       *
       * <pre>
       * 每股净资产 C4
       * </pre>
       */
      public Builder setMeiGuJingZiChan(long value) {
        bitField7_ |= 0x00100000;
        meiGuJingZiChan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MeiGuJingZiChan = 605;</code>
       *
       * <pre>
       * 每股净资产 C4
       * </pre>
       */
      public Builder clearMeiGuJingZiChan() {
        bitField7_ = (bitField7_ & ~0x00100000);
        meiGuJingZiChan_ = 0L;
        onChanged();
        return this;
      }

      private long jingZiChanShouYiLv_ ;
      /**
       * <code>optional int64 JingZiChanShouYiLv = 606;</code>
       *
       * <pre>
       * 净资产收益率 C5
       * </pre>
       */
      public boolean hasJingZiChanShouYiLv() {
        return ((bitField7_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 JingZiChanShouYiLv = 606;</code>
       *
       * <pre>
       * 净资产收益率 C5
       * </pre>
       */
      public long getJingZiChanShouYiLv() {
        return jingZiChanShouYiLv_;
      }
      /**
       * <code>optional int64 JingZiChanShouYiLv = 606;</code>
       *
       * <pre>
       * 净资产收益率 C5
       * </pre>
       */
      public Builder setJingZiChanShouYiLv(long value) {
        bitField7_ |= 0x00200000;
        jingZiChanShouYiLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingZiChanShouYiLv = 606;</code>
       *
       * <pre>
       * 净资产收益率 C5
       * </pre>
       */
      public Builder clearJingZiChanShouYiLv() {
        bitField7_ = (bitField7_ & ~0x00200000);
        jingZiChanShouYiLv_ = 0L;
        onChanged();
        return this;
      }

      private long meiGuJingYingXianJin_ ;
      /**
       * <code>optional int64 MeiGuJingYingXianJin = 607;</code>
       *
       * <pre>
       * 每股经营现金 C6
       * </pre>
       */
      public boolean hasMeiGuJingYingXianJin() {
        return ((bitField7_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 MeiGuJingYingXianJin = 607;</code>
       *
       * <pre>
       * 每股经营现金 C6
       * </pre>
       */
      public long getMeiGuJingYingXianJin() {
        return meiGuJingYingXianJin_;
      }
      /**
       * <code>optional int64 MeiGuJingYingXianJin = 607;</code>
       *
       * <pre>
       * 每股经营现金 C6
       * </pre>
       */
      public Builder setMeiGuJingYingXianJin(long value) {
        bitField7_ |= 0x00400000;
        meiGuJingYingXianJin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MeiGuJingYingXianJin = 607;</code>
       *
       * <pre>
       * 每股经营现金 C6
       * </pre>
       */
      public Builder clearMeiGuJingYingXianJin() {
        bitField7_ = (bitField7_ & ~0x00400000);
        meiGuJingYingXianJin_ = 0L;
        onChanged();
        return this;
      }

      private long meiGuGongJiJin_ ;
      /**
       * <code>optional int64 MeiGuGongJiJin = 608;</code>
       *
       * <pre>
       * 每股公积金 C7
       * </pre>
       */
      public boolean hasMeiGuGongJiJin() {
        return ((bitField7_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 MeiGuGongJiJin = 608;</code>
       *
       * <pre>
       * 每股公积金 C7
       * </pre>
       */
      public long getMeiGuGongJiJin() {
        return meiGuGongJiJin_;
      }
      /**
       * <code>optional int64 MeiGuGongJiJin = 608;</code>
       *
       * <pre>
       * 每股公积金 C7
       * </pre>
       */
      public Builder setMeiGuGongJiJin(long value) {
        bitField7_ |= 0x00800000;
        meiGuGongJiJin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MeiGuGongJiJin = 608;</code>
       *
       * <pre>
       * 每股公积金 C7
       * </pre>
       */
      public Builder clearMeiGuGongJiJin() {
        bitField7_ = (bitField7_ & ~0x00800000);
        meiGuGongJiJin_ = 0L;
        onChanged();
        return this;
      }

      private long meiGuWeiFenPei_ ;
      /**
       * <code>optional int64 MeiGuWeiFenPei = 609;</code>
       *
       * <pre>
       * 每股未分配 C8   
       * </pre>
       */
      public boolean hasMeiGuWeiFenPei() {
        return ((bitField7_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 MeiGuWeiFenPei = 609;</code>
       *
       * <pre>
       * 每股未分配 C8   
       * </pre>
       */
      public long getMeiGuWeiFenPei() {
        return meiGuWeiFenPei_;
      }
      /**
       * <code>optional int64 MeiGuWeiFenPei = 609;</code>
       *
       * <pre>
       * 每股未分配 C8   
       * </pre>
       */
      public Builder setMeiGuWeiFenPei(long value) {
        bitField7_ |= 0x01000000;
        meiGuWeiFenPei_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MeiGuWeiFenPei = 609;</code>
       *
       * <pre>
       * 每股未分配 C8   
       * </pre>
       */
      public Builder clearMeiGuWeiFenPei() {
        bitField7_ = (bitField7_ & ~0x01000000);
        meiGuWeiFenPei_ = 0L;
        onChanged();
        return this;
      }

      private long guDongQuanYiBi_ ;
      /**
       * <code>optional int64 GuDongQuanYiBi = 610;</code>
       *
       * <pre>
       * 股东权益比 C9
       * </pre>
       */
      public boolean hasGuDongQuanYiBi() {
        return ((bitField7_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 GuDongQuanYiBi = 610;</code>
       *
       * <pre>
       * 股东权益比 C9
       * </pre>
       */
      public long getGuDongQuanYiBi() {
        return guDongQuanYiBi_;
      }
      /**
       * <code>optional int64 GuDongQuanYiBi = 610;</code>
       *
       * <pre>
       * 股东权益比 C9
       * </pre>
       */
      public Builder setGuDongQuanYiBi(long value) {
        bitField7_ |= 0x02000000;
        guDongQuanYiBi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 GuDongQuanYiBi = 610;</code>
       *
       * <pre>
       * 股东权益比 C9
       * </pre>
       */
      public Builder clearGuDongQuanYiBi() {
        bitField7_ = (bitField7_ & ~0x02000000);
        guDongQuanYiBi_ = 0L;
        onChanged();
        return this;
      }

      private long jingLiRunTongBi_ ;
      /**
       * <code>optional int64 JingLiRunTongBi = 611;</code>
       *
       * <pre>
       * 净利润同比 C10  
       * </pre>
       */
      public boolean hasJingLiRunTongBi() {
        return ((bitField7_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 JingLiRunTongBi = 611;</code>
       *
       * <pre>
       * 净利润同比 C10  
       * </pre>
       */
      public long getJingLiRunTongBi() {
        return jingLiRunTongBi_;
      }
      /**
       * <code>optional int64 JingLiRunTongBi = 611;</code>
       *
       * <pre>
       * 净利润同比 C10  
       * </pre>
       */
      public Builder setJingLiRunTongBi(long value) {
        bitField7_ |= 0x04000000;
        jingLiRunTongBi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingLiRunTongBi = 611;</code>
       *
       * <pre>
       * 净利润同比 C10  
       * </pre>
       */
      public Builder clearJingLiRunTongBi() {
        bitField7_ = (bitField7_ & ~0x04000000);
        jingLiRunTongBi_ = 0L;
        onChanged();
        return this;
      }

      private long zhuYingShouRuTongBi_ ;
      /**
       * <code>optional int64 ZhuYingShouRuTongBi = 612;</code>
       *
       * <pre>
       * 主营收入同比 C11  
       * </pre>
       */
      public boolean hasZhuYingShouRuTongBi() {
        return ((bitField7_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 ZhuYingShouRuTongBi = 612;</code>
       *
       * <pre>
       * 主营收入同比 C11  
       * </pre>
       */
      public long getZhuYingShouRuTongBi() {
        return zhuYingShouRuTongBi_;
      }
      /**
       * <code>optional int64 ZhuYingShouRuTongBi = 612;</code>
       *
       * <pre>
       * 主营收入同比 C11  
       * </pre>
       */
      public Builder setZhuYingShouRuTongBi(long value) {
        bitField7_ |= 0x08000000;
        zhuYingShouRuTongBi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhuYingShouRuTongBi = 612;</code>
       *
       * <pre>
       * 主营收入同比 C11  
       * </pre>
       */
      public Builder clearZhuYingShouRuTongBi() {
        bitField7_ = (bitField7_ & ~0x08000000);
        zhuYingShouRuTongBi_ = 0L;
        onChanged();
        return this;
      }

      private long xiaoShouMaoLiLv_ ;
      /**
       * <code>optional int64 XiaoShouMaoLiLv = 613;</code>
       *
       * <pre>
       * 销售毛利率 C12
       * </pre>
       */
      public boolean hasXiaoShouMaoLiLv() {
        return ((bitField7_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 XiaoShouMaoLiLv = 613;</code>
       *
       * <pre>
       * 销售毛利率 C12
       * </pre>
       */
      public long getXiaoShouMaoLiLv() {
        return xiaoShouMaoLiLv_;
      }
      /**
       * <code>optional int64 XiaoShouMaoLiLv = 613;</code>
       *
       * <pre>
       * 销售毛利率 C12
       * </pre>
       */
      public Builder setXiaoShouMaoLiLv(long value) {
        bitField7_ |= 0x10000000;
        xiaoShouMaoLiLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 XiaoShouMaoLiLv = 613;</code>
       *
       * <pre>
       * 销售毛利率 C12
       * </pre>
       */
      public Builder clearXiaoShouMaoLiLv() {
        bitField7_ = (bitField7_ & ~0x10000000);
        xiaoShouMaoLiLv_ = 0L;
        onChanged();
        return this;
      }

      private long tiaoZhengMeiGuJingZi_ ;
      /**
       * <code>optional int64 TiaoZhengMeiGuJingZi = 614;</code>
       *
       * <pre>
       * 调整每股净资 C13 
       * </pre>
       */
      public boolean hasTiaoZhengMeiGuJingZi() {
        return ((bitField7_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 TiaoZhengMeiGuJingZi = 614;</code>
       *
       * <pre>
       * 调整每股净资 C13 
       * </pre>
       */
      public long getTiaoZhengMeiGuJingZi() {
        return tiaoZhengMeiGuJingZi_;
      }
      /**
       * <code>optional int64 TiaoZhengMeiGuJingZi = 614;</code>
       *
       * <pre>
       * 调整每股净资 C13 
       * </pre>
       */
      public Builder setTiaoZhengMeiGuJingZi(long value) {
        bitField7_ |= 0x20000000;
        tiaoZhengMeiGuJingZi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 TiaoZhengMeiGuJingZi = 614;</code>
       *
       * <pre>
       * 调整每股净资 C13 
       * </pre>
       */
      public Builder clearTiaoZhengMeiGuJingZi() {
        bitField7_ = (bitField7_ & ~0x20000000);
        tiaoZhengMeiGuJingZi_ = 0L;
        onChanged();
        return this;
      }

      private long zongZiChan_ ;
      /**
       * <code>optional int64 ZongZiChan = 615;</code>
       *
       * <pre>
       * 总资产 C14   
       * </pre>
       */
      public boolean hasZongZiChan() {
        return ((bitField7_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 ZongZiChan = 615;</code>
       *
       * <pre>
       * 总资产 C14   
       * </pre>
       */
      public long getZongZiChan() {
        return zongZiChan_;
      }
      /**
       * <code>optional int64 ZongZiChan = 615;</code>
       *
       * <pre>
       * 总资产 C14   
       * </pre>
       */
      public Builder setZongZiChan(long value) {
        bitField7_ |= 0x40000000;
        zongZiChan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongZiChan = 615;</code>
       *
       * <pre>
       * 总资产 C14   
       * </pre>
       */
      public Builder clearZongZiChan() {
        bitField7_ = (bitField7_ & ~0x40000000);
        zongZiChan_ = 0L;
        onChanged();
        return this;
      }

      private long liuDongZiChan_ ;
      /**
       * <code>optional int64 LiuDongZiChan = 616;</code>
       *
       * <pre>
       * 流动资产 C15
       * </pre>
       */
      public boolean hasLiuDongZiChan() {
        return ((bitField7_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 LiuDongZiChan = 616;</code>
       *
       * <pre>
       * 流动资产 C15
       * </pre>
       */
      public long getLiuDongZiChan() {
        return liuDongZiChan_;
      }
      /**
       * <code>optional int64 LiuDongZiChan = 616;</code>
       *
       * <pre>
       * 流动资产 C15
       * </pre>
       */
      public Builder setLiuDongZiChan(long value) {
        bitField7_ |= 0x80000000;
        liuDongZiChan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LiuDongZiChan = 616;</code>
       *
       * <pre>
       * 流动资产 C15
       * </pre>
       */
      public Builder clearLiuDongZiChan() {
        bitField7_ = (bitField7_ & ~0x80000000);
        liuDongZiChan_ = 0L;
        onChanged();
        return this;
      }

      private long guDingZiChan_ ;
      /**
       * <code>optional int64 GuDingZiChan = 617;</code>
       *
       * <pre>
       * 固定资产 C16
       * </pre>
       */
      public boolean hasGuDingZiChan() {
        return ((bitField8_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 GuDingZiChan = 617;</code>
       *
       * <pre>
       * 固定资产 C16
       * </pre>
       */
      public long getGuDingZiChan() {
        return guDingZiChan_;
      }
      /**
       * <code>optional int64 GuDingZiChan = 617;</code>
       *
       * <pre>
       * 固定资产 C16
       * </pre>
       */
      public Builder setGuDingZiChan(long value) {
        bitField8_ |= 0x00000001;
        guDingZiChan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 GuDingZiChan = 617;</code>
       *
       * <pre>
       * 固定资产 C16
       * </pre>
       */
      public Builder clearGuDingZiChan() {
        bitField8_ = (bitField8_ & ~0x00000001);
        guDingZiChan_ = 0L;
        onChanged();
        return this;
      }

      private long wuXingZiChan_ ;
      /**
       * <code>optional int64 WuXingZiChan = 618;</code>
       *
       * <pre>
       * 无形资产 C17   
       * </pre>
       */
      public boolean hasWuXingZiChan() {
        return ((bitField8_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 WuXingZiChan = 618;</code>
       *
       * <pre>
       * 无形资产 C17   
       * </pre>
       */
      public long getWuXingZiChan() {
        return wuXingZiChan_;
      }
      /**
       * <code>optional int64 WuXingZiChan = 618;</code>
       *
       * <pre>
       * 无形资产 C17   
       * </pre>
       */
      public Builder setWuXingZiChan(long value) {
        bitField8_ |= 0x00000002;
        wuXingZiChan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WuXingZiChan = 618;</code>
       *
       * <pre>
       * 无形资产 C17   
       * </pre>
       */
      public Builder clearWuXingZiChan() {
        bitField8_ = (bitField8_ & ~0x00000002);
        wuXingZiChan_ = 0L;
        onChanged();
        return this;
      }

      private long liuDongFuZhai_ ;
      /**
       * <code>optional int64 LiuDongFuZhai = 619;</code>
       *
       * <pre>
       * 流动负债 C18
       * </pre>
       */
      public boolean hasLiuDongFuZhai() {
        return ((bitField8_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 LiuDongFuZhai = 619;</code>
       *
       * <pre>
       * 流动负债 C18
       * </pre>
       */
      public long getLiuDongFuZhai() {
        return liuDongFuZhai_;
      }
      /**
       * <code>optional int64 LiuDongFuZhai = 619;</code>
       *
       * <pre>
       * 流动负债 C18
       * </pre>
       */
      public Builder setLiuDongFuZhai(long value) {
        bitField8_ |= 0x00000004;
        liuDongFuZhai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LiuDongFuZhai = 619;</code>
       *
       * <pre>
       * 流动负债 C18
       * </pre>
       */
      public Builder clearLiuDongFuZhai() {
        bitField8_ = (bitField8_ & ~0x00000004);
        liuDongFuZhai_ = 0L;
        onChanged();
        return this;
      }

      private long changQiFuZhai_ ;
      /**
       * <code>optional int64 ChangQiFuZhai = 620;</code>
       *
       * <pre>
       * 长期负债 C19
       * </pre>
       */
      public boolean hasChangQiFuZhai() {
        return ((bitField8_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 ChangQiFuZhai = 620;</code>
       *
       * <pre>
       * 长期负债 C19
       * </pre>
       */
      public long getChangQiFuZhai() {
        return changQiFuZhai_;
      }
      /**
       * <code>optional int64 ChangQiFuZhai = 620;</code>
       *
       * <pre>
       * 长期负债 C19
       * </pre>
       */
      public Builder setChangQiFuZhai(long value) {
        bitField8_ |= 0x00000008;
        changQiFuZhai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChangQiFuZhai = 620;</code>
       *
       * <pre>
       * 长期负债 C19
       * </pre>
       */
      public Builder clearChangQiFuZhai() {
        bitField8_ = (bitField8_ & ~0x00000008);
        changQiFuZhai_ = 0L;
        onChanged();
        return this;
      }

      private long zongFuZhai_ ;
      /**
       * <code>optional int64 ZongFuZhai = 621;</code>
       *
       * <pre>
       * 总负债 C20
       * </pre>
       */
      public boolean hasZongFuZhai() {
        return ((bitField8_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 ZongFuZhai = 621;</code>
       *
       * <pre>
       * 总负债 C20
       * </pre>
       */
      public long getZongFuZhai() {
        return zongFuZhai_;
      }
      /**
       * <code>optional int64 ZongFuZhai = 621;</code>
       *
       * <pre>
       * 总负债 C20
       * </pre>
       */
      public Builder setZongFuZhai(long value) {
        bitField8_ |= 0x00000010;
        zongFuZhai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongFuZhai = 621;</code>
       *
       * <pre>
       * 总负债 C20
       * </pre>
       */
      public Builder clearZongFuZhai() {
        bitField8_ = (bitField8_ & ~0x00000010);
        zongFuZhai_ = 0L;
        onChanged();
        return this;
      }

      private long guDongQuanYi_ ;
      /**
       * <code>optional int64 GuDongQuanYi = 622;</code>
       *
       * <pre>
       * 股东权益 C21
       * </pre>
       */
      public boolean hasGuDongQuanYi() {
        return ((bitField8_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 GuDongQuanYi = 622;</code>
       *
       * <pre>
       * 股东权益 C21
       * </pre>
       */
      public long getGuDongQuanYi() {
        return guDongQuanYi_;
      }
      /**
       * <code>optional int64 GuDongQuanYi = 622;</code>
       *
       * <pre>
       * 股东权益 C21
       * </pre>
       */
      public Builder setGuDongQuanYi(long value) {
        bitField8_ |= 0x00000020;
        guDongQuanYi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 GuDongQuanYi = 622;</code>
       *
       * <pre>
       * 股东权益 C21
       * </pre>
       */
      public Builder clearGuDongQuanYi() {
        bitField8_ = (bitField8_ & ~0x00000020);
        guDongQuanYi_ = 0L;
        onChanged();
        return this;
      }

      private long ziBenGongJiJin_ ;
      /**
       * <code>optional int64 ZiBenGongJiJin = 623;</code>
       *
       * <pre>
       * 资本公积金 C22
       * </pre>
       */
      public boolean hasZiBenGongJiJin() {
        return ((bitField8_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 ZiBenGongJiJin = 623;</code>
       *
       * <pre>
       * 资本公积金 C22
       * </pre>
       */
      public long getZiBenGongJiJin() {
        return ziBenGongJiJin_;
      }
      /**
       * <code>optional int64 ZiBenGongJiJin = 623;</code>
       *
       * <pre>
       * 资本公积金 C22
       * </pre>
       */
      public Builder setZiBenGongJiJin(long value) {
        bitField8_ |= 0x00000040;
        ziBenGongJiJin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZiBenGongJiJin = 623;</code>
       *
       * <pre>
       * 资本公积金 C22
       * </pre>
       */
      public Builder clearZiBenGongJiJin() {
        bitField8_ = (bitField8_ & ~0x00000040);
        ziBenGongJiJin_ = 0L;
        onChanged();
        return this;
      }

      private long jingYingXianJinLiuLiang_ ;
      /**
       * <code>optional int64 JingYingXianJinLiuLiang = 624;</code>
       *
       * <pre>
       * 经营现金流量 C23
       * </pre>
       */
      public boolean hasJingYingXianJinLiuLiang() {
        return ((bitField8_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 JingYingXianJinLiuLiang = 624;</code>
       *
       * <pre>
       * 经营现金流量 C23
       * </pre>
       */
      public long getJingYingXianJinLiuLiang() {
        return jingYingXianJinLiuLiang_;
      }
      /**
       * <code>optional int64 JingYingXianJinLiuLiang = 624;</code>
       *
       * <pre>
       * 经营现金流量 C23
       * </pre>
       */
      public Builder setJingYingXianJinLiuLiang(long value) {
        bitField8_ |= 0x00000080;
        jingYingXianJinLiuLiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingYingXianJinLiuLiang = 624;</code>
       *
       * <pre>
       * 经营现金流量 C23
       * </pre>
       */
      public Builder clearJingYingXianJinLiuLiang() {
        bitField8_ = (bitField8_ & ~0x00000080);
        jingYingXianJinLiuLiang_ = 0L;
        onChanged();
        return this;
      }

      private long touZiXianJinLiuLiang_ ;
      /**
       * <code>optional int64 TouZiXianJinLiuLiang = 625;</code>
       *
       * <pre>
       * 投资现金流量 C24
       * </pre>
       */
      public boolean hasTouZiXianJinLiuLiang() {
        return ((bitField8_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 TouZiXianJinLiuLiang = 625;</code>
       *
       * <pre>
       * 投资现金流量 C24
       * </pre>
       */
      public long getTouZiXianJinLiuLiang() {
        return touZiXianJinLiuLiang_;
      }
      /**
       * <code>optional int64 TouZiXianJinLiuLiang = 625;</code>
       *
       * <pre>
       * 投资现金流量 C24
       * </pre>
       */
      public Builder setTouZiXianJinLiuLiang(long value) {
        bitField8_ |= 0x00000100;
        touZiXianJinLiuLiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 TouZiXianJinLiuLiang = 625;</code>
       *
       * <pre>
       * 投资现金流量 C24
       * </pre>
       */
      public Builder clearTouZiXianJinLiuLiang() {
        bitField8_ = (bitField8_ & ~0x00000100);
        touZiXianJinLiuLiang_ = 0L;
        onChanged();
        return this;
      }

      private long chouZiXianJinLiuLiang_ ;
      /**
       * <code>optional int64 ChouZiXianJinLiuLiang = 626;</code>
       *
       * <pre>
       * 筹资现金流量 C25
       * </pre>
       */
      public boolean hasChouZiXianJinLiuLiang() {
        return ((bitField8_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 ChouZiXianJinLiuLiang = 626;</code>
       *
       * <pre>
       * 筹资现金流量 C25
       * </pre>
       */
      public long getChouZiXianJinLiuLiang() {
        return chouZiXianJinLiuLiang_;
      }
      /**
       * <code>optional int64 ChouZiXianJinLiuLiang = 626;</code>
       *
       * <pre>
       * 筹资现金流量 C25
       * </pre>
       */
      public Builder setChouZiXianJinLiuLiang(long value) {
        bitField8_ |= 0x00000200;
        chouZiXianJinLiuLiang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ChouZiXianJinLiuLiang = 626;</code>
       *
       * <pre>
       * 筹资现金流量 C25
       * </pre>
       */
      public Builder clearChouZiXianJinLiuLiang() {
        bitField8_ = (bitField8_ & ~0x00000200);
        chouZiXianJinLiuLiang_ = 0L;
        onChanged();
        return this;
      }

      private long xianJinZengJiaE_ ;
      /**
       * <code>optional int64 XianJinZengJiaE = 627;</code>
       *
       * <pre>
       * 现金增加额 C26 
       * </pre>
       */
      public boolean hasXianJinZengJiaE() {
        return ((bitField8_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 XianJinZengJiaE = 627;</code>
       *
       * <pre>
       * 现金增加额 C26 
       * </pre>
       */
      public long getXianJinZengJiaE() {
        return xianJinZengJiaE_;
      }
      /**
       * <code>optional int64 XianJinZengJiaE = 627;</code>
       *
       * <pre>
       * 现金增加额 C26 
       * </pre>
       */
      public Builder setXianJinZengJiaE(long value) {
        bitField8_ |= 0x00000400;
        xianJinZengJiaE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 XianJinZengJiaE = 627;</code>
       *
       * <pre>
       * 现金增加额 C26 
       * </pre>
       */
      public Builder clearXianJinZengJiaE() {
        bitField8_ = (bitField8_ & ~0x00000400);
        xianJinZengJiaE_ = 0L;
        onChanged();
        return this;
      }

      private long zhuYingShouRu_ ;
      /**
       * <code>optional int64 ZhuYingShouRu = 628;</code>
       *
       * <pre>
       * 主营收入 C27 
       * </pre>
       */
      public boolean hasZhuYingShouRu() {
        return ((bitField8_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 ZhuYingShouRu = 628;</code>
       *
       * <pre>
       * 主营收入 C27 
       * </pre>
       */
      public long getZhuYingShouRu() {
        return zhuYingShouRu_;
      }
      /**
       * <code>optional int64 ZhuYingShouRu = 628;</code>
       *
       * <pre>
       * 主营收入 C27 
       * </pre>
       */
      public Builder setZhuYingShouRu(long value) {
        bitField8_ |= 0x00000800;
        zhuYingShouRu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhuYingShouRu = 628;</code>
       *
       * <pre>
       * 主营收入 C27 
       * </pre>
       */
      public Builder clearZhuYingShouRu() {
        bitField8_ = (bitField8_ & ~0x00000800);
        zhuYingShouRu_ = 0L;
        onChanged();
        return this;
      }

      private long zhuYingLiRun_ ;
      /**
       * <code>optional int64 ZhuYingLiRun = 629;</code>
       *
       * <pre>
       * 主营利润 C28
       * </pre>
       */
      public boolean hasZhuYingLiRun() {
        return ((bitField8_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 ZhuYingLiRun = 629;</code>
       *
       * <pre>
       * 主营利润 C28
       * </pre>
       */
      public long getZhuYingLiRun() {
        return zhuYingLiRun_;
      }
      /**
       * <code>optional int64 ZhuYingLiRun = 629;</code>
       *
       * <pre>
       * 主营利润 C28
       * </pre>
       */
      public Builder setZhuYingLiRun(long value) {
        bitField8_ |= 0x00001000;
        zhuYingLiRun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZhuYingLiRun = 629;</code>
       *
       * <pre>
       * 主营利润 C28
       * </pre>
       */
      public Builder clearZhuYingLiRun() {
        bitField8_ = (bitField8_ & ~0x00001000);
        zhuYingLiRun_ = 0L;
        onChanged();
        return this;
      }

      private long yingYeLiRun_ ;
      /**
       * <code>optional int64 YingYeLiRun = 630;</code>
       *
       * <pre>
       * 营业利润 C29
       * </pre>
       */
      public boolean hasYingYeLiRun() {
        return ((bitField8_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 YingYeLiRun = 630;</code>
       *
       * <pre>
       * 营业利润 C29
       * </pre>
       */
      public long getYingYeLiRun() {
        return yingYeLiRun_;
      }
      /**
       * <code>optional int64 YingYeLiRun = 630;</code>
       *
       * <pre>
       * 营业利润 C29
       * </pre>
       */
      public Builder setYingYeLiRun(long value) {
        bitField8_ |= 0x00002000;
        yingYeLiRun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 YingYeLiRun = 630;</code>
       *
       * <pre>
       * 营业利润 C29
       * </pre>
       */
      public Builder clearYingYeLiRun() {
        bitField8_ = (bitField8_ & ~0x00002000);
        yingYeLiRun_ = 0L;
        onChanged();
        return this;
      }

      private long touZiShouYi_ ;
      /**
       * <code>optional int64 TouZiShouYi = 631;</code>
       *
       * <pre>
       * 投资收益 C30
       * </pre>
       */
      public boolean hasTouZiShouYi() {
        return ((bitField8_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 TouZiShouYi = 631;</code>
       *
       * <pre>
       * 投资收益 C30
       * </pre>
       */
      public long getTouZiShouYi() {
        return touZiShouYi_;
      }
      /**
       * <code>optional int64 TouZiShouYi = 631;</code>
       *
       * <pre>
       * 投资收益 C30
       * </pre>
       */
      public Builder setTouZiShouYi(long value) {
        bitField8_ |= 0x00004000;
        touZiShouYi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 TouZiShouYi = 631;</code>
       *
       * <pre>
       * 投资收益 C30
       * </pre>
       */
      public Builder clearTouZiShouYi() {
        bitField8_ = (bitField8_ & ~0x00004000);
        touZiShouYi_ = 0L;
        onChanged();
        return this;
      }

      private long yingYeWaiShouZhi_ ;
      /**
       * <code>optional int64 YingYeWaiShouZhi = 632;</code>
       *
       * <pre>
       * 营业外收支 C31
       * </pre>
       */
      public boolean hasYingYeWaiShouZhi() {
        return ((bitField8_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 YingYeWaiShouZhi = 632;</code>
       *
       * <pre>
       * 营业外收支 C31
       * </pre>
       */
      public long getYingYeWaiShouZhi() {
        return yingYeWaiShouZhi_;
      }
      /**
       * <code>optional int64 YingYeWaiShouZhi = 632;</code>
       *
       * <pre>
       * 营业外收支 C31
       * </pre>
       */
      public Builder setYingYeWaiShouZhi(long value) {
        bitField8_ |= 0x00008000;
        yingYeWaiShouZhi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 YingYeWaiShouZhi = 632;</code>
       *
       * <pre>
       * 营业外收支 C31
       * </pre>
       */
      public Builder clearYingYeWaiShouZhi() {
        bitField8_ = (bitField8_ & ~0x00008000);
        yingYeWaiShouZhi_ = 0L;
        onChanged();
        return this;
      }

      private long liRunZongE_ ;
      /**
       * <code>optional int64 LiRunZongE = 633;</code>
       *
       * <pre>
       * 利润总额 C32
       * </pre>
       */
      public boolean hasLiRunZongE() {
        return ((bitField8_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 LiRunZongE = 633;</code>
       *
       * <pre>
       * 利润总额 C32
       * </pre>
       */
      public long getLiRunZongE() {
        return liRunZongE_;
      }
      /**
       * <code>optional int64 LiRunZongE = 633;</code>
       *
       * <pre>
       * 利润总额 C32
       * </pre>
       */
      public Builder setLiRunZongE(long value) {
        bitField8_ |= 0x00010000;
        liRunZongE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LiRunZongE = 633;</code>
       *
       * <pre>
       * 利润总额 C32
       * </pre>
       */
      public Builder clearLiRunZongE() {
        bitField8_ = (bitField8_ & ~0x00010000);
        liRunZongE_ = 0L;
        onChanged();
        return this;
      }

      private long jingLiRun_ ;
      /**
       * <code>optional int64 JingLiRun = 634;</code>
       *
       * <pre>
       * 净利润 C33
       * </pre>
       */
      public boolean hasJingLiRun() {
        return ((bitField8_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 JingLiRun = 634;</code>
       *
       * <pre>
       * 净利润 C33
       * </pre>
       */
      public long getJingLiRun() {
        return jingLiRun_;
      }
      /**
       * <code>optional int64 JingLiRun = 634;</code>
       *
       * <pre>
       * 净利润 C33
       * </pre>
       */
      public Builder setJingLiRun(long value) {
        bitField8_ |= 0x00020000;
        jingLiRun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingLiRun = 634;</code>
       *
       * <pre>
       * 净利润 C33
       * </pre>
       */
      public Builder clearJingLiRun() {
        bitField8_ = (bitField8_ & ~0x00020000);
        jingLiRun_ = 0L;
        onChanged();
        return this;
      }

      private long weiFenPeiLiRun_ ;
      /**
       * <code>optional int64 WeiFenPeiLiRun = 635;</code>
       *
       * <pre>
       * 未分配利润 C34
       * </pre>
       */
      public boolean hasWeiFenPeiLiRun() {
        return ((bitField8_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 WeiFenPeiLiRun = 635;</code>
       *
       * <pre>
       * 未分配利润 C34
       * </pre>
       */
      public long getWeiFenPeiLiRun() {
        return weiFenPeiLiRun_;
      }
      /**
       * <code>optional int64 WeiFenPeiLiRun = 635;</code>
       *
       * <pre>
       * 未分配利润 C34
       * </pre>
       */
      public Builder setWeiFenPeiLiRun(long value) {
        bitField8_ |= 0x00040000;
        weiFenPeiLiRun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WeiFenPeiLiRun = 635;</code>
       *
       * <pre>
       * 未分配利润 C34
       * </pre>
       */
      public Builder clearWeiFenPeiLiRun() {
        bitField8_ = (bitField8_ & ~0x00040000);
        weiFenPeiLiRun_ = 0L;
        onChanged();
        return this;
      }

      private long zongGuBen_ ;
      /**
       * <code>optional int64 ZongGuBen = 636;</code>
       *
       * <pre>
       * 总股本 C1
       * </pre>
       */
      public boolean hasZongGuBen() {
        return ((bitField8_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 ZongGuBen = 636;</code>
       *
       * <pre>
       * 总股本 C1
       * </pre>
       */
      public long getZongGuBen() {
        return zongGuBen_;
      }
      /**
       * <code>optional int64 ZongGuBen = 636;</code>
       *
       * <pre>
       * 总股本 C1
       * </pre>
       */
      public Builder setZongGuBen(long value) {
        bitField8_ |= 0x00080000;
        zongGuBen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ZongGuBen = 636;</code>
       *
       * <pre>
       * 总股本 C1
       * </pre>
       */
      public Builder clearZongGuBen() {
        bitField8_ = (bitField8_ & ~0x00080000);
        zongGuBen_ = 0L;
        onChanged();
        return this;
      }

      private long wuXianShouGuHeJi_ ;
      /**
       * <code>optional int64 WuXianShouGuHeJi = 637;</code>
       *
       * <pre>
       * 无限售股合计 C36
       * </pre>
       */
      public boolean hasWuXianShouGuHeJi() {
        return ((bitField8_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 WuXianShouGuHeJi = 637;</code>
       *
       * <pre>
       * 无限售股合计 C36
       * </pre>
       */
      public long getWuXianShouGuHeJi() {
        return wuXianShouGuHeJi_;
      }
      /**
       * <code>optional int64 WuXianShouGuHeJi = 637;</code>
       *
       * <pre>
       * 无限售股合计 C36
       * </pre>
       */
      public Builder setWuXianShouGuHeJi(long value) {
        bitField8_ |= 0x00100000;
        wuXianShouGuHeJi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 WuXianShouGuHeJi = 637;</code>
       *
       * <pre>
       * 无限售股合计 C36
       * </pre>
       */
      public Builder clearWuXianShouGuHeJi() {
        bitField8_ = (bitField8_ & ~0x00100000);
        wuXianShouGuHeJi_ = 0L;
        onChanged();
        return this;
      }

      private long liuTongAGu_ ;
      /**
       * <code>optional int64 LiuTongAGu = 638;</code>
       *
       * <pre>
       * 流通A股 C37
       * </pre>
       */
      public boolean hasLiuTongAGu() {
        return ((bitField8_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int64 LiuTongAGu = 638;</code>
       *
       * <pre>
       * 流通A股 C37
       * </pre>
       */
      public long getLiuTongAGu() {
        return liuTongAGu_;
      }
      /**
       * <code>optional int64 LiuTongAGu = 638;</code>
       *
       * <pre>
       * 流通A股 C37
       * </pre>
       */
      public Builder setLiuTongAGu(long value) {
        bitField8_ |= 0x00200000;
        liuTongAGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LiuTongAGu = 638;</code>
       *
       * <pre>
       * 流通A股 C37
       * </pre>
       */
      public Builder clearLiuTongAGu() {
        bitField8_ = (bitField8_ & ~0x00200000);
        liuTongAGu_ = 0L;
        onChanged();
        return this;
      }

      private long liuTongBGu_ ;
      /**
       * <code>optional int64 LiuTongBGu = 639;</code>
       *
       * <pre>
       * 流通B股 C38
       * </pre>
       */
      public boolean hasLiuTongBGu() {
        return ((bitField8_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 LiuTongBGu = 639;</code>
       *
       * <pre>
       * 流通B股 C38
       * </pre>
       */
      public long getLiuTongBGu() {
        return liuTongBGu_;
      }
      /**
       * <code>optional int64 LiuTongBGu = 639;</code>
       *
       * <pre>
       * 流通B股 C38
       * </pre>
       */
      public Builder setLiuTongBGu(long value) {
        bitField8_ |= 0x00400000;
        liuTongBGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 LiuTongBGu = 639;</code>
       *
       * <pre>
       * 流通B股 C38
       * </pre>
       */
      public Builder clearLiuTongBGu() {
        bitField8_ = (bitField8_ & ~0x00400000);
        liuTongBGu_ = 0L;
        onChanged();
        return this;
      }

      private long jingWaiShangShiGu_ ;
      /**
       * <code>optional int64 JingWaiShangShiGu = 640;</code>
       *
       * <pre>
       * 境外上市股 C39
       * </pre>
       */
      public boolean hasJingWaiShangShiGu() {
        return ((bitField8_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 JingWaiShangShiGu = 640;</code>
       *
       * <pre>
       * 境外上市股 C39
       * </pre>
       */
      public long getJingWaiShangShiGu() {
        return jingWaiShangShiGu_;
      }
      /**
       * <code>optional int64 JingWaiShangShiGu = 640;</code>
       *
       * <pre>
       * 境外上市股 C39
       * </pre>
       */
      public Builder setJingWaiShangShiGu(long value) {
        bitField8_ |= 0x00800000;
        jingWaiShangShiGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingWaiShangShiGu = 640;</code>
       *
       * <pre>
       * 境外上市股 C39
       * </pre>
       */
      public Builder clearJingWaiShangShiGu() {
        bitField8_ = (bitField8_ & ~0x00800000);
        jingWaiShangShiGu_ = 0L;
        onChanged();
        return this;
      }

      private long qiTaLiuTongGu_ ;
      /**
       * <code>optional int64 QiTaLiuTongGu = 641;</code>
       *
       * <pre>
       * 其他流通股 C40
       * </pre>
       */
      public boolean hasQiTaLiuTongGu() {
        return ((bitField8_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 QiTaLiuTongGu = 641;</code>
       *
       * <pre>
       * 其他流通股 C40
       * </pre>
       */
      public long getQiTaLiuTongGu() {
        return qiTaLiuTongGu_;
      }
      /**
       * <code>optional int64 QiTaLiuTongGu = 641;</code>
       *
       * <pre>
       * 其他流通股 C40
       * </pre>
       */
      public Builder setQiTaLiuTongGu(long value) {
        bitField8_ |= 0x01000000;
        qiTaLiuTongGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 QiTaLiuTongGu = 641;</code>
       *
       * <pre>
       * 其他流通股 C40
       * </pre>
       */
      public Builder clearQiTaLiuTongGu() {
        bitField8_ = (bitField8_ & ~0x01000000);
        qiTaLiuTongGu_ = 0L;
        onChanged();
        return this;
      }

      private long xianShouGuHeJi_ ;
      /**
       * <code>optional int64 XianShouGuHeJi = 642;</code>
       *
       * <pre>
       * 限售股合计 C41
       * </pre>
       */
      public boolean hasXianShouGuHeJi() {
        return ((bitField8_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 XianShouGuHeJi = 642;</code>
       *
       * <pre>
       * 限售股合计 C41
       * </pre>
       */
      public long getXianShouGuHeJi() {
        return xianShouGuHeJi_;
      }
      /**
       * <code>optional int64 XianShouGuHeJi = 642;</code>
       *
       * <pre>
       * 限售股合计 C41
       * </pre>
       */
      public Builder setXianShouGuHeJi(long value) {
        bitField8_ |= 0x02000000;
        xianShouGuHeJi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 XianShouGuHeJi = 642;</code>
       *
       * <pre>
       * 限售股合计 C41
       * </pre>
       */
      public Builder clearXianShouGuHeJi() {
        bitField8_ = (bitField8_ & ~0x02000000);
        xianShouGuHeJi_ = 0L;
        onChanged();
        return this;
      }

      private long guoJiaChiGu_ ;
      /**
       * <code>optional int64 GuoJiaChiGu = 643;</code>
       *
       * <pre>
       * 国家持股 C42
       * </pre>
       */
      public boolean hasGuoJiaChiGu() {
        return ((bitField8_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int64 GuoJiaChiGu = 643;</code>
       *
       * <pre>
       * 国家持股 C42
       * </pre>
       */
      public long getGuoJiaChiGu() {
        return guoJiaChiGu_;
      }
      /**
       * <code>optional int64 GuoJiaChiGu = 643;</code>
       *
       * <pre>
       * 国家持股 C42
       * </pre>
       */
      public Builder setGuoJiaChiGu(long value) {
        bitField8_ |= 0x04000000;
        guoJiaChiGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 GuoJiaChiGu = 643;</code>
       *
       * <pre>
       * 国家持股 C42
       * </pre>
       */
      public Builder clearGuoJiaChiGu() {
        bitField8_ = (bitField8_ & ~0x04000000);
        guoJiaChiGu_ = 0L;
        onChanged();
        return this;
      }

      private long guoYouFaRenGu_ ;
      /**
       * <code>optional int64 GuoYouFaRenGu = 644;</code>
       *
       * <pre>
       * 国有法人股 C43 
       * </pre>
       */
      public boolean hasGuoYouFaRenGu() {
        return ((bitField8_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int64 GuoYouFaRenGu = 644;</code>
       *
       * <pre>
       * 国有法人股 C43 
       * </pre>
       */
      public long getGuoYouFaRenGu() {
        return guoYouFaRenGu_;
      }
      /**
       * <code>optional int64 GuoYouFaRenGu = 644;</code>
       *
       * <pre>
       * 国有法人股 C43 
       * </pre>
       */
      public Builder setGuoYouFaRenGu(long value) {
        bitField8_ |= 0x08000000;
        guoYouFaRenGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 GuoYouFaRenGu = 644;</code>
       *
       * <pre>
       * 国有法人股 C43 
       * </pre>
       */
      public Builder clearGuoYouFaRenGu() {
        bitField8_ = (bitField8_ & ~0x08000000);
        guoYouFaRenGu_ = 0L;
        onChanged();
        return this;
      }

      private long jingNeiFaRenGu_ ;
      /**
       * <code>optional int64 JingNeiFaRenGu = 645;</code>
       *
       * <pre>
       * 境内法人股 C44
       * </pre>
       */
      public boolean hasJingNeiFaRenGu() {
        return ((bitField8_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 JingNeiFaRenGu = 645;</code>
       *
       * <pre>
       * 境内法人股 C44
       * </pre>
       */
      public long getJingNeiFaRenGu() {
        return jingNeiFaRenGu_;
      }
      /**
       * <code>optional int64 JingNeiFaRenGu = 645;</code>
       *
       * <pre>
       * 境内法人股 C44
       * </pre>
       */
      public Builder setJingNeiFaRenGu(long value) {
        bitField8_ |= 0x10000000;
        jingNeiFaRenGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingNeiFaRenGu = 645;</code>
       *
       * <pre>
       * 境内法人股 C44
       * </pre>
       */
      public Builder clearJingNeiFaRenGu() {
        bitField8_ = (bitField8_ & ~0x10000000);
        jingNeiFaRenGu_ = 0L;
        onChanged();
        return this;
      }

      private long jingNeiZiRanRenGu_ ;
      /**
       * <code>optional int64 JingNeiZiRanRenGu = 646;</code>
       *
       * <pre>
       * 境内自然人股 C45
       * </pre>
       */
      public boolean hasJingNeiZiRanRenGu() {
        return ((bitField8_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 JingNeiZiRanRenGu = 646;</code>
       *
       * <pre>
       * 境内自然人股 C45
       * </pre>
       */
      public long getJingNeiZiRanRenGu() {
        return jingNeiZiRanRenGu_;
      }
      /**
       * <code>optional int64 JingNeiZiRanRenGu = 646;</code>
       *
       * <pre>
       * 境内自然人股 C45
       * </pre>
       */
      public Builder setJingNeiZiRanRenGu(long value) {
        bitField8_ |= 0x20000000;
        jingNeiZiRanRenGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingNeiZiRanRenGu = 646;</code>
       *
       * <pre>
       * 境内自然人股 C45
       * </pre>
       */
      public Builder clearJingNeiZiRanRenGu() {
        bitField8_ = (bitField8_ & ~0x20000000);
        jingNeiZiRanRenGu_ = 0L;
        onChanged();
        return this;
      }

      private long qiTaFaQiRenGu_ ;
      /**
       * <code>optional int64 QiTaFaQiRenGu = 647;</code>
       *
       * <pre>
       * 其他发起人股 C46
       * </pre>
       */
      public boolean hasQiTaFaQiRenGu() {
        return ((bitField8_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 QiTaFaQiRenGu = 647;</code>
       *
       * <pre>
       * 其他发起人股 C46
       * </pre>
       */
      public long getQiTaFaQiRenGu() {
        return qiTaFaQiRenGu_;
      }
      /**
       * <code>optional int64 QiTaFaQiRenGu = 647;</code>
       *
       * <pre>
       * 其他发起人股 C46
       * </pre>
       */
      public Builder setQiTaFaQiRenGu(long value) {
        bitField8_ |= 0x40000000;
        qiTaFaQiRenGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 QiTaFaQiRenGu = 647;</code>
       *
       * <pre>
       * 其他发起人股 C46
       * </pre>
       */
      public Builder clearQiTaFaQiRenGu() {
        bitField8_ = (bitField8_ & ~0x40000000);
        qiTaFaQiRenGu_ = 0L;
        onChanged();
        return this;
      }

      private long muJiFaRenGu_ ;
      /**
       * <code>optional int64 MuJiFaRenGu = 648;</code>
       *
       * <pre>
       * 募集法人股 C47
       * </pre>
       */
      public boolean hasMuJiFaRenGu() {
        return ((bitField8_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int64 MuJiFaRenGu = 648;</code>
       *
       * <pre>
       * 募集法人股 C47
       * </pre>
       */
      public long getMuJiFaRenGu() {
        return muJiFaRenGu_;
      }
      /**
       * <code>optional int64 MuJiFaRenGu = 648;</code>
       *
       * <pre>
       * 募集法人股 C47
       * </pre>
       */
      public Builder setMuJiFaRenGu(long value) {
        bitField8_ |= 0x80000000;
        muJiFaRenGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 MuJiFaRenGu = 648;</code>
       *
       * <pre>
       * 募集法人股 C47
       * </pre>
       */
      public Builder clearMuJiFaRenGu() {
        bitField8_ = (bitField8_ & ~0x80000000);
        muJiFaRenGu_ = 0L;
        onChanged();
        return this;
      }

      private long jingWaiFaRenGu_ ;
      /**
       * <code>optional int64 JingWaiFaRenGu = 649;</code>
       *
       * <pre>
       * 境外法人股 C48
       * </pre>
       */
      public boolean hasJingWaiFaRenGu() {
        return ((bitField9_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 JingWaiFaRenGu = 649;</code>
       *
       * <pre>
       * 境外法人股 C48
       * </pre>
       */
      public long getJingWaiFaRenGu() {
        return jingWaiFaRenGu_;
      }
      /**
       * <code>optional int64 JingWaiFaRenGu = 649;</code>
       *
       * <pre>
       * 境外法人股 C48
       * </pre>
       */
      public Builder setJingWaiFaRenGu(long value) {
        bitField9_ |= 0x00000001;
        jingWaiFaRenGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingWaiFaRenGu = 649;</code>
       *
       * <pre>
       * 境外法人股 C48
       * </pre>
       */
      public Builder clearJingWaiFaRenGu() {
        bitField9_ = (bitField9_ & ~0x00000001);
        jingWaiFaRenGu_ = 0L;
        onChanged();
        return this;
      }

      private long jingWaiZiRanRenGu_ ;
      /**
       * <code>optional int64 JingWaiZiRanRenGu = 650;</code>
       *
       * <pre>
       * 境外自然人股 C49
       * </pre>
       */
      public boolean hasJingWaiZiRanRenGu() {
        return ((bitField9_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 JingWaiZiRanRenGu = 650;</code>
       *
       * <pre>
       * 境外自然人股 C49
       * </pre>
       */
      public long getJingWaiZiRanRenGu() {
        return jingWaiZiRanRenGu_;
      }
      /**
       * <code>optional int64 JingWaiZiRanRenGu = 650;</code>
       *
       * <pre>
       * 境外自然人股 C49
       * </pre>
       */
      public Builder setJingWaiZiRanRenGu(long value) {
        bitField9_ |= 0x00000002;
        jingWaiZiRanRenGu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 JingWaiZiRanRenGu = 650;</code>
       *
       * <pre>
       * 境外自然人股 C49
       * </pre>
       */
      public Builder clearJingWaiZiRanRenGu() {
        bitField9_ = (bitField9_ & ~0x00000002);
        jingWaiZiRanRenGu_ = 0L;
        onChanged();
        return this;
      }

      private long youXianGuHuoQiTa_ ;
      /**
       * <code>optional int64 YouXianGuHuoQiTa = 651;</code>
       *
       * <pre>
       * 优先股或其他 C50    
       * </pre>
       */
      public boolean hasYouXianGuHuoQiTa() {
        return ((bitField9_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 YouXianGuHuoQiTa = 651;</code>
       *
       * <pre>
       * 优先股或其他 C50    
       * </pre>
       */
      public long getYouXianGuHuoQiTa() {
        return youXianGuHuoQiTa_;
      }
      /**
       * <code>optional int64 YouXianGuHuoQiTa = 651;</code>
       *
       * <pre>
       * 优先股或其他 C50    
       * </pre>
       */
      public Builder setYouXianGuHuoQiTa(long value) {
        bitField9_ |= 0x00000004;
        youXianGuHuoQiTa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 YouXianGuHuoQiTa = 651;</code>
       *
       * <pre>
       * 优先股或其他 C50    
       * </pre>
       */
      public Builder clearYouXianGuHuoQiTa() {
        bitField9_ = (bitField9_ & ~0x00000004);
        youXianGuHuoQiTa_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dzhyun.StkData)
    }

    static {
      defaultInstance = new StkData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:dzhyun.StkData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dzhyun_StkData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dzhyun_StkData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024dzhyun.stkdata.proto\022\006dzhyun\"\2553\n\007StkDa" +
      "ta\022\013\n\003Obj\030\001 \002(\t\022\023\n\013JiaoYiDaiMa\030\002 \001(\t\022\031\n\021" +
      "ZhongWenJianCheng\030\003 \001(\t\022\021\n\tZuiXinJia\030\004 \001" +
      "(\003\022\021\n\tKaiPanJia\030\005 \001(\003\022\021\n\tZuiGaoJia\030\006 \001(\003" +
      "\022\020\n\010ZuiDiJia\030\007 \001(\003\022\017\n\007ZuoShou\030\010 \001(\003\022\016\n\006J" +
      "unJia\030\t \001(\003\022\020\n\010ZhangDie\030\n \001(\003\022\017\n\007ZhangFu" +
      "\030\013 \001(\003\022\016\n\006ZhenFu\030\014 \001(\003\022\026\n\016ChengJiaoLiang" +
      "\030\r \001(\003\022\020\n\010XianShou\030\016 \001(\003\022\022\n\nChengJiaoE\030\017" +
      " \001(\003\022\032\n\022ZongChengJiaoBiShu\030\020 \001(\003\022\033\n\023MeiB" +
      "iChengJiaoGuShu\030\021 \001(\003\022\020\n\010HuanShou\030\022 \001(\003\022",
      "\017\n\007LiangBi\030\023 \001(\003\022\016\n\006NeiPan\030\024 \001(\003\022\016\n\006WaiP" +
      "an\030\025 \001(\003\022\021\n\tZongMaiRu\030\026 \001(\003\022\022\n\nZongMaiCh" +
      "u\030\027 \001(\003\022\027\n\017ZongMaiRuJunJia\030\030 \001(\003\022\030\n\020Zong" +
      "MaiChuJunJia\030\031 \001(\003\022\027\n\017WeiTuoMaiRuJia1\030\032 " +
      "\001(\003\022\027\n\017WeiTuoMaiRuJia2\030\033 \001(\003\022\027\n\017WeiTuoMa" +
      "iRuJia3\030\034 \001(\003\022\027\n\017WeiTuoMaiRuJia4\030\035 \001(\003\022\027" +
      "\n\017WeiTuoMaiRuJia5\030\036 \001(\003\022\031\n\021WeiTuoMaiRuLi" +
      "ang1\030\037 \001(\003\022\031\n\021WeiTuoMaiRuLiang2\030  \001(\003\022\031\n" +
      "\021WeiTuoMaiRuLiang3\030! \001(\003\022\031\n\021WeiTuoMaiRuL" +
      "iang4\030\" \001(\003\022\031\n\021WeiTuoMaiRuLiang5\030# \001(\003\022\030",
      "\n\020WeiTuoMaiChuJia1\030$ \001(\003\022\030\n\020WeiTuoMaiChu" +
      "Jia2\030% \001(\003\022\030\n\020WeiTuoMaiChuJia3\030& \001(\003\022\030\n\020" +
      "WeiTuoMaiChuJia4\030\' \001(\003\022\030\n\020WeiTuoMaiChuJi" +
      "a5\030( \001(\003\022\032\n\022WeiTuoMaiChuLiang1\030) \001(\003\022\032\n\022" +
      "WeiTuoMaiChuLiang2\030* \001(\003\022\032\n\022WeiTuoMaiChu" +
      "Liang3\030+ \001(\003\022\032\n\022WeiTuoMaiChuLiang4\030, \001(\003" +
      "\022\032\n\022WeiTuoMaiChuLiang5\030- \001(\003\022\r\n\005WeiBi\030. " +
      "\001(\003\022\016\n\006WeiCha\030/ \001(\003\022\017\n\007ZhangSu\0300 \001(\003\022\023\n\013" +
      "JunLiang5Ri\0301 \001(\003\022\030\n\020ShangZhangJiaShu\0302 " +
      "\001(\003\022\024\n\014XiaDieJiaShu\0303 \001(\003\022\025\n\rPingPanJiaS",
      "hu\0304 \001(\003\022\033\n\023AGuShangZhangJiaShu\0305 \001(\003\022\027\n" +
      "\017AGuXiaDieJiaShu\0306 \001(\003\022\030\n\020AGuPingPanJiaS" +
      "hu\0307 \001(\003\022\025\n\rAGuChengJiaoE\0308 \001(\003\022\033\n\023BGuSh" +
      "angZhangJiaShu\0309 \001(\003\022\027\n\017BGuXiaDieJiaShu\030" +
      ": \001(\003\022\030\n\020BGuPingPanJiaShu\030; \001(\003\022\025\n\rBGuCh" +
      "engJiaoE\030< \001(\003\022\035\n\025JiJinShangZhangJiaShu\030" +
      "= \001(\003\022\031\n\021JiJinXiaDieJiaShu\030> \001(\003\022\032\n\022JiJi" +
      "nPingPanJiaShu\030? \001(\003\022\027\n\017JiJinChengJiaoE\030" +
      "@ \001(\003\022\034\n\024QiTaShangZhangJiaShu\030A \001(\003\022\030\n\020Q" +
      "iTaXiaDieJiaShu\030B \001(\003\022\031\n\021QiTaPingPanJiaS",
      "hu\030C \001(\003\022\026\n\016QiTaChengJiaoE\030D \001(\003\022\023\n\013MaiR" +
      "uDanShu\030E \001(\003\022\024\n\014MaiChuDanShu\030F \001(\003\022\031\n\021M" +
      "aiRuZhongDanBiLi\030G \001(\003\022\026\n\016MaiRuDaDanBiLi" +
      "\030H \001(\003\022\030\n\020MaiRuTeDaDanBiLi\030I \001(\003\022\032\n\022MaiC" +
      "huZhongDanBiLi\030J \001(\003\022\027\n\017MaiChuDaDanBiLi\030" +
      "K \001(\003\022\031\n\021MaiChuTeDaDanBiLi\030L \001(\003\022\030\n\020FenZ" +
      "hongZhangFu1\030M \001(\003\022\030\n\020FenZhongZhangFu2\030N" +
      " \001(\003\022\030\n\020FenZhongZhangFu3\030O \001(\003\022\030\n\020FenZho" +
      "ngZhangFu4\030P \001(\003\022\030\n\020FenZhongZhangFu5\030Q \001" +
      "(\003\022\021\n\tShiYingLv\030R \001(\003\022\021\n\tZhangTing\030S \001(\003",
      "\022\017\n\007DieTing\030T \001(\003\022\031\n\021ShiChangMingCheng\030U" +
      " \001(\t\022\035\n\025ShiChangDuanMingCheng\030V \001(\t\022\026\n\016J" +
      "iGouChiHuoShu\030W \001(\003\022\025\n\rJiGouTuHuoShu\030X \001" +
      "(\003\022\030\n\020JiGouChiHuoLiang\030Y \001(\003\022\027\n\017JiGouTuH" +
      "uoLiang\030Z \001(\003\022\027\n\017JiGouChiHuoJunE\030[ \001(\003\022\026" +
      "\n\016JiGouTuHuoJunE\030\\ \001(\003\022\024\n\014MeiShouGuShu\030]" +
      " \001(\003\022\024\n\014JiaoYiDanWei\030^ \001(\003\022\021\n\tShiXiaoLv\030" +
      "_ \001(\003\022\017\n\007ShiJian\030` \001(\003\022\021\n\tShiJingLv\030a \001(" +
      "\003\022\022\n\nZongShiZhi\030b \001(\003\022\025\n\rLiuTongShiZhi\030c" +
      " \001(\003\022\022\n\tMA1minMA1\030\310\001 \001(\003\022\022\n\tMA1minMA2\030\311\001",
      " \001(\003\022\022\n\tMA1minMA3\030\312\001 \001(\003\022\022\n\tMA1minMA4\030\313\001" +
      " \001(\003\022\022\n\tMA1minMA5\030\314\001 \001(\003\022\022\n\tMA1minMA6\030\315\001" +
      " \001(\003\022\022\n\tMA5minMA1\030\316\001 \001(\003\022\022\n\tMA5minMA2\030\317\001" +
      " \001(\003\022\022\n\tMA5minMA3\030\320\001 \001(\003\022\022\n\tMA5minMA4\030\321\001" +
      " \001(\003\022\022\n\tMA5minMA5\030\322\001 \001(\003\022\022\n\tMA5minMA6\030\323\001" +
      " \001(\003\022\022\n\tMA1dayMA1\030\324\001 \001(\003\022\022\n\tMA1dayMA2\030\325\001" +
      " \001(\003\022\022\n\tMA1dayMA3\030\326\001 \001(\003\022\022\n\tMA1dayMA4\030\327\001" +
      " \001(\003\022\022\n\tMA1dayMA5\030\330\001 \001(\003\022\022\n\tMA1dayMA6\030\331\001" +
      " \001(\003\022\024\n\013BOLL1minMID\030\332\001 \001(\003\022\026\n\rBOLL1minUP" +
      "PER\030\333\001 \001(\003\022\026\n\rBOLL1minLOWER\030\334\001 \001(\003\022\024\n\013BO",
      "LL5minMID\030\335\001 \001(\003\022\026\n\rBOLL5minUPPER\030\336\001 \001(\003" +
      "\022\026\n\rBOLL5minLOWER\030\337\001 \001(\003\022\024\n\013BOLL1dayMID\030" +
      "\340\001 \001(\003\022\026\n\rBOLL1dayUPPER\030\341\001 \001(\003\022\026\n\rBOLL1d" +
      "ayLOWER\030\342\001 \001(\003\022\020\n\007VOL1min\030\343\001 \001(\003\022\023\n\nVOL1" +
      "minMA1\030\344\001 \001(\003\022\023\n\nVOL1minMA2\030\345\001 \001(\003\022\023\n\nVO" +
      "L1minMA3\030\346\001 \001(\003\022\020\n\007VOL5min\030\347\001 \001(\003\022\023\n\nVOL" +
      "5minMA1\030\350\001 \001(\003\022\023\n\nVOL5minMA2\030\351\001 \001(\003\022\023\n\nV" +
      "OL5minMA3\030\352\001 \001(\003\022\020\n\007VOL1day\030\353\001 \001(\003\022\023\n\nVO" +
      "L1dayMA1\030\354\001 \001(\003\022\023\n\nVOL1dayMA2\030\355\001 \001(\003\022\023\n\n" +
      "VOL1dayMA3\030\356\001 \001(\003\022\023\n\nARBR1minAR\030\357\001 \001(\003\022\023",
      "\n\nARBR1minBR\030\360\001 \001(\003\022\023\n\nARBR5minAR\030\361\001 \001(\003" +
      "\022\023\n\nARBR5minBR\030\362\001 \001(\003\022\023\n\nARBR1dayAR\030\363\001 \001" +
      "(\003\022\023\n\nARBR1dayBR\030\364\001 \001(\003\022\026\n\rBIAS1minBIAS1" +
      "\030\365\001 \001(\003\022\026\n\rBIAS1minBIAS2\030\366\001 \001(\003\022\026\n\rBIAS1" +
      "minBIAS3\030\367\001 \001(\003\022\026\n\rBIAS5minBIAS1\030\370\001 \001(\003\022" +
      "\026\n\rBIAS5minBIAS2\030\371\001 \001(\003\022\026\n\rBIAS5minBIAS3" +
      "\030\372\001 \001(\003\022\026\n\rBIAS1dayBIAS1\030\373\001 \001(\003\022\026\n\rBIAS1" +
      "dayBIAS2\030\374\001 \001(\003\022\026\n\rBIAS1dayBIAS3\030\375\001 \001(\003\022" +
      "\020\n\007CCI1min\030\376\001 \001(\003\022\020\n\007CCI5min\030\377\001 \001(\003\022\020\n\007C" +
      "CI1day\030\200\002 \001(\003\022\025\n\014CJBS1minCJBS\030\201\002 \001(\003\022\025\n\014",
      "CJBS5minCJBS\030\202\002 \001(\003\022\025\n\014CJBS1dayCJBS\030\203\002 \001" +
      "(\003\022\021\n\010CR1minCR\030\204\002 \001(\003\022\022\n\tCR1minMA1\030\205\002 \001(" +
      "\003\022\022\n\tCR1minMA2\030\206\002 \001(\003\022\022\n\tCR1minMA3\030\207\002 \001(" +
      "\003\022\021\n\010CR5minCR\030\210\002 \001(\003\022\022\n\tCR5minMA1\030\211\002 \001(\003" +
      "\022\022\n\tCR5minMA2\030\212\002 \001(\003\022\022\n\tCR5minMA3\030\213\002 \001(\003" +
      "\022\021\n\010CR1dayCR\030\214\002 \001(\003\022\022\n\tCR1dayMA1\030\215\002 \001(\003\022" +
      "\022\n\tCR1dayMA2\030\216\002 \001(\003\022\022\n\tCR1dayMA3\030\217\002 \001(\003\022" +
      "\023\n\nDMA1minDDD\030\220\002 \001(\003\022\023\n\nDMA1minAMA\030\221\002 \001(" +
      "\003\022\023\n\nDMA5minDDD\030\222\002 \001(\003\022\023\n\nDMA5minAMA\030\223\002 " +
      "\001(\003\022\023\n\nDMA1dayDDD\030\224\002 \001(\003\022\023\n\nDMA1dayAMA\030\225",
      "\002 \001(\003\022\023\n\nDMI1minPDI\030\226\002 \001(\003\022\023\n\nDMI1minMDI" +
      "\030\227\002 \001(\003\022\023\n\nDMI1minADX\030\230\002 \001(\003\022\024\n\013DMI1minA" +
      "DXR\030\231\002 \001(\003\022\023\n\nDMI5minPDI\030\232\002 \001(\003\022\023\n\nDMI5m" +
      "inMDI\030\233\002 \001(\003\022\023\n\nDMI5minADX\030\234\002 \001(\003\022\024\n\013DMI" +
      "5minADXR\030\235\002 \001(\003\022\023\n\nDMI1dayPDI\030\236\002 \001(\003\022\023\n\n" +
      "DMI1dayMDI\030\237\002 \001(\003\022\023\n\nDMI1dayADX\030\240\002 \001(\003\022\024" +
      "\n\013DMI1dayADXR\030\241\002 \001(\003\022\021\n\010KDJ1minK\030\242\002 \001(\003\022" +
      "\021\n\010KDJ1minD\030\243\002 \001(\003\022\021\n\010KDJ1minJ\030\244\002 \001(\003\022\021\n" +
      "\010KDJ5minK\030\245\002 \001(\003\022\021\n\010KDJ5minD\030\246\002 \001(\003\022\021\n\010K" +
      "DJ5minJ\030\247\002 \001(\003\022\021\n\010KDJ1dayK\030\250\002 \001(\003\022\021\n\010KDJ",
      "1dayD\030\251\002 \001(\003\022\021\n\010KDJ1dayJ\030\252\002 \001(\003\022\025\n\014MACD1" +
      "minDIFF\030\253\002 \001(\003\022\024\n\013MACD1minDEA\030\254\002 \001(\003\022\025\n\014" +
      "MACD1minMACD\030\255\002 \001(\003\022\025\n\014MACD5minDIFF\030\256\002 \001" +
      "(\003\022\024\n\013MACD5minDEA\030\257\002 \001(\003\022\025\n\014MACD5minMACD" +
      "\030\260\002 \001(\003\022\025\n\014MACD1dayDIFF\030\261\002 \001(\003\022\024\n\013MACD1d" +
      "ayDEA\030\262\002 \001(\003\022\025\n\014MACD1dayMACD\030\263\002 \001(\003\022\020\n\007O" +
      "BV1min\030\264\002 \001(\003\022\020\n\007OBV5min\030\265\002 \001(\003\022\020\n\007OBV1d" +
      "ay\030\266\002 \001(\003\022\020\n\007PSY1min\030\267\002 \001(\003\022\020\n\007PSY5min\030\270" +
      "\002 \001(\003\022\020\n\007PSY1day\030\271\002 \001(\003\022\024\n\013RSI1minRSI1\030\272" +
      "\002 \001(\003\022\024\n\013RSI1minRSI2\030\273\002 \001(\003\022\024\n\013RSI1minRS",
      "I3\030\274\002 \001(\003\022\024\n\013RSI5minRSI1\030\275\002 \001(\003\022\024\n\013RSI5m" +
      "inRSI2\030\276\002 \001(\003\022\024\n\013RSI5minRSI3\030\277\002 \001(\003\022\024\n\013R" +
      "SI1dayRSI1\030\300\002 \001(\003\022\024\n\013RSI1dayRSI2\030\301\002 \001(\003\022" +
      "\024\n\013RSI1dayRSI3\030\302\002 \001(\003\022\022\n\tWR1minWR1\030\303\002 \001(" +
      "\003\022\022\n\tWR1minWR2\030\304\002 \001(\003\022\022\n\tWR5minWR1\030\305\002 \001(" +
      "\003\022\022\n\tWR5minWR2\030\306\002 \001(\003\022\022\n\tWR1dayWR1\030\307\002 \001(" +
      "\003\022\022\n\tWR1dayWR2\030\310\002 \001(\003\022\020\n\007LeiXing\030\220\003 \001(\003\022" +
      "\022\n\tZiLeiXing\030\221\003 \001(\003\022\031\n\020LeiXingMingCheng\030" +
      "\222\003 \001(\t\022\035\n\024ChengJiaoLiangDanWei\030\223\003 \001(\003\022\024\n" +
      "\013FJJJLeiXing\030\365\003 \001(\003\022\025\n\014ZhengTiYiJia\030\366\003 \001",
      "(\003\022\017\n\006MYiJia\030\247\004 \001(\003\022\027\n\016MShiShiJingZhi\030\250\004" +
      " \001(\003\022\031\n\020MShangZheXuZhang\030\251\004 \001(\003\022\025\n\014MXiaZ" +
      "heXuDie\030\252\004 \001(\003\022\025\n\014YinHanShouYi\030\377\003 \001(\003\022\025\n" +
      "\014JiaGeGangGan\030\200\004 \001(\003\022\024\n\013PinZhongObj\030\331\004 \001" +
      "(\t\022\021\n\010BaoGaoQi\030\332\004 \001(\t\022\025\n\014ShangShiRiQi\030\333\004" +
      " \001(\t\022\024\n\013MeiGuShouYi\030\334\004 \001(\003\022\030\n\017MeiGuJingZ" +
      "iChan\030\335\004 \001(\003\022\033\n\022JingZiChanShouYiLv\030\336\004 \001(" +
      "\003\022\035\n\024MeiGuJingYingXianJin\030\337\004 \001(\003\022\027\n\016MeiG" +
      "uGongJiJin\030\340\004 \001(\003\022\027\n\016MeiGuWeiFenPei\030\341\004 \001" +
      "(\003\022\027\n\016GuDongQuanYiBi\030\342\004 \001(\003\022\030\n\017JingLiRun",
      "TongBi\030\343\004 \001(\003\022\034\n\023ZhuYingShouRuTongBi\030\344\004 " +
      "\001(\003\022\030\n\017XiaoShouMaoLiLv\030\345\004 \001(\003\022\035\n\024TiaoZhe" +
      "ngMeiGuJingZi\030\346\004 \001(\003\022\023\n\nZongZiChan\030\347\004 \001(" +
      "\003\022\026\n\rLiuDongZiChan\030\350\004 \001(\003\022\025\n\014GuDingZiCha" +
      "n\030\351\004 \001(\003\022\025\n\014WuXingZiChan\030\352\004 \001(\003\022\026\n\rLiuDo" +
      "ngFuZhai\030\353\004 \001(\003\022\026\n\rChangQiFuZhai\030\354\004 \001(\003\022" +
      "\023\n\nZongFuZhai\030\355\004 \001(\003\022\025\n\014GuDongQuanYi\030\356\004 " +
      "\001(\003\022\027\n\016ZiBenGongJiJin\030\357\004 \001(\003\022 \n\027JingYing" +
      "XianJinLiuLiang\030\360\004 \001(\003\022\035\n\024TouZiXianJinLi" +
      "uLiang\030\361\004 \001(\003\022\036\n\025ChouZiXianJinLiuLiang\030\362",
      "\004 \001(\003\022\030\n\017XianJinZengJiaE\030\363\004 \001(\003\022\026\n\rZhuYi" +
      "ngShouRu\030\364\004 \001(\003\022\025\n\014ZhuYingLiRun\030\365\004 \001(\003\022\024" +
      "\n\013YingYeLiRun\030\366\004 \001(\003\022\024\n\013TouZiShouYi\030\367\004 \001" +
      "(\003\022\031\n\020YingYeWaiShouZhi\030\370\004 \001(\003\022\023\n\nLiRunZo" +
      "ngE\030\371\004 \001(\003\022\022\n\tJingLiRun\030\372\004 \001(\003\022\027\n\016WeiFen" +
      "PeiLiRun\030\373\004 \001(\003\022\022\n\tZongGuBen\030\374\004 \001(\003\022\031\n\020W" +
      "uXianShouGuHeJi\030\375\004 \001(\003\022\023\n\nLiuTongAGu\030\376\004 " +
      "\001(\003\022\023\n\nLiuTongBGu\030\377\004 \001(\003\022\032\n\021JingWaiShang" +
      "ShiGu\030\200\005 \001(\003\022\026\n\rQiTaLiuTongGu\030\201\005 \001(\003\022\027\n\016" +
      "XianShouGuHeJi\030\202\005 \001(\003\022\024\n\013GuoJiaChiGu\030\203\005 ",
      "\001(\003\022\026\n\rGuoYouFaRenGu\030\204\005 \001(\003\022\027\n\016JingNeiFa" +
      "RenGu\030\205\005 \001(\003\022\032\n\021JingNeiZiRanRenGu\030\206\005 \001(\003" +
      "\022\026\n\rQiTaFaQiRenGu\030\207\005 \001(\003\022\024\n\013MuJiFaRenGu\030" +
      "\210\005 \001(\003\022\027\n\016JingWaiFaRenGu\030\211\005 \001(\003\022\032\n\021JingW" +
      "aiZiRanRenGu\030\212\005 \001(\003\022\031\n\020YouXianGuHuoQiTa\030" +
      "\213\005 \001(\003B\022\n\020com.dzhyun.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_dzhyun_StkData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dzhyun_StkData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dzhyun_StkData_descriptor,
        new java.lang.String[] { "Obj", "JiaoYiDaiMa", "ZhongWenJianCheng", "ZuiXinJia", "KaiPanJia", "ZuiGaoJia", "ZuiDiJia", "ZuoShou", "JunJia", "ZhangDie", "ZhangFu", "ZhenFu", "ChengJiaoLiang", "XianShou", "ChengJiaoE", "ZongChengJiaoBiShu", "MeiBiChengJiaoGuShu", "HuanShou", "LiangBi", "NeiPan", "WaiPan", "ZongMaiRu", "ZongMaiChu", "ZongMaiRuJunJia", "ZongMaiChuJunJia", "WeiTuoMaiRuJia1", "WeiTuoMaiRuJia2", "WeiTuoMaiRuJia3", "WeiTuoMaiRuJia4", "WeiTuoMaiRuJia5", "WeiTuoMaiRuLiang1", "WeiTuoMaiRuLiang2", "WeiTuoMaiRuLiang3", "WeiTuoMaiRuLiang4", "WeiTuoMaiRuLiang5", "WeiTuoMaiChuJia1", "WeiTuoMaiChuJia2", "WeiTuoMaiChuJia3", "WeiTuoMaiChuJia4", "WeiTuoMaiChuJia5", "WeiTuoMaiChuLiang1", "WeiTuoMaiChuLiang2", "WeiTuoMaiChuLiang3", "WeiTuoMaiChuLiang4", "WeiTuoMaiChuLiang5", "WeiBi", "WeiCha", "ZhangSu", "JunLiang5Ri", "ShangZhangJiaShu", "XiaDieJiaShu", "PingPanJiaShu", "AGuShangZhangJiaShu", "AGuXiaDieJiaShu", "AGuPingPanJiaShu", "AGuChengJiaoE", "BGuShangZhangJiaShu", "BGuXiaDieJiaShu", "BGuPingPanJiaShu", "BGuChengJiaoE", "JiJinShangZhangJiaShu", "JiJinXiaDieJiaShu", "JiJinPingPanJiaShu", "JiJinChengJiaoE", "QiTaShangZhangJiaShu", "QiTaXiaDieJiaShu", "QiTaPingPanJiaShu", "QiTaChengJiaoE", "MaiRuDanShu", "MaiChuDanShu", "MaiRuZhongDanBiLi", "MaiRuDaDanBiLi", "MaiRuTeDaDanBiLi", "MaiChuZhongDanBiLi", "MaiChuDaDanBiLi", "MaiChuTeDaDanBiLi", "FenZhongZhangFu1", "FenZhongZhangFu2", "FenZhongZhangFu3", "FenZhongZhangFu4", "FenZhongZhangFu5", "ShiYingLv", "ZhangTing", "DieTing", "ShiChangMingCheng", "ShiChangDuanMingCheng", "JiGouChiHuoShu", "JiGouTuHuoShu", "JiGouChiHuoLiang", "JiGouTuHuoLiang", "JiGouChiHuoJunE", "JiGouTuHuoJunE", "MeiShouGuShu", "JiaoYiDanWei", "ShiXiaoLv", "ShiJian", "ShiJingLv", "ZongShiZhi", "LiuTongShiZhi", "MA1MinMA1", "MA1MinMA2", "MA1MinMA3", "MA1MinMA4", "MA1MinMA5", "MA1MinMA6", "MA5MinMA1", "MA5MinMA2", "MA5MinMA3", "MA5MinMA4", "MA5MinMA5", "MA5MinMA6", "MA1DayMA1", "MA1DayMA2", "MA1DayMA3", "MA1DayMA4", "MA1DayMA5", "MA1DayMA6", "BOLL1MinMID", "BOLL1MinUPPER", "BOLL1MinLOWER", "BOLL5MinMID", "BOLL5MinUPPER", "BOLL5MinLOWER", "BOLL1DayMID", "BOLL1DayUPPER", "BOLL1DayLOWER", "VOL1Min", "VOL1MinMA1", "VOL1MinMA2", "VOL1MinMA3", "VOL5Min", "VOL5MinMA1", "VOL5MinMA2", "VOL5MinMA3", "VOL1Day", "VOL1DayMA1", "VOL1DayMA2", "VOL1DayMA3", "ARBR1MinAR", "ARBR1MinBR", "ARBR5MinAR", "ARBR5MinBR", "ARBR1DayAR", "ARBR1DayBR", "BIAS1MinBIAS1", "BIAS1MinBIAS2", "BIAS1MinBIAS3", "BIAS5MinBIAS1", "BIAS5MinBIAS2", "BIAS5MinBIAS3", "BIAS1DayBIAS1", "BIAS1DayBIAS2", "BIAS1DayBIAS3", "CCI1Min", "CCI5Min", "CCI1Day", "CJBS1MinCJBS", "CJBS5MinCJBS", "CJBS1DayCJBS", "CR1MinCR", "CR1MinMA1", "CR1MinMA2", "CR1MinMA3", "CR5MinCR", "CR5MinMA1", "CR5MinMA2", "CR5MinMA3", "CR1DayCR", "CR1DayMA1", "CR1DayMA2", "CR1DayMA3", "DMA1MinDDD", "DMA1MinAMA", "DMA5MinDDD", "DMA5MinAMA", "DMA1DayDDD", "DMA1DayAMA", "DMI1MinPDI", "DMI1MinMDI", "DMI1MinADX", "DMI1MinADXR", "DMI5MinPDI", "DMI5MinMDI", "DMI5MinADX", "DMI5MinADXR", "DMI1DayPDI", "DMI1DayMDI", "DMI1DayADX", "DMI1DayADXR", "KDJ1MinK", "KDJ1MinD", "KDJ1MinJ", "KDJ5MinK", "KDJ5MinD", "KDJ5MinJ", "KDJ1DayK", "KDJ1DayD", "KDJ1DayJ", "MACD1MinDIFF", "MACD1MinDEA", "MACD1MinMACD", "MACD5MinDIFF", "MACD5MinDEA", "MACD5MinMACD", "MACD1DayDIFF", "MACD1DayDEA", "MACD1DayMACD", "OBV1Min", "OBV5Min", "OBV1Day", "PSY1Min", "PSY5Min", "PSY1Day", "RSI1MinRSI1", "RSI1MinRSI2", "RSI1MinRSI3", "RSI5MinRSI1", "RSI5MinRSI2", "RSI5MinRSI3", "RSI1DayRSI1", "RSI1DayRSI2", "RSI1DayRSI3", "WR1MinWR1", "WR1MinWR2", "WR5MinWR1", "WR5MinWR2", "WR1DayWR1", "WR1DayWR2", "LeiXing", "ZiLeiXing", "LeiXingMingCheng", "ChengJiaoLiangDanWei", "FJJJLeiXing", "ZhengTiYiJia", "MYiJia", "MShiShiJingZhi", "MShangZheXuZhang", "MXiaZheXuDie", "YinHanShouYi", "JiaGeGangGan", "PinZhongObj", "BaoGaoQi", "ShangShiRiQi", "MeiGuShouYi", "MeiGuJingZiChan", "JingZiChanShouYiLv", "MeiGuJingYingXianJin", "MeiGuGongJiJin", "MeiGuWeiFenPei", "GuDongQuanYiBi", "JingLiRunTongBi", "ZhuYingShouRuTongBi", "XiaoShouMaoLiLv", "TiaoZhengMeiGuJingZi", "ZongZiChan", "LiuDongZiChan", "GuDingZiChan", "WuXingZiChan", "LiuDongFuZhai", "ChangQiFuZhai", "ZongFuZhai", "GuDongQuanYi", "ZiBenGongJiJin", "JingYingXianJinLiuLiang", "TouZiXianJinLiuLiang", "ChouZiXianJinLiuLiang", "XianJinZengJiaE", "ZhuYingShouRu", "ZhuYingLiRun", "YingYeLiRun", "TouZiShouYi", "YingYeWaiShouZhi", "LiRunZongE", "JingLiRun", "WeiFenPeiLiRun", "ZongGuBen", "WuXianShouGuHeJi", "LiuTongAGu", "LiuTongBGu", "JingWaiShangShiGu", "QiTaLiuTongGu", "XianShouGuHeJi", "GuoJiaChiGu", "GuoYouFaRenGu", "JingNeiFaRenGu", "JingNeiZiRanRenGu", "QiTaFaQiRenGu", "MuJiFaRenGu", "JingWaiFaRenGu", "JingWaiZiRanRenGu", "YouXianGuHuoQiTa", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
